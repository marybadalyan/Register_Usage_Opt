Microsoft (R) COFF/PE Dumper Version 14.43.34808.0
Copyright (C) Microsoft Corporation.  All rights reserved.


Dump of file C:\Users\MeriBadalyan\Register_Usage_Opt\build\Register_Usage_Opt.dir\Release\main.obj

File Type: COFF OBJECT

??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)):
  0000000000000000: 48 83 7A 18 0F     cmp         qword ptr [rdx+18h],0Fh
  0000000000000005: 4C 8B 42 10        mov         r8,qword ptr [rdx+10h]
  0000000000000009: 76 03              jbe         000000000000000E
  000000000000000B: 48 8B 12           mov         rdx,qword ptr [rdx]
  000000000000000E: E9 00 00 00 00     jmp         ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z

??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,char)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 54              push        r12
  000000000000000E: 41 56              push        r14
  0000000000000010: 41 57              push        r15
  0000000000000012: 48 83 EC 30        sub         rsp,30h
  0000000000000016: 44 0F B6 E2        movzx       r12d,dl
  000000000000001A: 48 8B F1           mov         rsi,rcx
  000000000000001D: 33 DB              xor         ebx,ebx
  000000000000001F: 89 5C 24 70        mov         dword ptr [rsp+70h],ebx
  0000000000000023: 4C 8B F9           mov         r15,rcx
  0000000000000026: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  000000000000002B: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000002E: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000032: 49 03 CF           add         rcx,r15
  0000000000000035: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  000000000000003B: 48 85 C0           test        rax,rax
  000000000000003E: 74 0D              je          000000000000004D
  0000000000000040: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000043: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  0000000000000047: 48 8B C8           mov         rcx,rax
  000000000000004A: FF D2              call        rdx
  000000000000004C: 90                 nop
  000000000000004D: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000050: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000054: 48 03 CE           add         rcx,rsi
  0000000000000057: FF 15 00 00 00 00  call        qword ptr [__imp_?good@ios_base@std@@QEBA_NXZ]
  000000000000005D: 84 C0              test        al,al
  000000000000005F: 74 37              je          0000000000000098
  0000000000000061: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000064: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000068: 48 03 CE           add         rcx,rsi
  000000000000006B: FF 15 00 00 00 00  call        qword ptr [__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ]
  0000000000000071: 48 85 C0           test        rax,rax
  0000000000000074: 74 20              je          0000000000000096
  0000000000000076: 48 3B C6           cmp         rax,rsi
  0000000000000079: 74 1B              je          0000000000000096
  000000000000007B: 48 8B C8           mov         rcx,rax
  000000000000007E: FF 15 00 00 00 00  call        qword ptr [__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ]
  0000000000000084: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000087: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000008B: 48 03 CE           add         rcx,rsi
  000000000000008E: FF 15 00 00 00 00  call        qword ptr [__imp_?good@ios_base@std@@QEBA_NXZ]
  0000000000000094: EB 02              jmp         0000000000000098
  0000000000000096: B0 01              mov         al,1
  0000000000000098: 88 44 24 28        mov         byte ptr [rsp+28h],al
  000000000000009C: 84 C0              test        al,al
  000000000000009E: 0F 84 2A 01 00 00  je          00000000000001CE
  00000000000000A4: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000A7: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000AB: 48 03 CE           add         rcx,rsi
  00000000000000AE: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  00000000000000B4: 48 83 F8 01        cmp         rax,1
  00000000000000B8: 7F 05              jg          00000000000000BF
  00000000000000BA: 4C 8B F3           mov         r14,rbx
  00000000000000BD: EB 14              jmp         00000000000000D3
  00000000000000BF: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000C2: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000C6: 48 03 CE           add         rcx,rsi
  00000000000000C9: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  00000000000000CF: 4C 8D 70 FF        lea         r14,[rax-1]
  00000000000000D3: 48 8B 0E           mov         rcx,qword ptr [rsi]
  00000000000000D6: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000000DA: 48 03 CE           add         rcx,rsi
  00000000000000DD: FF 15 00 00 00 00  call        qword ptr [__imp_?flags@ios_base@std@@QEBAHXZ]
  00000000000000E3: 25 C0 01 00 00     and         eax,1C0h
  00000000000000E8: 83 F8 40           cmp         eax,40h
  00000000000000EB: 74 55              je          0000000000000142
  00000000000000ED: 0F 1F 00           nop         dword ptr [rax]
  00000000000000F0: 85 DB              test        ebx,ebx
  00000000000000F2: 0F 85 C6 00 00 00  jne         00000000000001BE
  00000000000000F8: 4D 85 F6           test        r14,r14
  00000000000000FB: 7E 45              jle         0000000000000142
  00000000000000FD: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000100: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000104: 48 03 CE           add         rcx,rsi
  0000000000000107: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  000000000000010D: 48 8B F8           mov         rdi,rax
  0000000000000110: 48 8B 0E           mov         rcx,qword ptr [rsi]
  0000000000000113: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  0000000000000117: 48 03 CE           add         rcx,rsi
  000000000000011A: FF 15 00 00 00 00  call        qword ptr [__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ]
  0000000000000120: 0F B6 D0           movzx       edx,al
  0000000000000123: 48 8B CF           mov         rcx,rdi
  0000000000000126: FF 15 00 00 00 00  call        qword ptr [__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z]
  000000000000012C: 49 FF CE           dec         r14
  000000000000012F: 8B CB              mov         ecx,ebx
  0000000000000131: 83 C9 04           or          ecx,4
  0000000000000134: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000137: 0F 45 CB           cmovne      ecx,ebx
  000000000000013A: 8B D9              mov         ebx,ecx
  000000000000013C: 89 4C 24 70        mov         dword ptr [rsp+70h],ecx
  0000000000000140: EB AE              jmp         00000000000000F0
  0000000000000142: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000145: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000149: 48 03 CE           add         rcx,rsi
  000000000000014C: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000152: 41 0F B6 D4        movzx       edx,r12b
  0000000000000156: 48 8B C8           mov         rcx,rax
  0000000000000159: FF 15 00 00 00 00  call        qword ptr [__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z]
  000000000000015F: B9 04 00 00 00     mov         ecx,4
  0000000000000164: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000167: 0F 44 D9           cmove       ebx,ecx
  000000000000016A: 89 5C 24 70        mov         dword ptr [rsp+70h],ebx
  000000000000016E: 66 90              nop
  0000000000000170: 85 DB              test        ebx,ebx
  0000000000000172: 75 4A              jne         00000000000001BE
  0000000000000174: 4D 85 F6           test        r14,r14
  0000000000000177: 7E 45              jle         00000000000001BE
  0000000000000179: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000017C: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000180: 48 03 CE           add         rcx,rsi
  0000000000000183: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000189: 48 8B F8           mov         rdi,rax
  000000000000018C: 48 8B 0E           mov         rcx,qword ptr [rsi]
  000000000000018F: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  0000000000000193: 48 03 CE           add         rcx,rsi
  0000000000000196: FF 15 00 00 00 00  call        qword ptr [__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ]
  000000000000019C: 0F B6 D0           movzx       edx,al
  000000000000019F: 48 8B CF           mov         rcx,rdi
  00000000000001A2: FF 15 00 00 00 00  call        qword ptr [__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z]
  00000000000001A8: 49 FF CE           dec         r14
  00000000000001AB: 8B CB              mov         ecx,ebx
  00000000000001AD: 83 C9 04           or          ecx,4
  00000000000001B0: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000001B3: 0F 45 CB           cmovne      ecx,ebx
  00000000000001B6: 8B D9              mov         ebx,ecx
  00000000000001B8: 89 4C 24 70        mov         dword ptr [rsp+70h],ecx
  00000000000001BC: EB B2              jmp         0000000000000170
  00000000000001BE: EB 0E              jmp         00000000000001CE
$LN21:
  00000000000001C0: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  00000000000001C5: 8B 5C 24 70        mov         ebx,dword ptr [rsp+70h]
  00000000000001C9: 4C 8B 7C 24 20     mov         r15,qword ptr [rsp+20h]
  00000000000001CE: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001D1: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001D5: 48 03 CE           add         rcx,rsi
  00000000000001D8: 33 D2              xor         edx,edx
  00000000000001DA: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEAA_J_J@Z]
  00000000000001E0: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001E3: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001E7: 48 03 CE           add         rcx,rsi
  00000000000001EA: 45 33 C0           xor         r8d,r8d
  00000000000001ED: 8B D3              mov         edx,ebx
  00000000000001EF: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  00000000000001F5: 90                 nop
  00000000000001F6: E8 00 00 00 00     call        ?uncaught_exception@std@@YA_NXZ
  00000000000001FB: 84 C0              test        al,al
  00000000000001FD: 75 0A              jne         0000000000000209
  00000000000001FF: 49 8B CF           mov         rcx,r15
  0000000000000202: FF 15 00 00 00 00  call        qword ptr [__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ]
  0000000000000208: 90                 nop
  0000000000000209: 49 8B 07           mov         rax,qword ptr [r15]
  000000000000020C: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000210: 49 03 CF           add         rcx,r15
  0000000000000213: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000219: 48 85 C0           test        rax,rax
  000000000000021C: 74 0D              je          000000000000022B
  000000000000021E: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000221: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  0000000000000225: 48 8B C8           mov         rcx,rax
  0000000000000228: FF D2              call        rdx
  000000000000022A: 90                 nop
  000000000000022B: 48 8B C6           mov         rax,rsi
  000000000000022E: 48 8B 5C 24 68     mov         rbx,qword ptr [rsp+68h]
  0000000000000233: 48 83 C4 30        add         rsp,30h
  0000000000000237: 41 5F              pop         r15
  0000000000000239: 41 5E              pop         r14
  000000000000023B: 41 5C              pop         r12
  000000000000023D: 5F                 pop         rdi
  000000000000023E: 5E                 pop         rsi
  000000000000023F: C3                 ret

?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA (int `class dtor$0::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class dtor$0::std &,char)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA (int `class dtor$1::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class dtor$1::std &,char)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA (int `class catch$4::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class catch$4::std &,char)'::`1'::catch$4):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$0:
  000000000000000D: 48 8B 55 60        mov         rdx,qword ptr [rbp+60h]
  0000000000000011: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000014: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000018: 48 03 CA           add         rcx,rdx
  000000000000001B: 41 B0 01           mov         r8b,1
  000000000000001E: BA 04 00 00 00     mov         edx,4
  0000000000000023: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  0000000000000029: 90                 nop
  000000000000002A: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000034: 48 83 C4 20        add         rsp,20h
  0000000000000038: 5D                 pop         rbp
  0000000000000039: C3                 ret
  000000000000003A: CC                 int         3

??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,char const *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 30        sub         rsp,30h
  000000000000001C: 4C 8B E2           mov         r12,rdx
  000000000000001F: 48 8B F1           mov         rsi,rcx
  0000000000000022: 33 FF              xor         edi,edi
  0000000000000024: 89 7C 24 70        mov         dword ptr [rsp+70h],edi
  0000000000000028: 49 C7 C7 FF FF FF  mov         r15,0FFFFFFFFFFFFFFFFh
                    FF
  000000000000002F: 90                 nop
  0000000000000030: 49 FF C7           inc         r15
  0000000000000033: 42 38 3C 3A        cmp         byte ptr [rdx+r15],dil
  0000000000000037: 75 F7              jne         0000000000000030
  0000000000000039: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000003C: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000040: 48 03 CE           add         rcx,rsi
  0000000000000043: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  0000000000000049: 48 85 C0           test        rax,rax
  000000000000004C: 7E 2D              jle         000000000000007B
  000000000000004E: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000051: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000055: 48 03 CE           add         rcx,rsi
  0000000000000058: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  000000000000005E: 49 3B C7           cmp         rax,r15
  0000000000000061: 7E 18              jle         000000000000007B
  0000000000000063: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000066: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000006A: 48 03 CE           add         rcx,rsi
  000000000000006D: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  0000000000000073: 4C 8B F0           mov         r14,rax
  0000000000000076: 4D 2B F7           sub         r14,r15
  0000000000000079: EB 03              jmp         000000000000007E
  000000000000007B: 4C 8B F7           mov         r14,rdi
  000000000000007E: 4C 8B EE           mov         r13,rsi
  0000000000000081: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  0000000000000086: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000089: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000008D: 48 03 CE           add         rcx,rsi
  0000000000000090: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000096: 48 85 C0           test        rax,rax
  0000000000000099: 74 0D              je          00000000000000A8
  000000000000009B: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000009E: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  00000000000000A2: 48 8B C8           mov         rcx,rax
  00000000000000A5: FF D2              call        rdx
  00000000000000A7: 90                 nop
  00000000000000A8: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000AB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000AF: 48 03 CE           add         rcx,rsi
  00000000000000B2: FF 15 00 00 00 00  call        qword ptr [__imp_?good@ios_base@std@@QEBA_NXZ]
  00000000000000B8: 84 C0              test        al,al
  00000000000000BA: 74 37              je          00000000000000F3
  00000000000000BC: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000BF: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000C3: 48 03 CE           add         rcx,rsi
  00000000000000C6: FF 15 00 00 00 00  call        qword ptr [__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ]
  00000000000000CC: 48 85 C0           test        rax,rax
  00000000000000CF: 74 20              je          00000000000000F1
  00000000000000D1: 48 3B C6           cmp         rax,rsi
  00000000000000D4: 74 1B              je          00000000000000F1
  00000000000000D6: 48 8B C8           mov         rcx,rax
  00000000000000D9: FF 15 00 00 00 00  call        qword ptr [__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ]
  00000000000000DF: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000E2: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000E6: 48 03 CE           add         rcx,rsi
  00000000000000E9: FF 15 00 00 00 00  call        qword ptr [__imp_?good@ios_base@std@@QEBA_NXZ]
  00000000000000EF: EB 02              jmp         00000000000000F3
  00000000000000F1: B0 01              mov         al,1
  00000000000000F3: 88 44 24 28        mov         byte ptr [rsp+28h],al
  00000000000000F7: 84 C0              test        al,al
  00000000000000F9: 75 0A              jne         0000000000000105
  00000000000000FB: BF 04 00 00 00     mov         edi,4
  0000000000000100: E9 F3 00 00 00     jmp         00000000000001F8
  0000000000000105: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000108: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000010C: 48 03 CE           add         rcx,rsi
  000000000000010F: FF 15 00 00 00 00  call        qword ptr [__imp_?flags@ios_base@std@@QEBAHXZ]
  0000000000000115: 25 C0 01 00 00     and         eax,1C0h
  000000000000011A: 83 F8 40           cmp         eax,40h
  000000000000011D: 74 46              je          0000000000000165
  000000000000011F: 90                 nop
  0000000000000120: 4D 85 F6           test        r14,r14
  0000000000000123: 7E 40              jle         0000000000000165
  0000000000000125: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000128: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000012C: 48 03 CE           add         rcx,rsi
  000000000000012F: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000135: 48 8B D8           mov         rbx,rax
  0000000000000138: 48 8B 0E           mov         rcx,qword ptr [rsi]
  000000000000013B: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  000000000000013F: 48 03 CE           add         rcx,rsi
  0000000000000142: FF 15 00 00 00 00  call        qword ptr [__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ]
  0000000000000148: 0F B6 D0           movzx       edx,al
  000000000000014B: 48 8B CB           mov         rcx,rbx
  000000000000014E: FF 15 00 00 00 00  call        qword ptr [__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z]
  0000000000000154: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000157: 75 07              jne         0000000000000160
  0000000000000159: BF 04 00 00 00     mov         edi,4
  000000000000015E: EB 71              jmp         00000000000001D1
  0000000000000160: 49 FF CE           dec         r14
  0000000000000163: EB BB              jmp         0000000000000120
  0000000000000165: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000168: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000016C: 48 03 CE           add         rcx,rsi
  000000000000016F: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000175: 4D 8B C7           mov         r8,r15
  0000000000000178: 49 8B D4           mov         rdx,r12
  000000000000017B: 48 8B C8           mov         rcx,rax
  000000000000017E: FF 15 00 00 00 00  call        qword ptr [__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z]
  0000000000000184: 49 3B C7           cmp         rax,r15
  0000000000000187: 75 45              jne         00000000000001CE
  0000000000000189: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000190: 4D 85 F6           test        r14,r14
  0000000000000193: 7E 40              jle         00000000000001D5
  0000000000000195: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000198: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000019C: 48 03 CE           add         rcx,rsi
  000000000000019F: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  00000000000001A5: 48 8B D8           mov         rbx,rax
  00000000000001A8: 48 8B 0E           mov         rcx,qword ptr [rsi]
  00000000000001AB: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000001AF: 48 03 CE           add         rcx,rsi
  00000000000001B2: FF 15 00 00 00 00  call        qword ptr [__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ]
  00000000000001B8: 0F B6 D0           movzx       edx,al
  00000000000001BB: 48 8B CB           mov         rcx,rbx
  00000000000001BE: FF 15 00 00 00 00  call        qword ptr [__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z]
  00000000000001C4: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000001C7: 74 05              je          00000000000001CE
  00000000000001C9: 49 FF CE           dec         r14
  00000000000001CC: EB C2              jmp         0000000000000190
  00000000000001CE: 83 CF 04           or          edi,4
  00000000000001D1: 89 7C 24 70        mov         dword ptr [rsp+70h],edi
  00000000000001D5: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001D8: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001DC: 48 03 CE           add         rcx,rsi
  00000000000001DF: 33 D2              xor         edx,edx
  00000000000001E1: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEAA_J_J@Z]
  00000000000001E7: 90                 nop
  00000000000001E8: EB 0E              jmp         00000000000001F8
$LN23:
  00000000000001EA: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  00000000000001EF: 8B 7C 24 70        mov         edi,dword ptr [rsp+70h]
  00000000000001F3: 4C 8B 6C 24 20     mov         r13,qword ptr [rsp+20h]
  00000000000001F8: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001FB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001FF: 48 03 CE           add         rcx,rsi
  0000000000000202: 45 33 C0           xor         r8d,r8d
  0000000000000205: 8B D7              mov         edx,edi
  0000000000000207: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  000000000000020D: 90                 nop
  000000000000020E: E8 00 00 00 00     call        ?uncaught_exception@std@@YA_NXZ
  0000000000000213: 84 C0              test        al,al
  0000000000000215: 75 0A              jne         0000000000000221
  0000000000000217: 49 8B CD           mov         rcx,r13
  000000000000021A: FF 15 00 00 00 00  call        qword ptr [__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ]
  0000000000000220: 90                 nop
  0000000000000221: 49 8B 45 00        mov         rax,qword ptr [r13]
  0000000000000225: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000229: 49 03 CD           add         rcx,r13
  000000000000022C: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000232: 48 85 C0           test        rax,rax
  0000000000000235: 74 0D              je          0000000000000244
  0000000000000237: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000023A: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  000000000000023E: 48 8B C8           mov         rcx,rax
  0000000000000241: FF D2              call        rdx
  0000000000000243: 90                 nop
  0000000000000244: 48 8B C6           mov         rax,rsi
  0000000000000247: 48 8B 5C 24 68     mov         rbx,qword ptr [rsp+68h]
  000000000000024C: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  0000000000000251: 48 83 C4 30        add         rsp,30h
  0000000000000255: 41 5F              pop         r15
  0000000000000257: 41 5E              pop         r14
  0000000000000259: 41 5D              pop         r13
  000000000000025B: 41 5C              pop         r12
  000000000000025D: 5F                 pop         rdi
  000000000000025E: C3                 ret

?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class dtor$0::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class dtor$0::std &,char const *)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class dtor$1::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class dtor$1::std &,char const *)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class catch$4::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class catch$4::std &,char const *)'::`1'::catch$4):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  000000000000000D: 48 8B 55 60        mov         rdx,qword ptr [rbp+60h]
  0000000000000011: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000014: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000018: 48 03 CA           add         rcx,rdx
  000000000000001B: 41 B0 01           mov         r8b,1
  000000000000001E: BA 04 00 00 00     mov         edx,4
  0000000000000023: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  0000000000000029: 90                 nop
  000000000000002A: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000034: 48 83 C4 20        add         rsp,20h
  0000000000000038: 5D                 pop         rbp
  0000000000000039: C3                 ret
  000000000000003A: CC                 int         3

??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z (void * __cdecl std::_Allocate_manually_vector_aligned<struct std::_Default_allocate_traits>(unsigned __int64)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 41 27        lea         rax,[rcx+27h]
  0000000000000008: 48 3B C1           cmp         rax,rcx
  000000000000000B: 76 28              jbe         0000000000000035
  000000000000000D: 48 8B C8           mov         rcx,rax
  0000000000000010: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000015: 48 8B C8           mov         rcx,rax
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 74 11              je          000000000000002E
  000000000000001D: 48 83 C0 27        add         rax,27h
  0000000000000021: 48 83 E0 E0        and         rax,0FFFFFFFFFFFFFFE0h
  0000000000000025: 48 89 48 F8        mov         qword ptr [rax-8],rcx
  0000000000000029: 48 83 C4 28        add         rsp,28h
  000000000000002D: C3                 ret
  000000000000002E: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  0000000000000034: CC                 int         3
  0000000000000035: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  000000000000003A: CC                 int         3

??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z (private: void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Construct<1,char const *>(char const * const,unsigned __int64)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 41 56              push        r14
  0000000000000011: 48 83 EC 20        sub         rsp,20h
  0000000000000015: 48 BE FF FF FF FF  mov         rsi,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000001F: 49 8B D8           mov         rbx,r8
  0000000000000022: 48 8B EA           mov         rbp,rdx
  0000000000000025: 4C 8B F1           mov         r14,rcx
  0000000000000028: 4C 3B C6           cmp         r8,rsi
  000000000000002B: 0F 87 D2 00 00 00  ja          0000000000000103
  0000000000000031: 48 83 FB 0F        cmp         rbx,0Fh
  0000000000000035: 77 1B              ja          0000000000000052
  0000000000000037: 48 89 59 10        mov         qword ptr [rcx+10h],rbx
  000000000000003B: 48 C7 41 18 0F 00  mov         qword ptr [rcx+18h],0Fh
                    00 00
  0000000000000043: E8 00 00 00 00     call        memcpy
  0000000000000048: 42 C6 04 33 00     mov         byte ptr [rbx+r14],0
  000000000000004D: E9 9B 00 00 00     jmp         00000000000000ED
  0000000000000052: 48 8B C3           mov         rax,rbx
  0000000000000055: 48 89 7C 24 30     mov         qword ptr [rsp+30h],rdi
  000000000000005A: 48 83 C8 0F        or          rax,0Fh
  000000000000005E: 48 3B C6           cmp         rax,rsi
  0000000000000061: 76 29              jbe         000000000000008C
  0000000000000063: 48 B8 00 00 00 00  mov         rax,8000000000000000h
                    00 00 00 80
  000000000000006D: 48 83 C0 27        add         rax,27h
  0000000000000071: 48 8B C8           mov         rcx,rax
  0000000000000074: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000079: 48 85 C0           test        rax,rax
  000000000000007C: 74 3E              je          00000000000000BC
  000000000000007E: 48 8D 78 27        lea         rdi,[rax+27h]
  0000000000000082: 48 83 E7 E0        and         rdi,0FFFFFFFFFFFFFFE0h
  0000000000000086: 48 89 47 F8        mov         qword ptr [rdi-8],rax
  000000000000008A: EB 3F              jmp         00000000000000CB
  000000000000008C: B9 16 00 00 00     mov         ecx,16h
  0000000000000091: 48 8B F0           mov         rsi,rax
  0000000000000094: 48 3B C1           cmp         rax,rcx
  0000000000000097: 48 0F 42 F1        cmovb       rsi,rcx
  000000000000009B: 48 8D 4E 01        lea         rcx,[rsi+1]
  000000000000009F: 48 85 C9           test        rcx,rcx
  00000000000000A2: 75 04              jne         00000000000000A8
  00000000000000A4: 33 FF              xor         edi,edi
  00000000000000A6: EB 23              jmp         00000000000000CB
  00000000000000A8: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  00000000000000AF: 72 12              jb          00000000000000C3
  00000000000000B1: 48 8D 41 27        lea         rax,[rcx+27h]
  00000000000000B5: 48 3B C1           cmp         rax,rcx
  00000000000000B8: 76 4F              jbe         0000000000000109
  00000000000000BA: EB B5              jmp         0000000000000071
  00000000000000BC: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  00000000000000C2: CC                 int         3
  00000000000000C3: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000C8: 48 8B F8           mov         rdi,rax
  00000000000000CB: 4C 8B C3           mov         r8,rbx
  00000000000000CE: 49 89 3E           mov         qword ptr [r14],rdi
  00000000000000D1: 48 8B D5           mov         rdx,rbp
  00000000000000D4: 49 89 5E 10        mov         qword ptr [r14+10h],rbx
  00000000000000D8: 48 8B CF           mov         rcx,rdi
  00000000000000DB: 49 89 76 18        mov         qword ptr [r14+18h],rsi
  00000000000000DF: E8 00 00 00 00     call        memcpy
  00000000000000E4: C6 04 1F 00        mov         byte ptr [rdi+rbx],0
  00000000000000E8: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  00000000000000ED: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000F2: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  00000000000000F7: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000FC: 48 83 C4 20        add         rsp,20h
  0000000000000100: 41 5E              pop         r14
  0000000000000102: C3                 ret
  0000000000000103: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  0000000000000108: CC                 int         3
  0000000000000109: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  000000000000010E: CC                 int         3

??$_Fill_zero_memset@PEAH@std@@YAXPEAH_K@Z (void __cdecl std::_Fill_zero_memset<int *>(int *,unsigned __int64)):
  0000000000000000: 4C 8D 04 95 00 00  lea         r8,[rdx*4]
                    00 00
  0000000000000008: 33 D2              xor         edx,edx
  000000000000000A: E9 00 00 00 00     jmp         memset

??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class std::basic_ostream<char,struct std::char_traits<char> > &,char const * const,unsigned __int64)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 30        sub         rsp,30h
  000000000000001C: 4D 8B E0           mov         r12,r8
  000000000000001F: 4C 8B EA           mov         r13,rdx
  0000000000000022: 48 8B F9           mov         rdi,rcx
  0000000000000025: 33 F6              xor         esi,esi
  0000000000000027: 89 74 24 78        mov         dword ptr [rsp+78h],esi
  000000000000002B: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000002E: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000032: 48 03 CF           add         rcx,rdi
  0000000000000035: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  000000000000003B: 48 85 C0           test        rax,rax
  000000000000003E: 7E 2D              jle         000000000000006D
  0000000000000040: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000043: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000047: 48 03 CF           add         rcx,rdi
  000000000000004A: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  0000000000000050: 49 3B C4           cmp         rax,r12
  0000000000000053: 76 18              jbe         000000000000006D
  0000000000000055: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000058: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000005C: 48 03 CF           add         rcx,rdi
  000000000000005F: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  0000000000000065: 4C 8B F0           mov         r14,rax
  0000000000000068: 4D 2B F4           sub         r14,r12
  000000000000006B: EB 03              jmp         0000000000000070
  000000000000006D: 4C 8B F6           mov         r14,rsi
  0000000000000070: 4C 8B FF           mov         r15,rdi
  0000000000000073: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000078: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000007B: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000007F: 48 03 CF           add         rcx,rdi
  0000000000000082: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000088: 48 85 C0           test        rax,rax
  000000000000008B: 74 0D              je          000000000000009A
  000000000000008D: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000090: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  0000000000000094: 48 8B C8           mov         rcx,rax
  0000000000000097: FF D2              call        rdx
  0000000000000099: 90                 nop
  000000000000009A: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000009D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000A1: 48 03 CF           add         rcx,rdi
  00000000000000A4: FF 15 00 00 00 00  call        qword ptr [__imp_?good@ios_base@std@@QEBA_NXZ]
  00000000000000AA: 84 C0              test        al,al
  00000000000000AC: 74 37              je          00000000000000E5
  00000000000000AE: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000B1: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000B5: 48 03 CF           add         rcx,rdi
  00000000000000B8: FF 15 00 00 00 00  call        qword ptr [__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ]
  00000000000000BE: 48 85 C0           test        rax,rax
  00000000000000C1: 74 20              je          00000000000000E3
  00000000000000C3: 48 3B C7           cmp         rax,rdi
  00000000000000C6: 74 1B              je          00000000000000E3
  00000000000000C8: 48 8B C8           mov         rcx,rax
  00000000000000CB: FF 15 00 00 00 00  call        qword ptr [__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ]
  00000000000000D1: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000D4: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000D8: 48 03 CF           add         rcx,rdi
  00000000000000DB: FF 15 00 00 00 00  call        qword ptr [__imp_?good@ios_base@std@@QEBA_NXZ]
  00000000000000E1: EB 02              jmp         00000000000000E5
  00000000000000E3: B0 01              mov         al,1
  00000000000000E5: 88 44 24 28        mov         byte ptr [rsp+28h],al
  00000000000000E9: 84 C0              test        al,al
  00000000000000EB: 75 0A              jne         00000000000000F7
  00000000000000ED: BE 04 00 00 00     mov         esi,4
  00000000000000F2: E9 F1 00 00 00     jmp         00000000000001E8
  00000000000000F7: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000FA: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000FE: 48 03 CF           add         rcx,rdi
  0000000000000101: FF 15 00 00 00 00  call        qword ptr [__imp_?flags@ios_base@std@@QEBAHXZ]
  0000000000000107: 25 C0 01 00 00     and         eax,1C0h
  000000000000010C: 83 F8 40           cmp         eax,40h
  000000000000010F: 74 49              je          000000000000015A
  0000000000000111: 4D 85 F6           test        r14,r14
  0000000000000114: 74 44              je          000000000000015A
  0000000000000116: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000119: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000011D: 48 03 CF           add         rcx,rdi
  0000000000000120: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000126: 48 8B D8           mov         rbx,rax
  0000000000000129: 48 8B 0F           mov         rcx,qword ptr [rdi]
  000000000000012C: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  0000000000000130: 48 03 CF           add         rcx,rdi
  0000000000000133: FF 15 00 00 00 00  call        qword ptr [__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ]
  0000000000000139: 0F B6 D0           movzx       edx,al
  000000000000013C: 48 8B CB           mov         rcx,rbx
  000000000000013F: FF 15 00 00 00 00  call        qword ptr [__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z]
  0000000000000145: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000148: 75 0B              jne         0000000000000155
  000000000000014A: BE 04 00 00 00     mov         esi,4
  000000000000014F: 89 74 24 78        mov         dword ptr [rsp+78h],esi
  0000000000000153: EB 2B              jmp         0000000000000180
  0000000000000155: 49 FF CE           dec         r14
  0000000000000158: EB B7              jmp         0000000000000111
  000000000000015A: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000015D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000161: 48 03 CF           add         rcx,rdi
  0000000000000164: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  000000000000016A: 4D 8B C4           mov         r8,r12
  000000000000016D: 49 8B D5           mov         rdx,r13
  0000000000000170: 48 8B C8           mov         rcx,rax
  0000000000000173: FF 15 00 00 00 00  call        qword ptr [__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z]
  0000000000000179: 49 3B C4           cmp         rax,r12
  000000000000017C: 75 40              jne         00000000000001BE
  000000000000017E: 66 90              nop
  0000000000000180: 4D 85 F6           test        r14,r14
  0000000000000183: 74 40              je          00000000000001C5
  0000000000000185: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000188: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000018C: 48 03 CF           add         rcx,rdi
  000000000000018F: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000195: 48 8B D8           mov         rbx,rax
  0000000000000198: 48 8B 0F           mov         rcx,qword ptr [rdi]
  000000000000019B: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  000000000000019F: 48 03 CF           add         rcx,rdi
  00000000000001A2: FF 15 00 00 00 00  call        qword ptr [__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ]
  00000000000001A8: 0F B6 D0           movzx       edx,al
  00000000000001AB: 48 8B CB           mov         rcx,rbx
  00000000000001AE: FF 15 00 00 00 00  call        qword ptr [__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z]
  00000000000001B4: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000001B7: 74 05              je          00000000000001BE
  00000000000001B9: 49 FF CE           dec         r14
  00000000000001BC: EB C2              jmp         0000000000000180
  00000000000001BE: 83 CE 04           or          esi,4
  00000000000001C1: 89 74 24 78        mov         dword ptr [rsp+78h],esi
  00000000000001C5: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000001C8: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001CC: 48 03 CF           add         rcx,rdi
  00000000000001CF: 33 D2              xor         edx,edx
  00000000000001D1: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEAA_J_J@Z]
  00000000000001D7: 90                 nop
  00000000000001D8: EB 0E              jmp         00000000000001E8
$LN24:
  00000000000001DA: 48 8B 7C 24 60     mov         rdi,qword ptr [rsp+60h]
  00000000000001DF: 8B 74 24 78        mov         esi,dword ptr [rsp+78h]
  00000000000001E3: 4C 8B 7C 24 20     mov         r15,qword ptr [rsp+20h]
  00000000000001E8: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000001EB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001EF: 48 03 CF           add         rcx,rdi
  00000000000001F2: 45 33 C0           xor         r8d,r8d
  00000000000001F5: 8B D6              mov         edx,esi
  00000000000001F7: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  00000000000001FD: 90                 nop
  00000000000001FE: E8 00 00 00 00     call        ?uncaught_exception@std@@YA_NXZ
  0000000000000203: 84 C0              test        al,al
  0000000000000205: 75 0A              jne         0000000000000211
  0000000000000207: 49 8B CF           mov         rcx,r15
  000000000000020A: FF 15 00 00 00 00  call        qword ptr [__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ]
  0000000000000210: 90                 nop
  0000000000000211: 49 8B 07           mov         rax,qword ptr [r15]
  0000000000000214: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000218: 49 03 CF           add         rcx,r15
  000000000000021B: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000221: 48 85 C0           test        rax,rax
  0000000000000224: 74 0D              je          0000000000000233
  0000000000000226: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000229: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  000000000000022D: 48 8B C8           mov         rcx,rax
  0000000000000230: FF D2              call        rdx
  0000000000000232: 90                 nop
  0000000000000233: 48 8B C7           mov         rax,rdi
  0000000000000236: 48 8B 5C 24 68     mov         rbx,qword ptr [rsp+68h]
  000000000000023B: 48 8B 74 24 70     mov         rsi,qword ptr [rsp+70h]
  0000000000000240: 48 83 C4 30        add         rsp,30h
  0000000000000244: 41 5F              pop         r15
  0000000000000246: 41 5E              pop         r14
  0000000000000248: 41 5D              pop         r13
  000000000000024A: 41 5C              pop         r12
  000000000000024C: 5F                 pop         rdi
  000000000000024D: C3                 ret

?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA (int `class dtor$0::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class dtor$0::std &,char const * const,unsigned __int64)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA (int `class dtor$1::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class dtor$1::std &,char const * const,unsigned __int64)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA (int `class catch$4::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class catch$4::std &,char const * const,unsigned __int64)'::`1'::catch$4):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
  000000000000000D: 48 8B 55 60        mov         rdx,qword ptr [rbp+60h]
  0000000000000011: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000014: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000018: 48 03 CA           add         rcx,rdx
  000000000000001B: 41 B0 01           mov         r8b,1
  000000000000001E: BA 04 00 00 00     mov         edx,4
  0000000000000023: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  0000000000000029: 90                 nop
  000000000000002A: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000034: 48 83 C4 20        add         rsp,20h
  0000000000000038: 5D                 pop         rbp
  0000000000000039: C3                 ret
  000000000000003A: CC                 int         3

??$_Is_all_bits_zero@H@std@@YA_NAEBH@Z (bool __cdecl std::_Is_all_bits_zero<int>(int const &)):
  0000000000000000: 83 39 00           cmp         dword ptr [rcx],0
  0000000000000003: 0F 94 C0           sete        al
  0000000000000006: C3                 ret

??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z (private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class <lambda_319d5e083f45f90dcdce5dce53cbb275>,char>(unsigned __int64,class <lambda_319d5e083f45f90dcdce5dce53cbb275>,char)):
  0000000000000000: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000005: 56                 push        rsi
  0000000000000006: 41 56              push        r14
  0000000000000008: 41 57              push        r15
  000000000000000A: 48 83 EC 20        sub         rsp,20h
  000000000000000E: 4C 8B 71 10        mov         r14,qword ptr [rcx+10h]
  0000000000000012: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000001C: 48 8B C3           mov         rax,rbx
  000000000000001F: 45 0F B6 F9        movzx       r15d,r9b
  0000000000000023: 49 2B C6           sub         rax,r14
  0000000000000026: 48 8B F1           mov         rsi,rcx
  0000000000000029: 48 3B C2           cmp         rax,rdx
  000000000000002C: 0F 82 2D 01 00 00  jb          000000000000015F
  0000000000000032: 48 89 6C 24 40     mov         qword ptr [rsp+40h],rbp
  0000000000000037: 48 8B 69 18        mov         rbp,qword ptr [rcx+18h]
  000000000000003B: 48 89 7C 24 48     mov         qword ptr [rsp+48h],rdi
  0000000000000040: 4C 89 64 24 50     mov         qword ptr [rsp+50h],r12
  0000000000000045: 4D 8D 24 16        lea         r12,[r14+rdx]
  0000000000000049: 49 8B D4           mov         rdx,r12
  000000000000004C: 48 83 CA 0F        or          rdx,0Fh
  0000000000000050: 48 3B D3           cmp         rdx,rbx
  0000000000000053: 77 44              ja          0000000000000099
  0000000000000055: 48 8B CD           mov         rcx,rbp
  0000000000000058: 48 8B C3           mov         rax,rbx
  000000000000005B: 48 D1 E9           shr         rcx,1
  000000000000005E: 48 2B C1           sub         rax,rcx
  0000000000000061: 48 3B E8           cmp         rbp,rax
  0000000000000064: 77 33              ja          0000000000000099
  0000000000000066: 48 8D 04 29        lea         rax,[rcx+rbp]
  000000000000006A: 48 8B DA           mov         rbx,rdx
  000000000000006D: 48 3B D0           cmp         rdx,rax
  0000000000000070: 48 0F 42 D8        cmovb       rbx,rax
  0000000000000074: 48 8D 4B 01        lea         rcx,[rbx+1]
  0000000000000078: 48 85 C9           test        rcx,rcx
  000000000000007B: 75 04              jne         0000000000000081
  000000000000007D: 33 FF              xor         edi,edi
  000000000000007F: EB 49              jmp         00000000000000CA
  0000000000000081: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000088: 72 38              jb          00000000000000C2
  000000000000008A: 48 8D 41 27        lea         rax,[rcx+27h]
  000000000000008E: 48 3B C1           cmp         rax,rcx
  0000000000000091: 0F 86 CE 00 00 00  jbe         0000000000000165
  0000000000000097: EB 0E              jmp         00000000000000A7
  0000000000000099: 48 B8 00 00 00 00  mov         rax,8000000000000000h
                    00 00 00 80
  00000000000000A3: 48 83 C0 27        add         rax,27h
  00000000000000A7: 48 8B C8           mov         rcx,rax
  00000000000000AA: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000AF: 48 85 C0           test        rax,rax
  00000000000000B2: 74 6E              je          0000000000000122
  00000000000000B4: 48 8D 78 27        lea         rdi,[rax+27h]
  00000000000000B8: 48 83 E7 E0        and         rdi,0FFFFFFFFFFFFFFE0h
  00000000000000BC: 48 89 47 F8        mov         qword ptr [rdi-8],rax
  00000000000000C0: EB 08              jmp         00000000000000CA
  00000000000000C2: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000C7: 48 8B F8           mov         rdi,rax
  00000000000000CA: 4C 89 66 10        mov         qword ptr [rsi+10h],r12
  00000000000000CE: 4D 8B C6           mov         r8,r14
  00000000000000D1: 48 89 5E 18        mov         qword ptr [rsi+18h],rbx
  00000000000000D5: 48 8B CF           mov         rcx,rdi
  00000000000000D8: 48 83 FD 0F        cmp         rbp,0Fh
  00000000000000DC: 76 4B              jbe         0000000000000129
  00000000000000DE: 48 8B 1E           mov         rbx,qword ptr [rsi]
  00000000000000E1: 48 8B D3           mov         rdx,rbx
  00000000000000E4: E8 00 00 00 00     call        memcpy
  00000000000000E9: 48 8D 55 01        lea         rdx,[rbp+1]
  00000000000000ED: 46 88 3C 37        mov         byte ptr [rdi+r14],r15b
  00000000000000F1: 42 C6 44 37 01 00  mov         byte ptr [rdi+r14+1],0
  00000000000000F7: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000000FE: 72 18              jb          0000000000000118
  0000000000000100: 48 8B 4B F8        mov         rcx,qword ptr [rbx-8]
  0000000000000104: 48 83 C2 27        add         rdx,27h
  0000000000000108: 48 2B D9           sub         rbx,rcx
  000000000000010B: 48 8D 43 F8        lea         rax,[rbx-8]
  000000000000010F: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000113: 77 0D              ja          0000000000000122
  0000000000000115: 48 8B D9           mov         rbx,rcx
  0000000000000118: 48 8B CB           mov         rcx,rbx
  000000000000011B: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000120: EB 19              jmp         000000000000013B
  0000000000000122: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  0000000000000128: CC                 int         3
  0000000000000129: 48 8B D6           mov         rdx,rsi
  000000000000012C: E8 00 00 00 00     call        memcpy
  0000000000000131: 46 88 3C 37        mov         byte ptr [rdi+r14],r15b
  0000000000000135: 42 C6 44 37 01 00  mov         byte ptr [rdi+r14+1],0
  000000000000013B: 48 89 3E           mov         qword ptr [rsi],rdi
  000000000000013E: 48 8B C6           mov         rax,rsi
  0000000000000141: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000146: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  000000000000014B: 4C 8B 64 24 50     mov         r12,qword ptr [rsp+50h]
  0000000000000150: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  0000000000000155: 48 83 C4 20        add         rsp,20h
  0000000000000159: 41 5F              pop         r15
  000000000000015B: 41 5E              pop         r14
  000000000000015D: 5E                 pop         rsi
  000000000000015E: C3                 ret
  000000000000015F: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  0000000000000164: CC                 int         3
  0000000000000165: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  000000000000016A: CC                 int         3

??$_Search_vectorized@$$CBD$$CBD@std@@YAPEBDQEBD00_K@Z (char const * __cdecl std::_Search_vectorized<char const ,char const >(char const * const,char const * const,char const * const,unsigned __int64)):
  0000000000000000: E9 00 00 00 00     jmp         __std_search_1

??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z (int * __cdecl std::_Zero_range<int *>(int * const,int * const)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 4C 8B C2           mov         r8,rdx
  0000000000000009: 48 8B DA           mov         rbx,rdx
  000000000000000C: 4C 2B C1           sub         r8,rcx
  000000000000000F: 33 D2              xor         edx,edx
  0000000000000011: E8 00 00 00 00     call        memset
  0000000000000016: 48 8B C3           mov         rax,rbx
  0000000000000019: 48 83 C4 20        add         rsp,20h
  000000000000001D: 5B                 pop         rbx
  000000000000001E: C3                 ret

??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z (class std::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_istream<char,struct std::char_traits<char> > &&,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 40        sub         rsp,40h
  000000000000001C: 45 0F B6 F8        movzx       r15d,r8b
  0000000000000020: 48 8B FA           mov         rdi,rdx
  0000000000000023: 48 8B F1           mov         rsi,rcx
  0000000000000026: 33 DB              xor         ebx,ebx
  0000000000000028: 89 5C 24 20        mov         dword ptr [rsp+20h],ebx
  000000000000002C: 45 32 F6           xor         r14b,r14b
  000000000000002F: 44 88 B4 24 88 00  mov         byte ptr [rsp+88h],r14b
                    00 00
  0000000000000037: 4C 8B E1           mov         r12,rcx
  000000000000003A: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  000000000000003F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000042: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000046: 49 03 CC           add         rcx,r12
  0000000000000049: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  000000000000004F: 48 85 C0           test        rax,rax
  0000000000000052: 74 0D              je          0000000000000061
  0000000000000054: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000057: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  000000000000005B: 48 8B C8           mov         rcx,rax
  000000000000005E: FF D2              call        rdx
  0000000000000060: 90                 nop
  0000000000000061: B2 01              mov         dl,1
  0000000000000063: 48 8B CE           mov         rcx,rsi
  0000000000000066: FF 15 00 00 00 00  call        qword ptr [__imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z]
  000000000000006C: 88 44 24 30        mov         byte ptr [rsp+30h],al
  0000000000000070: 84 C0              test        al,al
  0000000000000072: 0F 84 06 01 00 00  je          000000000000017E
  0000000000000078: 48 89 5F 10        mov         qword ptr [rdi+10h],rbx
  000000000000007C: 48 8B C7           mov         rax,rdi
  000000000000007F: 48 83 7F 18 0F     cmp         qword ptr [rdi+18h],0Fh
  0000000000000084: 76 03              jbe         0000000000000089
  0000000000000086: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000089: C6 00 00           mov         byte ptr [rax],0
  000000000000008C: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000008F: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000093: 48 03 CE           add         rcx,rsi
  0000000000000096: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  000000000000009C: 48 8B C8           mov         rcx,rax
  000000000000009F: FF 15 00 00 00 00  call        qword ptr [__imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ]
  00000000000000A5: 44 8B C8           mov         r9d,eax
  00000000000000A8: 49 BD FF FF FF FF  mov         r13,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  00000000000000B2: 41 83 F9 FF        cmp         r9d,0FFFFFFFFh
  00000000000000B6: 75 07              jne         00000000000000BF
  00000000000000B8: BB 01 00 00 00     mov         ebx,1
  00000000000000BD: EB 39              jmp         00000000000000F8
  00000000000000BF: 45 3B CF           cmp         r9d,r15d
  00000000000000C2: 75 26              jne         00000000000000EA
  00000000000000C4: 41 B6 01           mov         r14b,1
  00000000000000C7: 44 88 B4 24 88 00  mov         byte ptr [rsp+88h],r14b
                    00 00
  00000000000000CF: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000D2: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000D6: 48 03 CE           add         rcx,rsi
  00000000000000D9: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  00000000000000DF: 48 8B C8           mov         rcx,rax
  00000000000000E2: FF 15 00 00 00 00  call        qword ptr [__imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ]
  00000000000000E8: EB 12              jmp         00000000000000FC
  00000000000000EA: 48 8B 4F 10        mov         rcx,qword ptr [rdi+10h]
  00000000000000EE: 49 3B CD           cmp         rcx,r13
  00000000000000F1: 72 0B              jb          00000000000000FE
  00000000000000F3: BB 02 00 00 00     mov         ebx,2
  00000000000000F8: 89 5C 24 20        mov         dword ptr [rsp+20h],ebx
  00000000000000FC: EB 7B              jmp         0000000000000179
  00000000000000FE: 48 8B 57 18        mov         rdx,qword ptr [rdi+18h]
  0000000000000102: 48 3B CA           cmp         rcx,rdx
  0000000000000105: 73 1F              jae         0000000000000126
  0000000000000107: 48 8D 41 01        lea         rax,[rcx+1]
  000000000000010B: 48 89 47 10        mov         qword ptr [rdi+10h],rax
  000000000000010F: 48 8B C7           mov         rax,rdi
  0000000000000112: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000116: 76 03              jbe         000000000000011B
  0000000000000118: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000011B: 44 88 0C 08        mov         byte ptr [rax+rcx],r9b
  000000000000011F: C6 44 08 01 00     mov         byte ptr [rax+rcx+1],0
  0000000000000124: EB 10              jmp         0000000000000136
  0000000000000126: 45 33 C0           xor         r8d,r8d
  0000000000000129: BA 01 00 00 00     mov         edx,1
  000000000000012E: 48 8B CF           mov         rcx,rdi
  0000000000000131: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
  0000000000000136: 41 B6 01           mov         r14b,1
  0000000000000139: 44 88 B4 24 88 00  mov         byte ptr [rsp+88h],r14b
                    00 00
  0000000000000141: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000144: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000148: 48 03 CE           add         rcx,rsi
  000000000000014B: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000151: 48 8B C8           mov         rcx,rax
  0000000000000154: FF 15 00 00 00 00  call        qword ptr [__imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ]
  000000000000015A: 44 8B C8           mov         r9d,eax
  000000000000015D: E9 50 FF FF FF     jmp         00000000000000B2
$LN19:
  0000000000000162: 48 8B 74 24 70     mov         rsi,qword ptr [rsp+70h]
  0000000000000167: 8B 5C 24 20        mov         ebx,dword ptr [rsp+20h]
  000000000000016B: 44 0F B6 B4 24 88  movzx       r14d,byte ptr [rsp+88h]
                    00 00 00
  0000000000000174: 4C 8B 64 24 28     mov         r12,qword ptr [rsp+28h]
  0000000000000179: 45 84 F6           test        r14b,r14b
  000000000000017C: 75 03              jne         0000000000000181
  000000000000017E: 83 CB 02           or          ebx,2
  0000000000000181: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000184: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000188: 48 03 CE           add         rcx,rsi
  000000000000018B: 45 33 C0           xor         r8d,r8d
  000000000000018E: 8B D3              mov         edx,ebx
  0000000000000190: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  0000000000000196: 90                 nop
  0000000000000197: 49 8B 04 24        mov         rax,qword ptr [r12]
  000000000000019B: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000019F: 49 03 CC           add         rcx,r12
  00000000000001A2: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  00000000000001A8: 48 85 C0           test        rax,rax
  00000000000001AB: 74 0D              je          00000000000001BA
  00000000000001AD: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000001B0: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  00000000000001B4: 48 8B C8           mov         rcx,rax
  00000000000001B7: FF D2              call        rdx
  00000000000001B9: 90                 nop
  00000000000001BA: 48 8B C6           mov         rax,rsi
  00000000000001BD: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  00000000000001C2: 48 8B B4 24 80 00  mov         rsi,qword ptr [rsp+80h]
                    00 00
  00000000000001CA: 48 83 C4 40        add         rsp,40h
  00000000000001CE: 41 5F              pop         r15
  00000000000001D0: 41 5E              pop         r14
  00000000000001D2: 41 5D              pop         r13
  00000000000001D4: 41 5C              pop         r12
  00000000000001D6: 5F                 pop         rdi
  00000000000001D7: C3                 ret

?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA (int `class dtor$0::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class dtor$0::std &&,class dtor$0::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA (int `class dtor$1::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class dtor$1::std &&,class dtor$1::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$4@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA (int `class catch$4::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class catch$4::std &&,class catch$4::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)'::`1'::catch$4):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0:
  000000000000000D: 48 8B 55 70        mov         rdx,qword ptr [rbp+70h]
  0000000000000011: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000014: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000018: 48 03 CA           add         rcx,rdx
  000000000000001B: 41 B0 01           mov         r8b,1
  000000000000001E: BA 04 00 00 00     mov         edx,4
  0000000000000023: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  0000000000000029: 90                 nop
  000000000000002A: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000034: 48 83 C4 20        add         rsp,20h
  0000000000000038: 5D                 pop         rbp
  0000000000000039: C3                 ret
  000000000000003A: CC                 int         3

??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z (class std::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_istream<char,struct std::char_traits<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000D: 48 8B F9           mov         rdi,rcx
  0000000000000010: 48 8B DA           mov         rbx,rdx
  0000000000000013: B2 0A              mov         dl,0Ah
  0000000000000015: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000019: 48 03 CF           add         rcx,rdi
  000000000000001C: FF 15 00 00 00 00  call        qword ptr [__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z]
  0000000000000022: 48 8B D3           mov         rdx,rbx
  0000000000000025: 48 8B CF           mov         rcx,rdi
  0000000000000028: 44 0F B6 C0        movzx       r8d,al
  000000000000002C: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000031: 48 83 C4 20        add         rsp,20h
  0000000000000035: 5F                 pop         rdi
  0000000000000036: E9 00 00 00 00     jmp         ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z

??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z (class std::codecvt<char,char,struct _Mbstatet> const & __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class std::locale const &)):
  0000000000000000: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 83 EC 20        sub         rsp,20h
  000000000000000C: 48 8B E9           mov         rbp,rcx
  000000000000000F: 33 D2              xor         edx,edx
  0000000000000011: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  0000000000000016: FF 15 00 00 00 00  call        qword ptr [__imp_??0_Lockit@std@@QEAA@H@Z]
  000000000000001C: 90                 nop
  000000000000001D: 48 8B 05 00 00 00  mov         rax,qword ptr [?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB]
                    00
  0000000000000024: 48 89 44 24 50     mov         qword ptr [rsp+50h],rax
  0000000000000029: 48 8B 1D 00 00 00  mov         rbx,qword ptr [__imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A]
                    00
  0000000000000030: 48 83 3B 00        cmp         qword ptr [rbx],0
  0000000000000034: 75 34              jne         000000000000006A
  0000000000000036: 33 D2              xor         edx,edx
  0000000000000038: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__imp_??0_Lockit@std@@QEAA@H@Z]
  0000000000000043: 48 83 3B 00        cmp         qword ptr [rbx],0
  0000000000000047: 75 16              jne         000000000000005F
  0000000000000049: 48 8B 05 00 00 00  mov         rax,qword ptr [__imp_?_Id_cnt@id@locale@std@@0HA]
                    00
  0000000000000050: FF 00              inc         dword ptr [rax]
  0000000000000052: 48 8B 05 00 00 00  mov         rax,qword ptr [__imp_?_Id_cnt@id@locale@std@@0HA]
                    00
  0000000000000059: 48 63 08           movsxd      rcx,dword ptr [rax]
  000000000000005C: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000005F: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000064: FF 15 00 00 00 00  call        qword ptr [__imp_??1_Lockit@std@@QEAA@XZ]
  000000000000006A: 48 8B 33           mov         rsi,qword ptr [rbx]
  000000000000006D: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000071: 48 8D 3C F5 00 00  lea         rdi,[rsi*8]
                    00 00
  0000000000000079: 48 3B 71 18        cmp         rsi,qword ptr [rcx+18h]
  000000000000007D: 73 0F              jae         000000000000008E
  000000000000007F: 48 8B 41 10        mov         rax,qword ptr [rcx+10h]
  0000000000000083: 48 8B 1C 07        mov         rbx,qword ptr [rdi+rax]
  0000000000000087: 48 85 DB           test        rbx,rbx
  000000000000008A: 75 67              jne         00000000000000F3
  000000000000008C: EB 02              jmp         0000000000000090
  000000000000008E: 33 DB              xor         ebx,ebx
  0000000000000090: 80 79 24 00        cmp         byte ptr [rcx+24h],0
  0000000000000094: 74 13              je          00000000000000A9
  0000000000000096: E8 00 00 00 00     call        ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
  000000000000009B: 48 3B 70 18        cmp         rsi,qword ptr [rax+18h]
  000000000000009F: 73 0D              jae         00000000000000AE
  00000000000000A1: 48 8B 40 10        mov         rax,qword ptr [rax+10h]
  00000000000000A5: 48 8B 1C 07        mov         rbx,qword ptr [rdi+rax]
  00000000000000A9: 48 85 DB           test        rbx,rbx
  00000000000000AC: 75 45              jne         00000000000000F3
  00000000000000AE: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  00000000000000B3: 48 85 DB           test        rbx,rbx
  00000000000000B6: 75 3B              jne         00000000000000F3
  00000000000000B8: 48 8B D5           mov         rdx,rbp
  00000000000000BB: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  00000000000000C0: FF 15 00 00 00 00  call        qword ptr [__imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z]
  00000000000000C6: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000CA: 74 42              je          000000000000010E
  00000000000000CC: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  00000000000000D1: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  00000000000000D6: 48 8B CB           mov         rcx,rbx
  00000000000000D9: E8 00 00 00 00     call        ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z
  00000000000000DE: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000E1: 48 8B CB           mov         rcx,rbx
  00000000000000E4: FF 50 08           call        qword ptr [rax+8]
  00000000000000E7: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  00000000000000EC: 48 89 1D 00 00 00  mov         qword ptr [?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB],rbx
                    00
  00000000000000F3: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  00000000000000F8: FF 15 00 00 00 00  call        qword ptr [__imp_??1_Lockit@std@@QEAA@XZ]
  00000000000000FE: 48 8B C3           mov         rax,rbx
  0000000000000101: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  0000000000000106: 48 83 C4 20        add         rsp,20h
  000000000000010A: 5F                 pop         rdi
  000000000000010B: 5E                 pop         rsi
  000000000000010C: 5D                 pop         rbp
  000000000000010D: C3                 ret
  000000000000010E: E8 00 00 00 00     call        ?_Throw_bad_cast@std@@YAXXZ
  0000000000000113: 90                 nop

?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$0::codecvt<char,char,struct _Mbstatet> const & __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class dtor$0::locale const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 48 00 00  lea         rcx,[rdx+48h]
                    00
  0000000000000007: 48 FF 25 00 00 00  jmp         qword ptr [__imp_??1_Lockit@std@@QEAA@XZ]
                    00

?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$1::codecvt<char,char,struct _Mbstatet> const & __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class dtor$1::locale const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ

??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z (public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000014: 57                 push        rdi
  0000000000000015: 41 56              push        r14
  0000000000000017: 41 57              push        r15
  0000000000000019: 48 83 EC 70        sub         rsp,70h
  000000000000001D: 41 8B E9           mov         ebp,r9d
  0000000000000020: 41 8B F0           mov         esi,r8d
  0000000000000023: 4C 8B F2           mov         r14,rdx
  0000000000000026: 48 8B D9           mov         rbx,rcx
  0000000000000029: 45 33 FF           xor         r15d,r15d
  000000000000002C: 44 89 7C 24 40     mov         dword ptr [rsp+40h],r15d
  0000000000000031: 44 39 BC 24 B0 00  cmp         dword ptr [rsp+0B0h],r15d
                    00 00
  0000000000000039: 74 20              je          000000000000005B
  000000000000003B: 48 8D 05 00 00 00  lea         rax,[??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@]
                    00
  0000000000000042: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000045: 48 81 C1 B0 00 00  add         rcx,0B0h
                    00
  000000000000004C: FF 15 00 00 00 00  call        qword ptr [__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ]
  0000000000000052: 90                 nop
  0000000000000053: C7 44 24 40 01 00  mov         dword ptr [rsp+40h],1
                    00 00
  000000000000005B: 48 8D 7B 10        lea         rdi,[rbx+10h]
  000000000000005F: 45 33 C9           xor         r9d,r9d
  0000000000000062: 45 33 C0           xor         r8d,r8d
  0000000000000065: 48 8B D7           mov         rdx,rdi
  0000000000000068: 48 8B CB           mov         rcx,rbx
  000000000000006B: FF 15 00 00 00 00  call        qword ptr [__imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z]
  0000000000000071: 90                 nop
  0000000000000072: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000075: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000079: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000080: 48 89 04 19        mov         qword ptr [rcx+rbx],rax
  0000000000000084: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000087: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000008B: 8D 91 50 FF FF FF  lea         edx,[rcx-0B0h]
  0000000000000091: 89 54 19 FC        mov         dword ptr [rcx+rbx-4],edx
  0000000000000095: 48 89 7C 24 58     mov         qword ptr [rsp+58h],rdi
  000000000000009A: 48 8B CF           mov         rcx,rdi
  000000000000009D: FF 15 00 00 00 00  call        qword ptr [__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ]
  00000000000000A3: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  00000000000000AA: 48 89 07           mov         qword ptr [rdi],rax
  00000000000000AD: C6 47 7C 00        mov         byte ptr [rdi+7Ch],0
  00000000000000B1: C6 47 71 00        mov         byte ptr [rdi+71h],0
  00000000000000B5: 48 8B CF           mov         rcx,rdi
  00000000000000B8: FF 15 00 00 00 00  call        qword ptr [__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ]
  00000000000000BE: 4C 89 BF 80 00 00  mov         qword ptr [rdi+80h],r15
                    00
  00000000000000C5: 48 8B 05 00 00 00  mov         rax,qword ptr [?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A]
                    00
  00000000000000CC: 48 89 47 74        mov         qword ptr [rdi+74h],rax
  00000000000000D0: 4C 89 7F 68        mov         qword ptr [rdi+68h],r15
  00000000000000D4: 83 CE 01           or          esi,1
  00000000000000D7: 44 8B C5           mov         r8d,ebp
  00000000000000DA: 8B D6              mov         edx,esi
  00000000000000DC: 49 8B CE           mov         rcx,r14
  00000000000000DF: E8 00 00 00 00     call        ?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z
  00000000000000E4: 48 8B F0           mov         rsi,rax
  00000000000000E7: 48 85 C0           test        rax,rax
  00000000000000EA: 0F 84 D8 00 00 00  je          00000000000001C8
  00000000000000F0: C6 47 7C 01        mov         byte ptr [rdi+7Ch],1
  00000000000000F4: C6 47 71 00        mov         byte ptr [rdi+71h],0
  00000000000000F8: 48 8B CF           mov         rcx,rdi
  00000000000000FB: FF 15 00 00 00 00  call        qword ptr [__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ]
  0000000000000101: 4C 89 7C 24 58     mov         qword ptr [rsp+58h],r15
  0000000000000106: 4C 89 7C 24 50     mov         qword ptr [rsp+50h],r15
  000000000000010B: 4C 89 7C 24 48     mov         qword ptr [rsp+48h],r15
  0000000000000110: 4C 8D 4C 24 48     lea         r9,[rsp+48h]
  0000000000000115: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  000000000000011A: 48 8D 54 24 58     lea         rdx,[rsp+58h]
  000000000000011F: 48 8B CE           mov         rcx,rsi
  0000000000000122: FF 15 00 00 00 00  call        qword ptr [__imp__get_stream_buffer_pointers]
  0000000000000128: 4C 8B 4C 24 48     mov         r9,qword ptr [rsp+48h]
  000000000000012D: 4C 89 4C 24 30     mov         qword ptr [rsp+30h],r9
  0000000000000132: 4C 8B 44 24 50     mov         r8,qword ptr [rsp+50h]
  0000000000000137: 4C 89 44 24 28     mov         qword ptr [rsp+28h],r8
  000000000000013C: 48 8B 54 24 58     mov         rdx,qword ptr [rsp+58h]
  0000000000000141: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000146: 48 8B CF           mov         rcx,rdi
  0000000000000149: FF 15 00 00 00 00  call        qword ptr [__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAPEAD0PEAH001@Z]
  000000000000014F: 48 89 B7 80 00 00  mov         qword ptr [rdi+80h],rsi
                    00
  0000000000000156: 48 8B 05 00 00 00  mov         rax,qword ptr [?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A]
                    00
  000000000000015D: 48 89 47 74        mov         qword ptr [rdi+74h],rax
  0000000000000161: 4C 89 7F 68        mov         qword ptr [rdi+68h],r15
  0000000000000165: 48 8D 54 24 58     lea         rdx,[rsp+58h]
  000000000000016A: 48 8B CF           mov         rcx,rdi
  000000000000016D: FF 15 00 00 00 00  call        qword ptr [__imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ]
  0000000000000173: 90                 nop
  0000000000000174: 48 8B C8           mov         rcx,rax
  0000000000000177: E8 00 00 00 00     call        ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
  000000000000017C: 48 8B F0           mov         rsi,rax
  000000000000017F: 48 8B C8           mov         rcx,rax
  0000000000000182: FF 15 00 00 00 00  call        qword ptr [__imp_?always_noconv@codecvt_base@std@@QEBA_NXZ]
  0000000000000188: 84 C0              test        al,al
  000000000000018A: 74 06              je          0000000000000192
  000000000000018C: 4C 89 7F 68        mov         qword ptr [rdi+68h],r15
  0000000000000190: EB 0E              jmp         00000000000001A0
  0000000000000192: 48 89 77 68        mov         qword ptr [rdi+68h],rsi
  0000000000000196: 48 8B CF           mov         rcx,rdi
  0000000000000199: FF 15 00 00 00 00  call        qword ptr [__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ]
  000000000000019F: 90                 nop
  00000000000001A0: 48 8B 4C 24 60     mov         rcx,qword ptr [rsp+60h]
  00000000000001A5: 48 85 C9           test        rcx,rcx
  00000000000001A8: 74 37              je          00000000000001E1
  00000000000001AA: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000001AD: FF 50 10           call        qword ptr [rax+10h]
  00000000000001B0: 48 85 C0           test        rax,rax
  00000000000001B3: 74 2C              je          00000000000001E1
  00000000000001B5: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000001B8: 4C 8B 01           mov         r8,qword ptr [rcx]
  00000000000001BB: BA 01 00 00 00     mov         edx,1
  00000000000001C0: 48 8B C8           mov         rcx,rax
  00000000000001C3: 41 FF D0           call        r8
  00000000000001C6: EB 19              jmp         00000000000001E1
  00000000000001C8: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000001CB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001CF: 48 03 CB           add         rcx,rbx
  00000000000001D2: 45 33 C0           xor         r8d,r8d
  00000000000001D5: BA 02 00 00 00     mov         edx,2
  00000000000001DA: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  00000000000001E0: 90                 nop
  00000000000001E1: 48 8B C3           mov         rax,rbx
  00000000000001E4: 4C 8D 5C 24 70     lea         r11,[rsp+70h]
  00000000000001E9: 49 8B 5B 28        mov         rbx,qword ptr [r11+28h]
  00000000000001ED: 49 8B 6B 30        mov         rbp,qword ptr [r11+30h]
  00000000000001F1: 49 8B 73 38        mov         rsi,qword ptr [r11+38h]
  00000000000001F5: 49 8B E3           mov         rsp,r11
  00000000000001F8: 41 5F              pop         r15
  00000000000001FA: 41 5E              pop         r14
  00000000000001FC: 5F                 pop         rdi
  00000000000001FD: C3                 ret

?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: 8B 45 40           mov         eax,dword ptr [rbp+40h]
  000000000000000C: 83 E0 01           and         eax,1
  000000000000000F: 85 C0              test        eax,eax
  0000000000000011: 74 18              je          000000000000002B
  0000000000000013: 83 65 40 FE        and         dword ptr [rbp+40h],0FFFFFFFEh
  0000000000000017: 48 8B 8D 90 00 00  mov         rcx,qword ptr [rbp+90h]
                    00
  000000000000001E: 48 81 C1 B0 00 00  add         rcx,0B0h
                    00
  0000000000000025: FF 15 00 00 00 00  call        qword ptr [__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ]
  000000000000002B: 48 83 C4 20        add         rsp,20h
  000000000000002F: 5D                 pop         rbp
  0000000000000030: C3                 ret

?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$1):
  0000000000000000: 48 8B 8A 90 00 00  mov         rcx,qword ptr [rdx+90h]
                    00
  0000000000000007: 48 83 C1 18        add         rcx,18h
  000000000000000B: 48 FF 25 00 00 00  jmp         qword ptr [__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ]
                    00

?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$2):
  0000000000000000: 48 8B 8A 90 00 00  mov         rcx,qword ptr [rdx+90h]
                    00
  0000000000000007: 48 83 C1 10        add         rcx,10h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

?dtor$4@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$4):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

??0bad_alloc@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_alloc::bad_alloc(class std::bad_alloc const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7bad_alloc@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0bad_array_new_length@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_array_new_length::bad_array_new_length(class std::bad_array_new_length const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7bad_array_new_length@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0bad_array_new_length@std@@QEAA@XZ (public: __cdecl std::bad_array_new_length::bad_array_new_length(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@KINCDENJ@bad?5array?5new?5length@]
                    00
  0000000000000007: 48 C7 41 10 00 00  mov         qword ptr [rcx+10h],0
                    00 00
  000000000000000F: 48 89 41 08        mov         qword ptr [rcx+8],rax
  0000000000000013: 48 8D 05 00 00 00  lea         rax,[??_7bad_array_new_length@std@@6B@]
                    00
  000000000000001A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000001D: 48 8B C1           mov         rax,rcx
  0000000000000020: C3                 ret

??0bad_cast@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_cast::bad_cast(class std::bad_cast const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7bad_cast@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0bad_cast@std@@QEAA@XZ (public: __cdecl std::bad_cast::bad_cast(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_C@_08EPJLHIJG@bad?5cast@]
                    00
  0000000000000007: 48 C7 41 10 00 00  mov         qword ptr [rcx+10h],0
                    00 00
  000000000000000F: 48 89 41 08        mov         qword ptr [rcx+8],rax
  0000000000000013: 48 8D 05 00 00 00  lea         rax,[??_7bad_cast@std@@6B@]
                    00
  000000000000001A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000001D: 48 8B C1           mov         rax,rcx
  0000000000000020: C3                 ret

??0exception@std@@QEAA@AEBV01@@Z (public: __cdecl std::exception::exception(class std::exception const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8B C3           mov         rax,rbx
  000000000000002C: 48 83 C4 20        add         rsp,20h
  0000000000000030: 5B                 pop         rbx
  0000000000000031: C3                 ret

??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::~basic_filebuf<char,struct std::char_traits<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  000000000000001B: 74 29              je          0000000000000046
  000000000000001D: FF 15 00 00 00 00  call        qword ptr [__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000023: 48 8D 53 70        lea         rdx,[rbx+70h]
  0000000000000027: 48 3B C2           cmp         rax,rdx
  000000000000002A: 75 1A              jne         0000000000000046
  000000000000002C: 48 8B 93 88 00 00  mov         rdx,qword ptr [rbx+88h]
                    00
  0000000000000033: 4C 8B 8B 90 00 00  mov         r9,qword ptr [rbx+90h]
                    00
  000000000000003A: 4C 8B C2           mov         r8,rdx
  000000000000003D: 48 8B CB           mov         rcx,rbx
  0000000000000040: FF 15 00 00 00 00  call        qword ptr [__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z]
  0000000000000046: 80 7B 7C 00        cmp         byte ptr [rbx+7Ch],0
  000000000000004A: 74 08              je          0000000000000054
  000000000000004C: 48 8B CB           mov         rcx,rbx
  000000000000004F: E8 00 00 00 00     call        ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
  0000000000000054: 48 8B CB           mov         rcx,rbx
  0000000000000057: 48 83 C4 20        add         rsp,20h
  000000000000005B: 5B                 pop         rbx
  000000000000005C: 48 FF 25 00 00 00  jmp         qword ptr [__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ]
                    00

??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::~basic_ifstream<char,struct std::char_traits<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 81 50 FF FF  mov         rax,qword ptr [rcx-0B0h]
                    FF
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000014: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000001B: 48 89 84 0A 50 FF  mov         qword ptr [rdx+rcx-0B0h],rax
                    FF FF
  0000000000000023: 48 8B 81 50 FF FF  mov         rax,qword ptr [rcx-0B0h]
                    FF
  000000000000002A: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000002E: 44 8D 82 50 FF FF  lea         r8d,[rdx-0B0h]
                    FF
  0000000000000035: 44 89 84 0A 4C FF  mov         dword ptr [rdx+rcx-0B4h],r8d
                    FF FF
  000000000000003D: 48 81 C1 60 FF FF  add         rcx,0FFFFFFFFFFFFFF60h
                    FF
  0000000000000044: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000049: 48 8D 8B 68 FF FF  lea         rcx,[rbx-98h]
                    FF
  0000000000000050: 48 83 C4 20        add         rsp,20h
  0000000000000054: 5B                 pop         rbx
  0000000000000055: 48 FF 25 00 00 00  jmp         qword ptr [__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ]
                    00

??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ (public: __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 51 18        mov         rdx,qword ptr [rcx+18h]
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000011: 76 2C              jbe         000000000000003F
  0000000000000013: 48 8B 09           mov         rcx,qword ptr [rcx]
  0000000000000016: 48 FF C2           inc         rdx
  0000000000000019: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000020: 72 18              jb          000000000000003A
  0000000000000022: 4C 8B 41 F8        mov         r8,qword ptr [rcx-8]
  0000000000000026: 48 83 C2 27        add         rdx,27h
  000000000000002A: 49 2B C8           sub         rcx,r8
  000000000000002D: 48 8D 41 F8        lea         rax,[rcx-8]
  0000000000000031: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000035: 77 21              ja          0000000000000058
  0000000000000037: 49 8B C8           mov         rcx,r8
  000000000000003A: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000003F: 48 C7 43 10 00 00  mov         qword ptr [rbx+10h],0
                    00 00
  0000000000000047: 48 C7 43 18 0F 00  mov         qword ptr [rbx+18h],0Fh
                    00 00
  000000000000004F: C6 03 00           mov         byte ptr [rbx],0
  0000000000000052: 48 83 C4 20        add         rsp,20h
  0000000000000056: 5B                 pop         rbx
  0000000000000057: C3                 ret
  0000000000000058: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  000000000000005E: CC                 int         3

??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ (public: __cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::~unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >(void)):
  0000000000000000: 48 8B 09           mov         rcx,qword ptr [rcx]
  0000000000000003: 48 85 C9           test        rcx,rcx
  0000000000000006: 74 0B              je          0000000000000013
  0000000000000008: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000B: BA 01 00 00 00     mov         edx,1
  0000000000000010: 48 FF 20           jmp         qword ptr [rax]
  0000000000000013: C3                 ret

??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ (public: __cdecl std::vector<int,class std::allocator<int> >::~vector<int,class std::allocator<int> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B 09           mov         rcx,qword ptr [rcx]
  000000000000000C: 48 85 C9           test        rcx,rcx
  000000000000000F: 74 3E              je          000000000000004F
  0000000000000011: 48 8B 53 10        mov         rdx,qword ptr [rbx+10h]
  0000000000000015: 48 2B D1           sub         rdx,rcx
  0000000000000018: 48 83 E2 FC        and         rdx,0FFFFFFFFFFFFFFFCh
  000000000000001C: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000023: 72 18              jb          000000000000003D
  0000000000000025: 4C 8B 41 F8        mov         r8,qword ptr [rcx-8]
  0000000000000029: 48 83 C2 27        add         rdx,27h
  000000000000002D: 49 2B C8           sub         rcx,r8
  0000000000000030: 48 8D 41 F8        lea         rax,[rcx-8]
  0000000000000034: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000038: 77 1B              ja          0000000000000055
  000000000000003A: 49 8B C8           mov         rcx,r8
  000000000000003D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000042: 33 C0              xor         eax,eax
  0000000000000044: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000047: 48 89 43 08        mov         qword ptr [rbx+8],rax
  000000000000004B: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  000000000000004F: 48 83 C4 20        add         rsp,20h
  0000000000000053: 5B                 pop         rbx
  0000000000000054: C3                 ret
  0000000000000055: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  000000000000005B: CC                 int         3

??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_istream<char,struct std::char_traits<char> >::_Sentry_base::~_Sentry_base(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000007: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000000E: 48 03 CA           add         rcx,rdx
  0000000000000011: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000017: 48 85 C0           test        rax,rax
  000000000000001A: 74 0D              je          0000000000000029
  000000000000001C: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000001F: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  0000000000000023: 48 8B C8           mov         rcx,rax
  0000000000000026: FF D2              call        rdx
  0000000000000028: 90                 nop
  0000000000000029: 48 83 C4 28        add         rsp,28h
  000000000000002D: C3                 ret

??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Sentry_base::~_Sentry_base(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000007: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000000E: 48 03 CA           add         rcx,rdx
  0000000000000011: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000017: 48 85 C0           test        rax,rax
  000000000000001A: 74 0D              je          0000000000000029
  000000000000001C: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000001F: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  0000000000000023: 48 8B C8           mov         rcx,rax
  0000000000000026: FF D2              call        rdx
  0000000000000028: 90                 nop
  0000000000000029: 48 83 C4 28        add         rsp,28h
  000000000000002D: C3                 ret

??1bad_array_new_length@std@@UEAA@XZ (public: virtual __cdecl std::bad_array_new_length::~bad_array_new_length(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1bad_cast@std@@UEAA@XZ (public: virtual __cdecl std::bad_cast::~bad_cast(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1exception@std@@UEAA@XZ (public: virtual __cdecl std::exception::~exception(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1locale@std@@QEAA@XZ (public: __cdecl std::locale::~locale(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 49 08        mov         rcx,qword ptr [rcx+8]
  0000000000000008: 48 85 C9           test        rcx,rcx
  000000000000000B: 74 20              je          000000000000002D
  000000000000000D: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000010: FF 50 10           call        qword ptr [rax+10h]
  0000000000000013: 48 85 C0           test        rax,rax
  0000000000000016: 74 15              je          000000000000002D
  0000000000000018: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000001B: BA 01 00 00 00     mov         edx,1
  0000000000000020: 4C 8B 01           mov         r8,qword ptr [rcx]
  0000000000000023: 48 8B C8           mov         rcx,rax
  0000000000000026: 48 83 C4 28        add         rsp,28h
  000000000000002A: 49 FF E0           jmp         r8
  000000000000002D: 48 83 C4 28        add         rsp,28h
  0000000000000031: C3                 ret

??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_istream<char,struct std::char_traits<char> >::sentry::~sentry(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000007: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000000E: 48 03 CA           add         rcx,rdx
  0000000000000011: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000017: 48 85 C0           test        rax,rax
  000000000000001A: 74 0D              je          0000000000000029
  000000000000001C: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000001F: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  0000000000000023: 48 8B C8           mov         rcx,rax
  0000000000000026: FF D2              call        rdx
  0000000000000028: 90                 nop
  0000000000000029: 48 83 C4 28        add         rsp,28h
  000000000000002D: C3                 ret

??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::~sentry(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?uncaught_exception@std@@YA_NXZ
  000000000000000E: 84 C0              test        al,al
  0000000000000010: 75 0A              jne         000000000000001C
  0000000000000012: 48 8B 0B           mov         rcx,qword ptr [rbx]
  0000000000000015: FF 15 00 00 00 00  call        qword ptr [__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ]
  000000000000001B: 90                 nop
  000000000000001C: 48 8B 13           mov         rdx,qword ptr [rbx]
  000000000000001F: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000022: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000026: 48 03 CA           add         rcx,rdx
  0000000000000029: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  000000000000002F: 48 85 C0           test        rax,rax
  0000000000000032: 74 0D              je          0000000000000041
  0000000000000034: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000037: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: FF D2              call        rdx
  0000000000000040: 90                 nop
  0000000000000041: 48 83 C4 20        add         rsp,20h
  0000000000000045: 5B                 pop         rbx
  0000000000000046: C3                 ret

??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ (public: unsigned int __cdecl std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::operator()(void)):
  0000000000000000: 48 83 EC 08        sub         rsp,8
  0000000000000004: 4C 8B C9           mov         r9,rcx
  0000000000000007: 41 BA 70 02 00 00  mov         r10d,270h
  000000000000000D: 8B 09              mov         ecx,dword ptr [rcx]
  000000000000000F: 41 3B CA           cmp         ecx,r10d
  0000000000000012: 75 4D              jne         0000000000000061
  0000000000000014: 4D 8D 41 08        lea         r8,[r9+8]
  0000000000000018: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax+0000000000000000h]
                    00 00
  0000000000000020: 41 8B 50 FC        mov         edx,dword ptr [r8-4]
  0000000000000024: 41 33 10           xor         edx,dword ptr [r8]
  0000000000000027: 4D 8D 40 04        lea         r8,[r8+4]
  000000000000002B: 0F BA F2 1F        btr         edx,1Fh
  000000000000002F: 41 33 50 F8        xor         edx,dword ptr [r8-8]
  0000000000000033: 8B C2              mov         eax,edx
  0000000000000035: 24 01              and         al,1
  0000000000000037: F6 D8              neg         al
  0000000000000039: 1B C9              sbb         ecx,ecx
  000000000000003B: D1 EA              shr         edx,1
  000000000000003D: 81 E1 DF B0 08 99  and         ecx,9908B0DFh
  0000000000000043: 41 33 88 2C 06 00  xor         ecx,dword ptr [r8+000000000000062Ch]
                    00
  000000000000004A: 33 CA              xor         ecx,edx
  000000000000004C: 41 89 88 B8 09 00  mov         dword ptr [r8+00000000000009B8h],ecx
                    00
  0000000000000053: 49 83 EA 01        sub         r10,1
  0000000000000057: 75 C7              jne         0000000000000020
  0000000000000059: 41 8B 09           mov         ecx,dword ptr [r9]
  000000000000005C: E9 E7 00 00 00     jmp         0000000000000148
  0000000000000061: 81 F9 E0 04 00 00  cmp         ecx,4E0h
  0000000000000067: 0F 82 DB 00 00 00  jb          0000000000000148
  000000000000006D: 4D 8D 91 C4 09 00  lea         r10,[r9+00000000000009C4h]
                    00
  0000000000000074: 48 89 1C 24        mov         qword ptr [rsp],rbx
  0000000000000078: 45 8B 1A           mov         r11d,dword ptr [r10]
  000000000000007B: BB E3 00 00 00     mov         ebx,0E3h
  0000000000000080: 41 8B C3           mov         eax,r11d
  0000000000000083: 45 8B 5A 04        mov         r11d,dword ptr [r10+4]
  0000000000000087: 41 8B D3           mov         edx,r11d
  000000000000008A: 4D 8D 52 04        lea         r10,[r10+4]
  000000000000008E: 33 D0              xor         edx,eax
  0000000000000090: 0F BA F2 1F        btr         edx,1Fh
  0000000000000094: 33 D0              xor         edx,eax
  0000000000000096: 8B C2              mov         eax,edx
  0000000000000098: 24 01              and         al,1
  000000000000009A: F6 D8              neg         al
  000000000000009C: 1B C9              sbb         ecx,ecx
  000000000000009E: D1 EA              shr         edx,1
  00000000000000A0: 81 E1 DF B0 08 99  and         ecx,9908B0DFh
  00000000000000A6: 41 33 8A 30 06 00  xor         ecx,dword ptr [r10+0000000000000630h]
                    00
  00000000000000AD: 33 CA              xor         ecx,edx
  00000000000000AF: 41 89 8A 3C F6 FF  mov         dword ptr [r10+FFFFFFFFFFFFF63Ch],ecx
                    FF
  00000000000000B6: 48 83 EB 01        sub         rbx,1
  00000000000000BA: 75 C4              jne         0000000000000080
  00000000000000BC: 4D 8D 91 50 0D 00  lea         r10,[r9+0000000000000D50h]
                    00
  00000000000000C3: BB 8C 01 00 00     mov         ebx,18Ch
  00000000000000C8: 45 8B 1A           mov         r11d,dword ptr [r10]
  00000000000000CB: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  00000000000000D0: 41 8B C3           mov         eax,r11d
  00000000000000D3: 45 8B 5A 04        mov         r11d,dword ptr [r10+4]
  00000000000000D7: 41 8B D3           mov         edx,r11d
  00000000000000DA: 4D 8D 52 04        lea         r10,[r10+4]
  00000000000000DE: 33 D0              xor         edx,eax
  00000000000000E0: 0F BA F2 1F        btr         edx,1Fh
  00000000000000E4: 33 D0              xor         edx,eax
  00000000000000E6: 8B C2              mov         eax,edx
  00000000000000E8: 24 01              and         al,1
  00000000000000EA: F6 D8              neg         al
  00000000000000EC: 1B C9              sbb         ecx,ecx
  00000000000000EE: D1 EA              shr         edx,1
  00000000000000F0: 81 E1 DF B0 08 99  and         ecx,9908B0DFh
  00000000000000F6: 41 33 8A B0 F2 FF  xor         ecx,dword ptr [r10+FFFFFFFFFFFFF2B0h]
                    FF
  00000000000000FD: 33 CA              xor         ecx,edx
  00000000000000FF: 41 89 8A 3C F6 FF  mov         dword ptr [r10+FFFFFFFFFFFFF63Ch],ecx
                    FF
  0000000000000106: 48 83 EB 01        sub         rbx,1
  000000000000010A: 75 C4              jne         00000000000000D0
  000000000000010C: 41 8B 81 80 13 00  mov         eax,dword ptr [r9+0000000000001380h]
                    00
  0000000000000113: 8B D0              mov         edx,eax
  0000000000000115: 41 33 51 04        xor         edx,dword ptr [r9+4]
  0000000000000119: 48 8B 1C 24        mov         rbx,qword ptr [rsp]
  000000000000011D: 0F BA F2 1F        btr         edx,1Fh
  0000000000000121: 33 D0              xor         edx,eax
  0000000000000123: 8B C2              mov         eax,edx
  0000000000000125: 24 01              and         al,1
  0000000000000127: F6 D8              neg         al
  0000000000000129: 1B C9              sbb         ecx,ecx
  000000000000012B: D1 EA              shr         edx,1
  000000000000012D: 81 E1 DF B0 08 99  and         ecx,9908B0DFh
  0000000000000133: 41 33 89 34 06 00  xor         ecx,dword ptr [r9+0000000000000634h]
                    00
  000000000000013A: 33 CA              xor         ecx,edx
  000000000000013C: 41 89 89 C0 09 00  mov         dword ptr [r9+00000000000009C0h],ecx
                    00
  0000000000000143: 33 C9              xor         ecx,ecx
  0000000000000145: 41 89 09           mov         dword ptr [r9],ecx
  0000000000000148: 8B C1              mov         eax,ecx
  000000000000014A: 41 8B 54 81 04     mov         edx,dword ptr [r9+rax*4+4]
  000000000000014F: 8D 41 01           lea         eax,[rcx+1]
  0000000000000152: 41 89 01           mov         dword ptr [r9],eax
  0000000000000155: 8B CA              mov         ecx,edx
  0000000000000157: 41 8B 81 84 13 00  mov         eax,dword ptr [r9+0000000000001384h]
                    00
  000000000000015E: C1 E9 0B           shr         ecx,0Bh
  0000000000000161: 23 C1              and         eax,ecx
  0000000000000163: 33 D0              xor         edx,eax
  0000000000000165: 8B C2              mov         eax,edx
  0000000000000167: 25 AD 58 3A FF     and         eax,0FF3A58ADh
  000000000000016C: C1 E0 07           shl         eax,7
  000000000000016F: 33 D0              xor         edx,eax
  0000000000000171: 8B C2              mov         eax,edx
  0000000000000173: 25 8C DF FF FF     and         eax,0FFFFDF8Ch
  0000000000000178: C1 E0 0F           shl         eax,0Fh
  000000000000017B: 33 D0              xor         edx,eax
  000000000000017D: 8B C2              mov         eax,edx
  000000000000017F: C1 E8 12           shr         eax,12h
  0000000000000182: 33 C2              xor         eax,edx
  0000000000000184: 48 83 C4 08        add         rsp,8
  0000000000000188: C3                 ret

??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ (public: void __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::`vbase destructor'(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000009: 48 8D 99 B0 00 00  lea         rbx,[rcx+0B0h]
                    00
  0000000000000010: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000014: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000001B: 48 89 84 1A 50 FF  mov         qword ptr [rdx+rbx-0B0h],rax
                    FF FF
  0000000000000023: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000026: 48 8D 8B 60 FF FF  lea         rcx,[rbx-0A0h]
                    FF
  000000000000002D: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000031: 44 8D 82 50 FF FF  lea         r8d,[rdx-0B0h]
                    FF
  0000000000000038: 44 89 84 1A 4C FF  mov         dword ptr [rdx+rbx-0B4h],r8d
                    FF FF
  0000000000000040: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000045: 48 8D 8B 68 FF FF  lea         rcx,[rbx-98h]
                    FF
  000000000000004C: FF 15 00 00 00 00  call        qword ptr [__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ]
  0000000000000052: 48 8B CB           mov         rcx,rbx
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5B                 pop         rbx
  000000000000005A: 48 FF 25 00 00 00  jmp         qword ptr [__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ]
                    00

??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ([thunk]:public: virtual void * __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'`vtordisp{4294967292,0}' (unsigned int)):
  0000000000000000: 48 63 41 FC        movsxd      rax,dword ptr [rcx-4]
  0000000000000004: 48 2B C8           sub         rcx,rax
  0000000000000007: E9 00 00 00 00     jmp         ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z

??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 48 8B F9           mov         rdi,rcx
  000000000000000F: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000014: F6 C3 01           test        bl,1
  0000000000000017: 74 0D              je          0000000000000026
  0000000000000019: BA 98 00 00 00     mov         edx,98h
  000000000000001E: 48 8B CF           mov         rcx,rdi
  0000000000000021: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000026: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000002B: 48 8B C7           mov         rax,rdi
  000000000000002E: 48 83 C4 20        add         rsp,20h
  0000000000000032: 5F                 pop         rdi
  0000000000000033: C3                 ret

??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D B9 50 FF FF  lea         rdi,[rcx-0B0h]
                    FF
  0000000000000011: 8B DA              mov         ebx,edx
  0000000000000013: 48 8B CF           mov         rcx,rdi
  0000000000000016: E8 00 00 00 00     call        ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  000000000000001B: F6 C3 01           test        bl,1
  000000000000001E: 74 0D              je          000000000000002D
  0000000000000020: BA 10 01 00 00     mov         edx,110h
  0000000000000025: 48 8B CF           mov         rcx,rdi
  0000000000000028: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000002D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000032: 48 8B C7           mov         rax,rdi
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: C3                 ret

??_Gbad_alloc@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_alloc::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gbad_array_new_length@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_array_new_length::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gbad_cast@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_cast::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gexception@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::exception::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ (protected: bool __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Endwrite(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 60        sub         rsp,60h
  0000000000000006: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  000000000000000D: 48 33 C4           xor         rax,rsp
  0000000000000010: 48 89 44 24 58     mov         qword ptr [rsp+58h],rax
  0000000000000015: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  000000000000001A: 48 8B D9           mov         rbx,rcx
  000000000000001D: 0F 84 B0 00 00 00  je          00000000000000D3
  0000000000000023: 80 79 71 00        cmp         byte ptr [rcx+71h],0
  0000000000000027: 0F 84 A6 00 00 00  je          00000000000000D3
  000000000000002D: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000030: BA FF FF FF FF     mov         edx,0FFFFFFFFh
  0000000000000035: 48 89 7C 24 78     mov         qword ptr [rsp+78h],rdi
  000000000000003A: FF 50 18           call        qword ptr [rax+18h]
  000000000000003D: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000040: 0F 84 89 00 00 00  je          00000000000000CF
  0000000000000046: 48 8B 4B 68        mov         rcx,qword ptr [rbx+68h]
  000000000000004A: 48 8D 44 24 30     lea         rax,[rsp+30h]
  000000000000004F: 48 8D 53 74        lea         rdx,[rbx+74h]
  0000000000000053: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000058: 4C 8D 4C 24 58     lea         r9,[rsp+58h]
  000000000000005D: 4C 8D 44 24 38     lea         r8,[rsp+38h]
  0000000000000062: FF 15 00 00 00 00  call        qword ptr [__imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z]
  0000000000000068: 85 C0              test        eax,eax
  000000000000006A: 74 28              je          0000000000000094
  000000000000006C: 83 E8 01           sub         eax,1
  000000000000006F: 74 27              je          0000000000000098
  0000000000000071: 83 F8 02           cmp         eax,2
  0000000000000074: 75 59              jne         00000000000000CF
  0000000000000076: C6 43 71 00        mov         byte ptr [rbx+71h],0
  000000000000007A: B0 01              mov         al,1
  000000000000007C: 48 8B 7C 24 78     mov         rdi,qword ptr [rsp+78h]
  0000000000000081: 48 8B 4C 24 58     mov         rcx,qword ptr [rsp+58h]
  0000000000000086: 48 33 CC           xor         rcx,rsp
  0000000000000089: E8 00 00 00 00     call        __security_check_cookie
  000000000000008E: 48 83 C4 60        add         rsp,60h
  0000000000000092: 5B                 pop         rbx
  0000000000000093: C3                 ret
  0000000000000094: C6 43 71 00        mov         byte ptr [rbx+71h],0
  0000000000000098: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  000000000000009D: 48 8D 44 24 38     lea         rax,[rsp+38h]
  00000000000000A2: 48 2B F8           sub         rdi,rax
  00000000000000A5: 74 1F              je          00000000000000C6
  00000000000000A7: 4C 8B 8B 80 00 00  mov         r9,qword ptr [rbx+80h]
                    00
  00000000000000AE: 48 8D 4C 24 38     lea         rcx,[rsp+38h]
  00000000000000B3: 4C 8B C7           mov         r8,rdi
  00000000000000B6: BA 01 00 00 00     mov         edx,1
  00000000000000BB: FF 15 00 00 00 00  call        qword ptr [__imp_fwrite]
  00000000000000C1: 48 3B F8           cmp         rdi,rax
  00000000000000C4: 75 09              jne         00000000000000CF
  00000000000000C6: 80 7B 71 00        cmp         byte ptr [rbx+71h],0
  00000000000000CA: 0F 94 C0           sete        al
  00000000000000CD: EB AD              jmp         000000000000007C
  00000000000000CF: 32 C0              xor         al,al
  00000000000000D1: EB A9              jmp         000000000000007C
  00000000000000D3: B0 01              mov         al,1
  00000000000000D5: 48 8B 4C 24 58     mov         rcx,qword ptr [rsp+58h]
  00000000000000DA: 48 33 CC           xor         rcx,rsp
  00000000000000DD: E8 00 00 00 00     call        __security_check_cookie
  00000000000000E2: 48 83 C4 60        add         rsp,60h
  00000000000000E6: 5B                 pop         rbx
  00000000000000E7: C3                 ret

?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Lock(void)):
  0000000000000000: 48 8B 89 80 00 00  mov         rcx,qword ptr [rcx+80h]
                    00
  0000000000000007: 48 85 C9           test        rcx,rcx
  000000000000000A: 74 07              je          0000000000000013
  000000000000000C: 48 FF 25 00 00 00  jmp         qword ptr [__imp__lock_file]
                    00
  0000000000000013: C3                 ret

?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ (private: void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Reset_back(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: FF 15 00 00 00 00  call        qword ptr [__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  000000000000000F: 48 8D 53 70        lea         rdx,[rbx+70h]
  0000000000000013: 48 3B C2           cmp         rax,rdx
  0000000000000016: 75 20              jne         0000000000000038
  0000000000000018: 48 8B 93 88 00 00  mov         rdx,qword ptr [rbx+88h]
                    00
  000000000000001F: 48 8B CB           mov         rcx,rbx
  0000000000000022: 4C 8B 8B 90 00 00  mov         r9,qword ptr [rbx+90h]
                    00
  0000000000000029: 4C 8B C2           mov         r8,rdx
  000000000000002C: 48 83 C4 20        add         rsp,20h
  0000000000000030: 5B                 pop         rbx
  0000000000000031: 48 FF 25 00 00 00  jmp         qword ptr [__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z]
                    00
  0000000000000038: 48 83 C4 20        add         rsp,20h
  000000000000003C: 5B                 pop         rbx
  000000000000003D: C3                 ret

?_Throw_bad_array_new_length@std@@YAXXZ (void __cdecl std::_Throw_bad_array_new_length(void)):
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000009: E8 00 00 00 00     call        ??0bad_array_new_length@std@@QEAA@XZ
  000000000000000E: 48 8D 15 00 00 00  lea         rdx,[_TI3?AVbad_array_new_length@std@@]
                    00
  0000000000000015: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000001A: E8 00 00 00 00     call        _CxxThrowException
  000000000000001F: CC                 int         3

?_Throw_bad_cast@std@@YAXXZ (void __cdecl std::_Throw_bad_cast(void)):
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000009: E8 00 00 00 00     call        ??0bad_cast@std@@QEAA@XZ
  000000000000000E: 48 8D 15 00 00 00  lea         rdx,[_TI2?AVbad_cast@std@@]
                    00
  0000000000000015: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000001A: E8 00 00 00 00     call        _CxxThrowException
  000000000000001F: CC                 int         3

?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Unlock(void)):
  0000000000000000: 48 8B 89 80 00 00  mov         rcx,qword ptr [rcx+80h]
                    00
  0000000000000007: 48 85 C9           test        rcx,rcx
  000000000000000A: 74 07              je          0000000000000013
  000000000000000C: 48 FF 25 00 00 00  jmp         qword ptr [__imp__unlock_file]
                    00
  0000000000000013: C3                 ret

?_Xlen_string@std@@YAXXZ (void __cdecl std::_Xlen_string(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@JFNIOLAK@string?5too?5long@]
                    00
  000000000000000B: E8 00 00 00 00     call        ?_Xlength_error@std@@YAXPEBD@Z
  0000000000000010: CC                 int         3

?add@@YAXPEIAH00H@Z (void __cdecl add(int * __restrict,int * __restrict,int * __restrict,int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 8B D9           mov         rbx,rcx
  0000000000000005: 4C 8B DA           mov         r11,rdx
  0000000000000008: 33 C9              xor         ecx,ecx
  000000000000000A: 44 8B D1           mov         r10d,ecx
  000000000000000D: 45 85 C9           test        r9d,r9d
  0000000000000010: 0F 8E EB 00 00 00  jle         0000000000000101
  0000000000000016: 41 83 F9 02        cmp         r9d,2
  000000000000001A: 0F 82 E1 00 00 00  jb          0000000000000101
  0000000000000020: 49 2B D0           sub         rdx,r8
  0000000000000023: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  0000000000000028: 48 89 7C 24 18     mov         qword ptr [rsp+18h],rdi
  000000000000002D: 41 83 F9 10        cmp         r9d,10h
  0000000000000031: 0F 82 86 00 00 00  jb          00000000000000BD
  0000000000000037: 41 8B C1           mov         eax,r9d
  000000000000003A: 48 8B FB           mov         rdi,rbx
  000000000000003D: 83 E0 F0           and         eax,0FFFFFFF0h
  0000000000000040: 48 63 F0           movsxd      rsi,eax
  0000000000000043: 49 2B F8           sub         rdi,r8
  0000000000000046: 49 8D 40 10        lea         rax,[r8+10h]
  000000000000004A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000050: F3 0F 6F 44 10 F0  movdqu      xmm0,xmmword ptr [rax+rdx-10h]
  0000000000000056: 41 83 C2 10        add         r10d,10h
  000000000000005A: 48 83 C1 10        add         rcx,10h
  000000000000005E: F3 0F 6F 48 F0     movdqu      xmm1,xmmword ptr [rax-10h]
  0000000000000063: F3 0F 6F 10        movdqu      xmm2,xmmword ptr [rax]
  0000000000000067: 48 8D 40 40        lea         rax,[rax+40h]
  000000000000006B: 66 0F FE C8        paddd       xmm1,xmm0
  000000000000006F: F3 0F 6F 44 10 C0  movdqu      xmm0,xmmword ptr [rax+rdx-40h]
  0000000000000075: F3 0F 7F 4C 07 B0  movdqu      xmmword ptr [rdi+rax-50h],xmm1
  000000000000007B: 66 0F FE D0        paddd       xmm2,xmm0
  000000000000007F: F3 0F 6F 44 10 D0  movdqu      xmm0,xmmword ptr [rax+rdx-30h]
  0000000000000085: F3 0F 6F 48 D0     movdqu      xmm1,xmmword ptr [rax-30h]
  000000000000008A: F3 0F 7F 54 07 C0  movdqu      xmmword ptr [rdi+rax-40h],xmm2
  0000000000000090: 66 0F FE C8        paddd       xmm1,xmm0
  0000000000000094: F3 0F 6F 44 10 E0  movdqu      xmm0,xmmword ptr [rax+rdx-20h]
  000000000000009A: F3 0F 6F 50 E0     movdqu      xmm2,xmmword ptr [rax-20h]
  000000000000009F: F3 0F 7F 4C 07 D0  movdqu      xmmword ptr [rdi+rax-30h],xmm1
  00000000000000A5: 66 0F FE D0        paddd       xmm2,xmm0
  00000000000000A9: F3 0F 7F 54 07 E0  movdqu      xmmword ptr [rdi+rax-20h],xmm2
  00000000000000AF: 48 3B CE           cmp         rcx,rsi
  00000000000000B2: 7C 9C              jl          0000000000000050
  00000000000000B4: 41 8B C1           mov         eax,r9d
  00000000000000B7: 24 0F              and         al,0Fh
  00000000000000B9: 3C 02              cmp         al,2
  00000000000000BB: 72 3A              jb          00000000000000F7
  00000000000000BD: 41 8B C1           mov         eax,r9d
  00000000000000C0: 49 63 CA           movsxd      rcx,r10d
  00000000000000C3: 83 E0 FE           and         eax,0FFFFFFFEh
  00000000000000C6: 48 8B FB           mov         rdi,rbx
  00000000000000C9: 48 63 F0           movsxd      rsi,eax
  00000000000000CC: 49 2B F8           sub         rdi,r8
  00000000000000CF: 49 8D 04 88        lea         rax,[r8+rcx*4]
  00000000000000D3: F3 0F 7E 0C 10     movq        xmm1,mmword ptr [rax+rdx]
  00000000000000D8: 41 83 C2 02        add         r10d,2
  00000000000000DC: F3 0F 7E 00        movq        xmm0,mmword ptr [rax]
  00000000000000E0: 48 8D 40 08        lea         rax,[rax+8]
  00000000000000E4: 66 0F FE C8        paddd       xmm1,xmm0
  00000000000000E8: 48 83 C1 02        add         rcx,2
  00000000000000EC: 66 0F D6 4C 07 F8  movq        mmword ptr [rdi+rax-8],xmm1
  00000000000000F2: 48 3B CE           cmp         rcx,rsi
  00000000000000F5: 7C DC              jl          00000000000000D3
  00000000000000F7: 48 8B 74 24 10     mov         rsi,qword ptr [rsp+10h]
  00000000000000FC: 48 8B 7C 24 18     mov         rdi,qword ptr [rsp+18h]
  0000000000000101: 49 63 CA           movsxd      rcx,r10d
  0000000000000104: 49 63 D1           movsxd      rdx,r9d
  0000000000000107: 48 3B CA           cmp         rcx,rdx
  000000000000010A: 7D 27              jge         0000000000000133
  000000000000010C: 4D 2B D8           sub         r11,r8
  000000000000010F: 49 8D 04 88        lea         rax,[r8+rcx*4]
  0000000000000113: 49 2B D8           sub         rbx,r8
  0000000000000116: 48 2B D1           sub         rdx,rcx
  0000000000000119: 0F 1F 80 00 00 00  nop         dword ptr [rax+0000000000000000h]
                    00
  0000000000000120: 42 8B 0C 18        mov         ecx,dword ptr [rax+r11]
  0000000000000124: 03 08              add         ecx,dword ptr [rax]
  0000000000000126: 89 0C 03           mov         dword ptr [rbx+rax],ecx
  0000000000000129: 48 8D 40 04        lea         rax,[rax+4]
  000000000000012D: 48 83 EA 01        sub         rdx,1
  0000000000000131: 75 ED              jne         0000000000000120
  0000000000000133: 5B                 pop         rbx
  0000000000000134: C3                 ret

?add_vectorized@@YAXPEAH00H@Z (void __cdecl add_vectorized(int *,int *,int *,int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 4C 8B D9           mov         r11,rcx
  0000000000000005: 48 8B DA           mov         rbx,rdx
  0000000000000008: 33 C9              xor         ecx,ecx
  000000000000000A: 44 8B D1           mov         r10d,ecx
  000000000000000D: 45 85 C9           test        r9d,r9d
  0000000000000010: 0F 8E 1B 01 00 00  jle         0000000000000131
  0000000000000016: 41 83 F9 02        cmp         r9d,2
  000000000000001A: 0F 82 11 01 00 00  jb          0000000000000131
  0000000000000020: 49 63 C1           movsxd      rax,r9d
  0000000000000023: 48 89 7C 24 18     mov         qword ptr [rsp+18h],rdi
  0000000000000028: 48 8D 14 85 FC FF  lea         rdx,[rax*4+FFFFFFFFFFFFFFFCh]
                    FF FF
  0000000000000030: 4A 8D 04 02        lea         rax,[rdx+r8]
  0000000000000034: 4A 8D 3C 1A        lea         rdi,[rdx+r11]
  0000000000000038: 4C 3B D8           cmp         r11,rax
  000000000000003B: 77 09              ja          0000000000000046
  000000000000003D: 49 3B F8           cmp         rdi,r8
  0000000000000040: 0F 83 E6 00 00 00  jae         000000000000012C
  0000000000000046: 48 8D 04 1A        lea         rax,[rdx+rbx]
  000000000000004A: 4C 3B D8           cmp         r11,rax
  000000000000004D: 77 09              ja          0000000000000058
  000000000000004F: 48 3B FB           cmp         rdi,rbx
  0000000000000052: 0F 83 D4 00 00 00  jae         000000000000012C
  0000000000000058: 48 8B D3           mov         rdx,rbx
  000000000000005B: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  0000000000000060: 49 2B D0           sub         rdx,r8
  0000000000000063: 41 83 F9 10        cmp         r9d,10h
  0000000000000067: 0F 82 80 00 00 00  jb          00000000000000ED
  000000000000006D: 41 8B C1           mov         eax,r9d
  0000000000000070: 83 E0 F0           and         eax,0FFFFFFF0h
  0000000000000073: 49 8B FB           mov         rdi,r11
  0000000000000076: 48 63 F0           movsxd      rsi,eax
  0000000000000079: 49 2B F8           sub         rdi,r8
  000000000000007C: 49 8D 40 10        lea         rax,[r8+10h]
  0000000000000080: F3 0F 6F 40 F0     movdqu      xmm0,xmmword ptr [rax-10h]
  0000000000000085: 41 83 C2 10        add         r10d,10h
  0000000000000089: 48 83 C1 10        add         rcx,10h
  000000000000008D: F3 0F 6F 4C 02 F0  movdqu      xmm1,xmmword ptr [rdx+rax-10h]
  0000000000000093: F3 0F 6F 10        movdqu      xmm2,xmmword ptr [rax]
  0000000000000097: 48 8D 40 40        lea         rax,[rax+40h]
  000000000000009B: 66 0F FE C8        paddd       xmm1,xmm0
  000000000000009F: F3 0F 6F 44 02 C0  movdqu      xmm0,xmmword ptr [rdx+rax-40h]
  00000000000000A5: F3 0F 7F 4C 07 B0  movdqu      xmmword ptr [rdi+rax-50h],xmm1
  00000000000000AB: 66 0F FE D0        paddd       xmm2,xmm0
  00000000000000AF: F3 0F 6F 40 D0     movdqu      xmm0,xmmword ptr [rax-30h]
  00000000000000B4: F3 0F 6F 4C 02 D0  movdqu      xmm1,xmmword ptr [rdx+rax-30h]
  00000000000000BA: F3 0F 7F 54 07 C0  movdqu      xmmword ptr [rdi+rax-40h],xmm2
  00000000000000C0: 66 0F FE C8        paddd       xmm1,xmm0
  00000000000000C4: F3 0F 6F 40 E0     movdqu      xmm0,xmmword ptr [rax-20h]
  00000000000000C9: F3 0F 6F 54 02 E0  movdqu      xmm2,xmmword ptr [rdx+rax-20h]
  00000000000000CF: F3 0F 7F 4C 07 D0  movdqu      xmmword ptr [rdi+rax-30h],xmm1
  00000000000000D5: 66 0F FE D0        paddd       xmm2,xmm0
  00000000000000D9: F3 0F 7F 54 07 E0  movdqu      xmmword ptr [rdi+rax-20h],xmm2
  00000000000000DF: 48 3B CE           cmp         rcx,rsi
  00000000000000E2: 7C 9C              jl          0000000000000080
  00000000000000E4: 41 8B C1           mov         eax,r9d
  00000000000000E7: 24 0F              and         al,0Fh
  00000000000000E9: 3C 02              cmp         al,2
  00000000000000EB: 72 3A              jb          0000000000000127
  00000000000000ED: 41 8B C1           mov         eax,r9d
  00000000000000F0: 83 E0 FE           and         eax,0FFFFFFFEh
  00000000000000F3: 49 63 CA           movsxd      rcx,r10d
  00000000000000F6: 49 8B FB           mov         rdi,r11
  00000000000000F9: 48 63 F0           movsxd      rsi,eax
  00000000000000FC: 49 2B F8           sub         rdi,r8
  00000000000000FF: 49 8D 04 88        lea         rax,[r8+rcx*4]
  0000000000000103: F3 0F 7E 0C 10     movq        xmm1,mmword ptr [rax+rdx]
  0000000000000108: 41 83 C2 02        add         r10d,2
  000000000000010C: F3 0F 7E 00        movq        xmm0,mmword ptr [rax]
  0000000000000110: 48 8D 40 08        lea         rax,[rax+8]
  0000000000000114: 66 0F FE C8        paddd       xmm1,xmm0
  0000000000000118: 48 83 C1 02        add         rcx,2
  000000000000011C: 66 0F D6 4C 07 F8  movq        mmword ptr [rdi+rax-8],xmm1
  0000000000000122: 48 3B CE           cmp         rcx,rsi
  0000000000000125: 7C DC              jl          0000000000000103
  0000000000000127: 48 8B 74 24 10     mov         rsi,qword ptr [rsp+10h]
  000000000000012C: 48 8B 7C 24 18     mov         rdi,qword ptr [rsp+18h]
  0000000000000131: 49 63 CA           movsxd      rcx,r10d
  0000000000000134: 49 63 D1           movsxd      rdx,r9d
  0000000000000137: 48 3B CA           cmp         rcx,rdx
  000000000000013A: 7D 27              jge         0000000000000163
  000000000000013C: 49 2B D8           sub         rbx,r8
  000000000000013F: 49 8D 04 88        lea         rax,[r8+rcx*4]
  0000000000000143: 4D 2B D8           sub         r11,r8
  0000000000000146: 48 2B D1           sub         rdx,rcx
  0000000000000149: 0F 1F 80 00 00 00  nop         dword ptr [rax+0000000000000000h]
                    00
  0000000000000150: 8B 0C 18           mov         ecx,dword ptr [rax+rbx]
  0000000000000153: 03 08              add         ecx,dword ptr [rax]
  0000000000000155: 41 89 0C 03        mov         dword ptr [r11+rax],ecx
  0000000000000159: 48 8D 40 04        lea         rax,[rax+4]
  000000000000015D: 48 83 EA 01        sub         rdx,1
  0000000000000161: 75 ED              jne         0000000000000150
  0000000000000163: 5B                 pop         rbx
  0000000000000164: C3                 ret

?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ (public: class std::basic_filebuf<char,struct std::char_traits<char> > * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::close(void)):
  0000000000000000: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  0000000000000012: 48 8B F9           mov         rdi,rcx
  0000000000000015: 74 5A              je          0000000000000071
  0000000000000017: 48 89 5C 24 30     mov         qword ptr [rsp+30h],rbx
  000000000000001C: FF 15 00 00 00 00  call        qword ptr [__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000022: 48 8D 57 70        lea         rdx,[rdi+70h]
  0000000000000026: 48 3B C2           cmp         rax,rdx
  0000000000000029: 75 1A              jne         0000000000000045
  000000000000002B: 48 8B 97 88 00 00  mov         rdx,qword ptr [rdi+88h]
                    00
  0000000000000032: 48 8B CF           mov         rcx,rdi
  0000000000000035: 4C 8B 8F 90 00 00  mov         r9,qword ptr [rdi+90h]
                    00
  000000000000003C: 4C 8B C2           mov         r8,rdx
  000000000000003F: FF 15 00 00 00 00  call        qword ptr [__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z]
  0000000000000045: 48 8B CF           mov         rcx,rdi
  0000000000000048: E8 00 00 00 00     call        ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
  000000000000004D: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  0000000000000054: 33 DB              xor         ebx,ebx
  0000000000000056: 84 C0              test        al,al
  0000000000000058: 48 0F 45 DF        cmovne      rbx,rdi
  000000000000005C: FF 15 00 00 00 00  call        qword ptr [__imp_fclose]
  0000000000000062: 33 F6              xor         esi,esi
  0000000000000064: 85 C0              test        eax,eax
  0000000000000066: 48 0F 44 F3        cmove       rsi,rbx
  000000000000006A: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000006F: EB 02              jmp         0000000000000073
  0000000000000071: 33 F6              xor         esi,esi
  0000000000000073: 48 8B CF           mov         rcx,rdi
  0000000000000076: C6 47 7C 00        mov         byte ptr [rdi+7Ch],0
  000000000000007A: C6 47 71 00        mov         byte ptr [rdi+71h],0
  000000000000007E: FF 15 00 00 00 00  call        qword ptr [__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ]
  0000000000000084: 48 C7 87 80 00 00  mov         qword ptr [rdi+80h],0
                    00 00 00 00 00
  000000000000008F: 48 8B C6           mov         rax,rsi
  0000000000000092: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A]
                    00
  0000000000000099: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  000000000000009E: 48 89 4F 74        mov         qword ptr [rdi+74h],rcx
  00000000000000A2: 48 C7 47 68 00 00  mov         qword ptr [rdi+68h],0
                    00 00
  00000000000000AA: 48 83 C4 20        add         rsp,20h
  00000000000000AE: 5F                 pop         rdi
  00000000000000AF: C3                 ret

?fixed@std@@YAAEAVios_base@1@AEAV21@@Z (class std::ios_base & __cdecl std::fixed(class std::ios_base &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: BA 00 20 00 00     mov         edx,2000h
  000000000000000B: 41 B8 00 30 00 00  mov         r8d,3000h
  0000000000000011: 48 8B D9           mov         rbx,rcx
  0000000000000014: FF 15 00 00 00 00  call        qword ptr [__imp_?setf@ios_base@std@@QEAAHHH@Z]
  000000000000001A: 48 8B C3           mov         rax,rbx
  000000000000001D: 48 83 C4 20        add         rsp,20h
  0000000000000021: 5B                 pop         rbx
  0000000000000022: C3                 ret

?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z (protected: virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::imbue(class std::locale const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: 48 8B CA           mov         rcx,rdx
  0000000000000010: E8 00 00 00 00     call        ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
  0000000000000015: 48 8B C8           mov         rcx,rax
  0000000000000018: 48 8B F8           mov         rdi,rax
  000000000000001B: FF 15 00 00 00 00  call        qword ptr [__imp_?always_noconv@codecvt_base@std@@QEBA_NXZ]
  0000000000000021: 84 C0              test        al,al
  0000000000000023: 74 13              je          0000000000000038
  0000000000000025: 48 C7 43 68 00 00  mov         qword ptr [rbx+68h],0
                    00 00
  000000000000002D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000032: 48 83 C4 20        add         rsp,20h
  0000000000000036: 5F                 pop         rdi
  0000000000000037: C3                 ret
  0000000000000038: 48 8B CB           mov         rcx,rbx
  000000000000003B: 48 89 7B 68        mov         qword ptr [rbx+68h],rdi
  000000000000003F: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000044: 48 83 C4 20        add         rsp,20h
  0000000000000048: 5F                 pop         rdi
  0000000000000049: 48 FF 25 00 00 00  jmp         qword ptr [__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ]
                    00

?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ (public: static class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > __cdecl std::chrono::steady_clock::now(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: E8 00 00 00 00     call        _Query_perf_frequency
  0000000000000012: 48 8B F8           mov         rdi,rax
  0000000000000015: E8 00 00 00 00     call        _Query_perf_counter
  000000000000001A: 4C 8B C8           mov         r9,rax
  000000000000001D: 48 81 FF 80 96 98  cmp         rdi,989680h
                    00
  0000000000000024: 75 15              jne         000000000000003B
  0000000000000026: 49 6B C1 64        imul        rax,r9,64h
  000000000000002A: 48 89 03           mov         qword ptr [rbx],rax
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: C3                 ret
  000000000000003B: 48 81 FF 00 36 6E  cmp         rdi,16E3600h
                    01
  0000000000000042: 75 65              jne         00000000000000A9
  0000000000000044: 49 BA F3 8C 90 94  mov         r10,0B2F4FC0794908CF3h
                    07 FC F4 B2
  000000000000004E: 49 8B C2           mov         rax,r10
  0000000000000051: 49 F7 E9           imul        r9
  0000000000000054: 49 8B C2           mov         rax,r10
  0000000000000057: 4D 8D 04 11        lea         r8,[r9+rdx]
  000000000000005B: 49 C1 F8 18        sar         r8,18h
  000000000000005F: 49 8B C8           mov         rcx,r8
  0000000000000062: 48 C1 E9 3F        shr         rcx,3Fh
  0000000000000066: 4C 03 C1           add         r8,rcx
  0000000000000069: 49 69 C8 00 36 6E  imul        rcx,r8,16E3600h
                    01
  0000000000000070: 4C 2B C9           sub         r9,rcx
  0000000000000073: 49 69 C9 00 CA 9A  imul        rcx,r9,3B9ACA00h
                    3B
  000000000000007A: 48 F7 E9           imul        rcx
  000000000000007D: 48 03 D1           add         rdx,rcx
  0000000000000080: 48 C1 FA 18        sar         rdx,18h
  0000000000000084: 48 8B C2           mov         rax,rdx
  0000000000000087: 48 C1 E8 3F        shr         rax,3Fh
  000000000000008B: 48 03 D0           add         rdx,rax
  000000000000008E: 49 69 C0 00 CA 9A  imul        rax,r8,3B9ACA00h
                    3B
  0000000000000095: 48 03 D0           add         rdx,rax
  0000000000000098: 48 8B C3           mov         rax,rbx
  000000000000009B: 48 89 13           mov         qword ptr [rbx],rdx
  000000000000009E: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000A3: 48 83 C4 20        add         rsp,20h
  00000000000000A7: 5F                 pop         rdi
  00000000000000A8: C3                 ret
  00000000000000A9: 48 99              cqo
  00000000000000AB: 48 F7 FF           idiv        rax,rdi
  00000000000000AE: 48 8B C8           mov         rcx,rax
  00000000000000B1: 48 69 C2 00 CA 9A  imul        rax,rdx,3B9ACA00h
                    3B
  00000000000000B8: 48 69 C9 00 CA 9A  imul        rcx,rcx,3B9ACA00h
                    3B
  00000000000000BF: 48 99              cqo
  00000000000000C1: 48 F7 FF           idiv        rax,rdi
  00000000000000C4: 48 03 C1           add         rax,rcx
  00000000000000C7: 48 89 03           mov         qword ptr [rbx],rax
  00000000000000CA: 48 8B C3           mov         rax,rbx
  00000000000000CD: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000D2: 48 83 C4 20        add         rsp,20h
  00000000000000D6: 5F                 pop         rdi
  00000000000000D7: C3                 ret

?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::overflow(int)):
  0000000000000000: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  000000000000000D: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000014: 48 33 C4           xor         rax,rsp
  0000000000000017: 48 89 44 24 78     mov         qword ptr [rsp+78h],rax
  000000000000001C: 8B F2              mov         esi,edx
  000000000000001E: 48 8B F9           mov         rdi,rcx
  0000000000000021: 83 FA FF           cmp         edx,0FFFFFFFFh
  0000000000000024: 75 07              jne         000000000000002D
  0000000000000026: 33 C0              xor         eax,eax
  0000000000000028: E9 69 01 00 00     jmp         0000000000000196
  000000000000002D: 48 89 9C 24 A0 00  mov         qword ptr [rsp+0A0h],rbx
                    00 00
  0000000000000035: FF 15 00 00 00 00  call        qword ptr [__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  000000000000003B: 48 85 C0           test        rax,rax
  000000000000003E: 74 2D              je          000000000000006D
  0000000000000040: 48 8B CF           mov         rcx,rdi
  0000000000000043: FF 15 00 00 00 00  call        qword ptr [__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000049: 48 8B CF           mov         rcx,rdi
  000000000000004C: 48 8B D8           mov         rbx,rax
  000000000000004F: FF 15 00 00 00 00  call        qword ptr [__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000055: 48 3B C3           cmp         rax,rbx
  0000000000000058: 73 13              jae         000000000000006D
  000000000000005A: 48 8B CF           mov         rcx,rdi
  000000000000005D: FF 15 00 00 00 00  call        qword ptr [__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ]
  0000000000000063: 40 88 30           mov         byte ptr [rax],sil
  0000000000000066: 8B C6              mov         eax,esi
  0000000000000068: E9 21 01 00 00     jmp         000000000000018E
  000000000000006D: 48 83 BF 80 00 00  cmp         qword ptr [rdi+80h],0
                    00 00
  0000000000000075: 0F 84 0E 01 00 00  je          0000000000000189
  000000000000007B: 48 8B CF           mov         rcx,rdi
  000000000000007E: FF 15 00 00 00 00  call        qword ptr [__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000084: 48 8D 4F 70        lea         rcx,[rdi+70h]
  0000000000000088: 48 3B C1           cmp         rax,rcx
  000000000000008B: 75 1A              jne         00000000000000A7
  000000000000008D: 48 8B 97 88 00 00  mov         rdx,qword ptr [rdi+88h]
                    00
  0000000000000094: 48 8B CF           mov         rcx,rdi
  0000000000000097: 4C 8B 8F 90 00 00  mov         r9,qword ptr [rdi+90h]
                    00
  000000000000009E: 4C 8B C2           mov         r8,rdx
  00000000000000A1: FF 15 00 00 00 00  call        qword ptr [__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z]
  00000000000000A7: 48 8B 4F 68        mov         rcx,qword ptr [rdi+68h]
  00000000000000AB: 48 85 C9           test        rcx,rcx
  00000000000000AE: 75 22              jne         00000000000000D2
  00000000000000B0: 48 8B 97 80 00 00  mov         rdx,qword ptr [rdi+80h]
                    00
  00000000000000B7: 40 0F BE CE        movsx       ecx,sil
  00000000000000BB: FF 15 00 00 00 00  call        qword ptr [__imp_fputc]
  00000000000000C1: B9 FF FF FF FF     mov         ecx,0FFFFFFFFh
  00000000000000C6: 3B C1              cmp         eax,ecx
  00000000000000C8: 0F 45 CE           cmovne      ecx,esi
  00000000000000CB: 8B C1              mov         eax,ecx
  00000000000000CD: E9 BC 00 00 00     jmp         000000000000018E
  00000000000000D2: 48 8D 44 24 48     lea         rax,[rsp+48h]
  00000000000000D7: 40 88 74 24 40     mov         byte ptr [rsp+40h],sil
  00000000000000DC: 48 89 44 24 38     mov         qword ptr [rsp+38h],rax
  00000000000000E1: 48 8D 57 74        lea         rdx,[rdi+74h]
  00000000000000E5: 48 8D 44 24 78     lea         rax,[rsp+78h]
  00000000000000EA: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  00000000000000EF: 4C 8D 4C 24 41     lea         r9,[rsp+41h]
  00000000000000F4: 48 8D 44 24 58     lea         rax,[rsp+58h]
  00000000000000F9: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000FE: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000103: 48 8D 44 24 50     lea         rax,[rsp+50h]
  0000000000000108: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  000000000000010D: FF 15 00 00 00 00  call        qword ptr [__imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z]
  0000000000000113: 85 C0              test        eax,eax
  0000000000000115: 74 2A              je          0000000000000141
  0000000000000117: 83 E8 01           sub         eax,1
  000000000000011A: 74 25              je          0000000000000141
  000000000000011C: 83 F8 02           cmp         eax,2
  000000000000011F: 75 68              jne         0000000000000189
  0000000000000121: 0F BE 4C 24 40     movsx       ecx,byte ptr [rsp+40h]
  0000000000000126: 48 8B 97 80 00 00  mov         rdx,qword ptr [rdi+80h]
                    00
  000000000000012D: FF 15 00 00 00 00  call        qword ptr [__imp_fputc]
  0000000000000133: B9 FF FF FF FF     mov         ecx,0FFFFFFFFh
  0000000000000138: 3B C1              cmp         eax,ecx
  000000000000013A: 0F 45 CE           cmovne      ecx,esi
  000000000000013D: 8B C1              mov         eax,ecx
  000000000000013F: EB 4D              jmp         000000000000018E
  0000000000000141: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000146: 48 8D 44 24 58     lea         rax,[rsp+58h]
  000000000000014B: 48 2B D8           sub         rbx,rax
  000000000000014E: 74 1F              je          000000000000016F
  0000000000000150: 4C 8B 8F 80 00 00  mov         r9,qword ptr [rdi+80h]
                    00
  0000000000000157: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  000000000000015C: 4C 8B C3           mov         r8,rbx
  000000000000015F: BA 01 00 00 00     mov         edx,1
  0000000000000164: FF 15 00 00 00 00  call        qword ptr [__imp_fwrite]
  000000000000016A: 48 3B D8           cmp         rbx,rax
  000000000000016D: 75 1A              jne         0000000000000189
  000000000000016F: 48 8D 44 24 40     lea         rax,[rsp+40h]
  0000000000000174: C6 47 71 01        mov         byte ptr [rdi+71h],1
  0000000000000178: 48 39 44 24 50     cmp         qword ptr [rsp+50h],rax
  000000000000017D: B9 FF FF FF FF     mov         ecx,0FFFFFFFFh
  0000000000000182: 0F 45 CE           cmovne      ecx,esi
  0000000000000185: 8B C1              mov         eax,ecx
  0000000000000187: EB 05              jmp         000000000000018E
  0000000000000189: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  000000000000018E: 48 8B 9C 24 A0 00  mov         rbx,qword ptr [rsp+0A0h]
                    00 00
  0000000000000196: 48 8B 4C 24 78     mov         rcx,qword ptr [rsp+78h]
  000000000000019B: 48 33 CC           xor         rcx,rsp
  000000000000019E: E8 00 00 00 00     call        __security_check_cookie
  00000000000001A3: 48 8B B4 24 A8 00  mov         rsi,qword ptr [rsp+0A8h]
                    00 00
  00000000000001AB: 48 81 C4 80 00 00  add         rsp,80h
                    00
  00000000000001B2: 5F                 pop         rdi
  00000000000001B3: C3                 ret

?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::pbackfail(int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 8B F2              mov         esi,edx
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  000000000000001A: 48 85 C0           test        rax,rax
  000000000000001D: 74 53              je          0000000000000072
  000000000000001F: 48 8B CF           mov         rcx,rdi
  0000000000000022: FF 15 00 00 00 00  call        qword ptr [__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000028: 48 8B CF           mov         rcx,rdi
  000000000000002B: 48 8B D8           mov         rbx,rax
  000000000000002E: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000034: 48 3B D8           cmp         rbx,rax
  0000000000000037: 73 39              jae         0000000000000072
  0000000000000039: 83 FE FF           cmp         esi,0FFFFFFFFh
  000000000000003C: 74 11              je          000000000000004F
  000000000000003E: 48 8B CF           mov         rcx,rdi
  0000000000000041: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000047: 0F B6 48 FF        movzx       ecx,byte ptr [rax-1]
  000000000000004B: 3B CE              cmp         ecx,esi
  000000000000004D: 75 23              jne         0000000000000072
  000000000000004F: 48 8B CF           mov         rcx,rdi
  0000000000000052: FF 15 00 00 00 00  call        qword ptr [__imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ]
  0000000000000058: 33 C0              xor         eax,eax
  000000000000005A: 83 FE FF           cmp         esi,0FFFFFFFFh
  000000000000005D: 0F 44 F0           cmove       esi,eax
  0000000000000060: 8B C6              mov         eax,esi
  0000000000000062: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000067: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  000000000000006C: 48 83 C4 20        add         rsp,20h
  0000000000000070: 5F                 pop         rdi
  0000000000000071: C3                 ret
  0000000000000072: 48 8B 97 80 00 00  mov         rdx,qword ptr [rdi+80h]
                    00
  0000000000000079: 48 85 D2           test        rdx,rdx
  000000000000007C: 0F 84 83 00 00 00  je          0000000000000105
  0000000000000082: 83 FE FF           cmp         esi,0FFFFFFFFh
  0000000000000085: 74 7E              je          0000000000000105
  0000000000000087: 48 83 7F 68 00     cmp         qword ptr [rdi+68h],0
  000000000000008C: 75 0F              jne         000000000000009D
  000000000000008E: 40 0F B6 CE        movzx       ecx,sil
  0000000000000092: FF 15 00 00 00 00  call        qword ptr [__imp_ungetc]
  0000000000000098: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000009B: 75 C3              jne         0000000000000060
  000000000000009D: 48 8B CF           mov         rcx,rdi
  00000000000000A0: 48 8D 5F 70        lea         rbx,[rdi+70h]
  00000000000000A4: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  00000000000000AA: 48 3B C3           cmp         rax,rbx
  00000000000000AD: 74 56              je          0000000000000105
  00000000000000AF: 48 8B CF           mov         rcx,rdi
  00000000000000B2: 40 88 33           mov         byte ptr [rbx],sil
  00000000000000B5: FF 15 00 00 00 00  call        qword ptr [__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  00000000000000BB: 48 3B C3           cmp         rax,rbx
  00000000000000BE: 74 20              je          00000000000000E0
  00000000000000C0: 48 8B CF           mov         rcx,rdi
  00000000000000C3: FF 15 00 00 00 00  call        qword ptr [__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  00000000000000C9: 48 8B CF           mov         rcx,rdi
  00000000000000CC: 48 89 87 88 00 00  mov         qword ptr [rdi+88h],rax
                    00
  00000000000000D3: FF 15 00 00 00 00  call        qword ptr [__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  00000000000000D9: 48 89 87 90 00 00  mov         qword ptr [rdi+90h],rax
                    00
  00000000000000E0: 4C 8D 4F 71        lea         r9,[rdi+71h]
  00000000000000E4: 4C 8B C3           mov         r8,rbx
  00000000000000E7: 48 8B D3           mov         rdx,rbx
  00000000000000EA: 48 8B CF           mov         rcx,rdi
  00000000000000ED: FF 15 00 00 00 00  call        qword ptr [__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z]
  00000000000000F3: 8B C6              mov         eax,esi
  00000000000000F5: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000FA: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  00000000000000FF: 48 83 C4 20        add         rsp,20h
  0000000000000103: 5F                 pop         rdi
  0000000000000104: C3                 ret
  0000000000000105: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000010A: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  000000000000010F: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000114: 48 83 C4 20        add         rsp,20h
  0000000000000118: 5F                 pop         rdi
  0000000000000119: C3                 ret

?printFunctionAssembly@@YA_NAEAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z (bool __cdecl printFunctionAssembly(class std::basic_ifstream<char,struct std::char_traits<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 54              push        r12
  000000000000000E: 41 56              push        r14
  0000000000000010: 41 57              push        r15
  0000000000000012: 48 8B EC           mov         rbp,rsp
  0000000000000015: 48 83 EC 50        sub         rsp,50h
  0000000000000019: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000020: 48 33 C4           xor         rax,rsp
  0000000000000023: 48 89 45 F0        mov         qword ptr [rbp-10h],rax
  0000000000000027: 48 8B FA           mov         rdi,rdx
  000000000000002A: 4C 8B E1           mov         r12,rcx
  000000000000002D: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000030: 0F 11 45 D0        movups      xmmword ptr [rbp-30h],xmm0
  0000000000000034: 48 C7 45 E0 00 00  mov         qword ptr [rbp-20h],0
                    00 00
  000000000000003C: 48 C7 45 E8 0F 00  mov         qword ptr [rbp-18h],0Fh
                    00 00
  0000000000000044: C6 45 D0 00        mov         byte ptr [rbp-30h],0
  0000000000000048: 45 32 F6           xor         r14b,r14b
  000000000000004B: 45 32 FF           xor         r15b,r15b
  000000000000004E: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000051: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000055: 49 03 CC           add         rcx,r12
  0000000000000058: B2 0A              mov         dl,0Ah
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z]
  0000000000000060: 44 0F B6 C0        movzx       r8d,al
  0000000000000064: 48 8D 55 D0        lea         rdx,[rbp-30h]
  0000000000000068: 49 8B CC           mov         rcx,r12
  000000000000006B: E8 00 00 00 00     call        ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
  0000000000000070: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000073: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  0000000000000077: 48 03 C8           add         rcx,rax
  000000000000007A: FF 15 00 00 00 00  call        qword ptr [__imp_??Bios_base@std@@QEBA_NXZ]
  0000000000000080: 84 C0              test        al,al
  0000000000000082: 0F 84 B9 01 00 00  je          0000000000000241
  0000000000000088: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000090: 45 84 F6           test        r14b,r14b
  0000000000000093: 0F 85 9D 00 00 00  jne         0000000000000136
  0000000000000099: 4C 8B 4F 10        mov         r9,qword ptr [rdi+10h]
  000000000000009D: 4C 8B C7           mov         r8,rdi
  00000000000000A0: 48 83 7F 18 0F     cmp         qword ptr [rdi+18h],0Fh
  00000000000000A5: 76 03              jbe         00000000000000AA
  00000000000000A7: 4C 8B 07           mov         r8,qword ptr [rdi]
  00000000000000AA: 48 8D 75 D0        lea         rsi,[rbp-30h]
  00000000000000AE: 48 83 7D E8 0F     cmp         qword ptr [rbp-18h],0Fh
  00000000000000B3: 48 0F 47 75 D0     cmova       rsi,qword ptr [rbp-30h]
  00000000000000B8: 48 8B 45 E0        mov         rax,qword ptr [rbp-20h]
  00000000000000BC: 4C 3B C8           cmp         r9,rax
  00000000000000BF: 0F 87 3C 01 00 00  ja          0000000000000201
  00000000000000C5: 4D 85 C9           test        r9,r9
  00000000000000C8: 74 25              je          00000000000000EF
  00000000000000CA: 48 8D 1C 30        lea         rbx,[rax+rsi]
  00000000000000CE: 48 8B D3           mov         rdx,rbx
  00000000000000D1: 48 8B CE           mov         rcx,rsi
  00000000000000D4: E8 00 00 00 00     call        __std_search_1
  00000000000000D9: 48 3B C3           cmp         rax,rbx
  00000000000000DC: 0F 84 1F 01 00 00  je          0000000000000201
  00000000000000E2: 48 2B C6           sub         rax,rsi
  00000000000000E5: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000E9: 0F 84 12 01 00 00  je          0000000000000201
  00000000000000EF: 41 B6 01           mov         r14b,1
  00000000000000F2: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BD@ONCPFNCC@?6?9?9?9?5Assembly?5for?5@]
                    00
  00000000000000F9: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000100: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000105: 48 8B D7           mov         rdx,rdi
  0000000000000108: 48 83 7F 18 0F     cmp         qword ptr [rdi+18h],0Fh
  000000000000010D: 76 03              jbe         0000000000000112
  000000000000010F: 48 8B 17           mov         rdx,qword ptr [rdi]
  0000000000000112: 4C 8B 47 10        mov         r8,qword ptr [rdi+10h]
  0000000000000116: 48 8B C8           mov         rcx,rax
  0000000000000119: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  000000000000011E: 48 8D 15 00 00 00  lea         rdx,[??_C@_05OIOCPKAF@?5?9?9?9?6@]
                    00
  0000000000000125: 48 8B C8           mov         rcx,rax
  0000000000000128: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000012D: 45 0F B6 FE        movzx       r15d,r14b
  0000000000000131: E9 CB 00 00 00     jmp         0000000000000201
  0000000000000136: 4C 8B 45 E0        mov         r8,qword ptr [rbp-20h]
  000000000000013A: 4D 85 C0           test        r8,r8
  000000000000013D: 0F 84 FB 00 00 00  je          000000000000023E
  0000000000000143: 48 8D 75 D0        lea         rsi,[rbp-30h]
  0000000000000147: 48 8B 45 D0        mov         rax,qword ptr [rbp-30h]
  000000000000014B: 48 8B 4D E8        mov         rcx,qword ptr [rbp-18h]
  000000000000014F: 48 83 F9 0F        cmp         rcx,0Fh
  0000000000000153: 48 0F 47 F0        cmova       rsi,rax
  0000000000000157: 49 83 F8 04        cmp         r8,4
  000000000000015B: 72 3A              jb          0000000000000197
  000000000000015D: 49 8D 1C 30        lea         rbx,[r8+rsi]
  0000000000000161: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000167: 4C 8D 05 00 00 00  lea         r8,[??_C@_04BPCNIIJN@ENDP@]
                    00
  000000000000016E: 48 8B D3           mov         rdx,rbx
  0000000000000171: 48 8B CE           mov         rcx,rsi
  0000000000000174: E8 00 00 00 00     call        __std_search_1
  0000000000000179: 48 3B C3           cmp         rax,rbx
  000000000000017C: 74 0D              je          000000000000018B
  000000000000017E: 48 2B C6           sub         rax,rsi
  0000000000000181: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  0000000000000185: 0F 85 B3 00 00 00  jne         000000000000023E
  000000000000018B: 48 8B 4D E8        mov         rcx,qword ptr [rbp-18h]
  000000000000018F: 4C 8B 45 E0        mov         r8,qword ptr [rbp-20h]
  0000000000000193: 48 8B 45 D0        mov         rax,qword ptr [rbp-30h]
  0000000000000197: 48 8D 75 D0        lea         rsi,[rbp-30h]
  000000000000019B: 48 83 F9 0F        cmp         rcx,0Fh
  000000000000019F: 48 0F 47 F0        cmova       rsi,rax
  00000000000001A3: 49 83 F8 0C        cmp         r8,0Ch
  00000000000001A7: 72 36              jb          00000000000001DF
  00000000000001A9: 49 8D 1C 30        lea         rbx,[r8+rsi]
  00000000000001AD: 41 B9 0C 00 00 00  mov         r9d,0Ch
  00000000000001B3: 4C 8D 05 00 00 00  lea         r8,[??_C@_0N@DLPPFFCM@?4cfi_endproc@]
                    00
  00000000000001BA: 48 8B D3           mov         rdx,rbx
  00000000000001BD: 48 8B CE           mov         rcx,rsi
  00000000000001C0: E8 00 00 00 00     call        __std_search_1
  00000000000001C5: 48 3B C3           cmp         rax,rbx
  00000000000001C8: 74 09              je          00000000000001D3
  00000000000001CA: 48 2B C6           sub         rax,rsi
  00000000000001CD: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000001D1: 75 6B              jne         000000000000023E
  00000000000001D3: 48 8B 4D E8        mov         rcx,qword ptr [rbp-18h]
  00000000000001D7: 4C 8B 45 E0        mov         r8,qword ptr [rbp-20h]
  00000000000001DB: 48 8B 45 D0        mov         rax,qword ptr [rbp-30h]
  00000000000001DF: 48 8D 55 D0        lea         rdx,[rbp-30h]
  00000000000001E3: 48 83 F9 0F        cmp         rcx,0Fh
  00000000000001E7: 48 0F 47 D0        cmova       rdx,rax
  00000000000001EB: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000001F2: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000001F7: B2 0A              mov         dl,0Ah
  00000000000001F9: 48 8B C8           mov         rcx,rax
  00000000000001FC: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
  0000000000000201: 49 8B 04 24        mov         rax,qword ptr [r12]
  0000000000000205: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000209: 49 03 CC           add         rcx,r12
  000000000000020C: B2 0A              mov         dl,0Ah
  000000000000020E: FF 15 00 00 00 00  call        qword ptr [__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z]
  0000000000000214: 44 0F B6 C0        movzx       r8d,al
  0000000000000218: 48 8D 55 D0        lea         rdx,[rbp-30h]
  000000000000021C: 49 8B CC           mov         rcx,r12
  000000000000021F: E8 00 00 00 00     call        ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
  0000000000000224: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000227: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  000000000000022B: 48 03 C8           add         rcx,rax
  000000000000022E: FF 15 00 00 00 00  call        qword ptr [__imp_??Bios_base@std@@QEBA_NXZ]
  0000000000000234: 84 C0              test        al,al
  0000000000000236: 0F 85 54 FE FF FF  jne         0000000000000090
  000000000000023C: EB 03              jmp         0000000000000241
  000000000000023E: 41 B7 01           mov         r15b,1
  0000000000000241: 48 8B 55 E8        mov         rdx,qword ptr [rbp-18h]
  0000000000000245: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000249: 76 34              jbe         000000000000027F
  000000000000024B: 48 FF C2           inc         rdx
  000000000000024E: 48 8B 4D D0        mov         rcx,qword ptr [rbp-30h]
  0000000000000252: 48 8B C1           mov         rax,rcx
  0000000000000255: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000025C: 72 1C              jb          000000000000027A
  000000000000025E: 48 83 C2 27        add         rdx,27h
  0000000000000262: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000266: 48 2B C1           sub         rax,rcx
  0000000000000269: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000026D: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000271: 76 07              jbe         000000000000027A
  0000000000000273: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  0000000000000279: CC                 int         3
  000000000000027A: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000027F: 41 0F B6 C7        movzx       eax,r15b
  0000000000000283: 48 8B 4D F0        mov         rcx,qword ptr [rbp-10h]
  0000000000000287: 48 33 CC           xor         rcx,rsp
  000000000000028A: E8 00 00 00 00     call        __security_check_cookie
  000000000000028F: 4C 8D 5C 24 50     lea         r11,[rsp+50h]
  0000000000000294: 49 8B 5B 40        mov         rbx,qword ptr [r11+40h]
  0000000000000298: 49 8B 73 48        mov         rsi,qword ptr [r11+48h]
  000000000000029C: 49 8B E3           mov         rsp,r11
  000000000000029F: 41 5F              pop         r15
  00000000000002A1: 41 5E              pop         r14
  00000000000002A3: 41 5C              pop         r12
  00000000000002A5: 5F                 pop         rdi
  00000000000002A6: 5D                 pop         rbp
  00000000000002A7: C3                 ret

?dtor$0@?0??printFunctionAssembly@@YA_NAEAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA (int `bool __cdecl printFunctionAssembly(class std::basic_ifstream<char,struct std::char_traits<char> > &,class basic_ifstream<char,struct std::char_traits<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekoff(__int64,int,int)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 41 8B E9           mov         ebp,r9d
  0000000000000017: 49 8B F0           mov         rsi,r8
  000000000000001A: 48 8B DA           mov         rbx,rdx
  000000000000001D: 48 8B F9           mov         rdi,rcx
  0000000000000020: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000026: 4C 8D 57 70        lea         r10,[rdi+70h]
  000000000000002A: 49 3B C2           cmp         rax,r10
  000000000000002D: 75 0F              jne         000000000000003E
  000000000000002F: 83 FD 01           cmp         ebp,1
  0000000000000032: 75 0A              jne         000000000000003E
  0000000000000034: 48 83 7F 68 00     cmp         qword ptr [rdi+68h],0
  0000000000000039: 75 03              jne         000000000000003E
  000000000000003B: 48 FF CE           dec         rsi
  000000000000003E: 48 83 BF 80 00 00  cmp         qword ptr [rdi+80h],0
                    00 00
  0000000000000046: 74 59              je          00000000000000A1
  0000000000000048: 48 8B CF           mov         rcx,rdi
  000000000000004B: E8 00 00 00 00     call        ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
  0000000000000050: 84 C0              test        al,al
  0000000000000052: 74 4D              je          00000000000000A1
  0000000000000054: 48 85 F6           test        rsi,rsi
  0000000000000057: 75 05              jne         000000000000005E
  0000000000000059: 83 FD 01           cmp         ebp,1
  000000000000005C: 74 17              je          0000000000000075
  000000000000005E: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  0000000000000065: 44 8B C5           mov         r8d,ebp
  0000000000000068: 48 8B D6           mov         rdx,rsi
  000000000000006B: FF 15 00 00 00 00  call        qword ptr [__imp__fseeki64]
  0000000000000071: 85 C0              test        eax,eax
  0000000000000073: 75 2C              jne         00000000000000A1
  0000000000000075: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  000000000000007C: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  0000000000000081: FF 15 00 00 00 00  call        qword ptr [__imp_fgetpos]
  0000000000000087: 85 C0              test        eax,eax
  0000000000000089: 75 16              jne         00000000000000A1
  000000000000008B: 48 8B CF           mov         rcx,rdi
  000000000000008E: E8 00 00 00 00     call        ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
  0000000000000093: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000098: 48 8B 47 74        mov         rax,qword ptr [rdi+74h]
  000000000000009C: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000009F: EB 09              jmp         00000000000000AA
  00000000000000A1: 48 C7 03 FF FF FF  mov         qword ptr [rbx],0FFFFFFFFFFFFFFFFh
                    FF
  00000000000000A8: 33 C0              xor         eax,eax
  00000000000000AA: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  00000000000000AF: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000B4: 48 C7 43 08 00 00  mov         qword ptr [rbx+8],0
                    00 00
  00000000000000BC: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  00000000000000C0: 48 8B C3           mov         rax,rbx
  00000000000000C3: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000C8: 48 83 C4 20        add         rsp,20h
  00000000000000CC: 5F                 pop         rdi
  00000000000000CD: C3                 ret

?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekpos(class std::fpos<struct _Mbstatet>,int)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 49 8B 40 08        mov         rax,qword ptr [r8+8]
  0000000000000013: 49 8B F0           mov         rsi,r8
  0000000000000016: 49 03 00           add         rax,qword ptr [r8]
  0000000000000019: 48 8B DA           mov         rbx,rdx
  000000000000001C: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  0000000000000024: 48 8B F9           mov         rdi,rcx
  0000000000000027: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  000000000000002C: 74 3D              je          000000000000006B
  000000000000002E: E8 00 00 00 00     call        ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
  0000000000000033: 84 C0              test        al,al
  0000000000000035: 74 34              je          000000000000006B
  0000000000000037: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  000000000000003E: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  0000000000000043: FF 15 00 00 00 00  call        qword ptr [__imp_fsetpos]
  0000000000000049: 85 C0              test        eax,eax
  000000000000004B: 75 1E              jne         000000000000006B
  000000000000004D: 48 8B 46 10        mov         rax,qword ptr [rsi+10h]
  0000000000000051: 48 8B CF           mov         rcx,rdi
  0000000000000054: 48 89 47 74        mov         qword ptr [rdi+74h],rax
  0000000000000058: E8 00 00 00 00     call        ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
  000000000000005D: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000062: 48 8B 47 74        mov         rax,qword ptr [rdi+74h]
  0000000000000066: 48 89 0B           mov         qword ptr [rbx],rcx
  0000000000000069: EB 09              jmp         0000000000000074
  000000000000006B: 48 C7 03 FF FF FF  mov         qword ptr [rbx],0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000072: 33 C0              xor         eax,eax
  0000000000000074: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000079: 48 C7 43 08 00 00  mov         qword ptr [rbx+8],0
                    00 00
  0000000000000081: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  0000000000000085: 48 8B C3           mov         rax,rbx
  0000000000000088: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  000000000000008D: 48 83 C4 20        add         rsp,20h
  0000000000000091: 5F                 pop         rdi
  0000000000000092: C3                 ret

?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z (protected: virtual class std::basic_streambuf<char,struct std::char_traits<char> > * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::setbuf(char *,__int64)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 56                 push        rsi
  0000000000000003: 48 83 EC 48        sub         rsp,48h
  0000000000000007: 33 F6              xor         esi,esi
  0000000000000009: 4D 8B C8           mov         r9,r8
  000000000000000C: 48 8B D9           mov         rbx,rcx
  000000000000000F: 48 85 D2           test        rdx,rdx
  0000000000000012: 75 0B              jne         000000000000001F
  0000000000000014: 4D 85 C0           test        r8,r8
  0000000000000017: 41 B8 04 00 00 00  mov         r8d,4
  000000000000001D: 74 03              je          0000000000000022
  000000000000001F: 44 8B C6           mov         r8d,esi
  0000000000000022: 48 8B 89 80 00 00  mov         rcx,qword ptr [rcx+80h]
                    00
  0000000000000029: 48 85 C9           test        rcx,rcx
  000000000000002C: 0F 84 A3 00 00 00  je          00000000000000D5
  0000000000000032: FF 15 00 00 00 00  call        qword ptr [__imp_setvbuf]
  0000000000000038: 85 C0              test        eax,eax
  000000000000003A: 0F 85 95 00 00 00  jne         00000000000000D5
  0000000000000040: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000045: 48 8B CB           mov         rcx,rbx
  0000000000000048: 48 8B BB 80 00 00  mov         rdi,qword ptr [rbx+80h]
                    00
  000000000000004F: C6 43 7C 01        mov         byte ptr [rbx+7Ch],1
  0000000000000053: 40 88 73 71        mov         byte ptr [rbx+71h],sil
  0000000000000057: FF 15 00 00 00 00  call        qword ptr [__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ]
  000000000000005D: 48 85 FF           test        rdi,rdi
  0000000000000060: 74 4E              je          00000000000000B0
  0000000000000062: 4C 8D 4C 24 60     lea         r9,[rsp+60h]
  0000000000000067: 48 89 74 24 70     mov         qword ptr [rsp+70h],rsi
  000000000000006C: 4C 8D 44 24 68     lea         r8,[rsp+68h]
  0000000000000071: 48 89 74 24 68     mov         qword ptr [rsp+68h],rsi
  0000000000000076: 48 8D 54 24 70     lea         rdx,[rsp+70h]
  000000000000007B: 48 89 74 24 60     mov         qword ptr [rsp+60h],rsi
  0000000000000080: 48 8B CF           mov         rcx,rdi
  0000000000000083: FF 15 00 00 00 00  call        qword ptr [__imp__get_stream_buffer_pointers]
  0000000000000089: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  000000000000008E: 48 8B CB           mov         rcx,rbx
  0000000000000091: 4C 8B 44 24 68     mov         r8,qword ptr [rsp+68h]
  0000000000000096: 48 8B 54 24 70     mov         rdx,qword ptr [rsp+70h]
  000000000000009B: 4C 89 4C 24 30     mov         qword ptr [rsp+30h],r9
  00000000000000A0: 4C 89 44 24 28     mov         qword ptr [rsp+28h],r8
  00000000000000A5: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  00000000000000AA: FF 15 00 00 00 00  call        qword ptr [__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAPEAD0PEAH001@Z]
  00000000000000B0: 48 89 BB 80 00 00  mov         qword ptr [rbx+80h],rdi
                    00
  00000000000000B7: 48 8B 05 00 00 00  mov         rax,qword ptr [?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A]
                    00
  00000000000000BE: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  00000000000000C3: 48 89 43 74        mov         qword ptr [rbx+74h],rax
  00000000000000C7: 48 8B C3           mov         rax,rbx
  00000000000000CA: 48 89 73 68        mov         qword ptr [rbx+68h],rsi
  00000000000000CE: 48 83 C4 48        add         rsp,48h
  00000000000000D2: 5E                 pop         rsi
  00000000000000D3: 5B                 pop         rbx
  00000000000000D4: C3                 ret
  00000000000000D5: 33 C0              xor         eax,eax
  00000000000000D7: 48 83 C4 48        add         rsp,48h
  00000000000000DB: 5E                 pop         rsi
  00000000000000DC: 5B                 pop         rbx
  00000000000000DD: C3                 ret

?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::sync(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: 74 2D              je          0000000000000040
  0000000000000013: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000016: BA FF FF FF FF     mov         edx,0FFFFFFFFh
  000000000000001B: FF 50 18           call        qword ptr [rax+18h]
  000000000000001E: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000021: 74 1D              je          0000000000000040
  0000000000000023: 48 8B 8B 80 00 00  mov         rcx,qword ptr [rbx+80h]
                    00
  000000000000002A: FF 15 00 00 00 00  call        qword ptr [__imp_fflush]
  0000000000000030: 33 C9              xor         ecx,ecx
  0000000000000032: 85 C0              test        eax,eax
  0000000000000034: 0F 99 C1           setns       cl
  0000000000000037: 8D 41 FF           lea         eax,[rcx-1]
  000000000000003A: 48 83 C4 20        add         rsp,20h
  000000000000003E: 5B                 pop         rbx
  000000000000003F: C3                 ret
  0000000000000040: 33 C0              xor         eax,eax
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5B                 pop         rbx
  0000000000000047: C3                 ret

?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::uflow(void)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000000F: 55                 push        rbp
  0000000000000010: 48 8B EC           mov         rbp,rsp
  0000000000000013: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  000000000000001A: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000021: 48 33 C4           xor         rax,rsp
  0000000000000024: 48 89 45 F8        mov         qword ptr [rbp-8],rax
  0000000000000028: 48 8B F9           mov         rdi,rcx
  000000000000002B: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000031: 48 85 C0           test        rax,rax
  0000000000000034: 74 2B              je          0000000000000061
  0000000000000036: 48 8B CF           mov         rcx,rdi
  0000000000000039: FF 15 00 00 00 00  call        qword ptr [__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  000000000000003F: 48 8B D8           mov         rbx,rax
  0000000000000042: 48 8B CF           mov         rcx,rdi
  0000000000000045: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  000000000000004B: 48 3B C3           cmp         rax,rbx
  000000000000004E: 73 11              jae         0000000000000061
  0000000000000050: 48 8B CF           mov         rcx,rdi
  0000000000000053: FF 15 00 00 00 00  call        qword ptr [__imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ]
  0000000000000059: 0F B6 00           movzx       eax,byte ptr [rax]
  000000000000005C: E9 4E 02 00 00     jmp         00000000000002AF
  0000000000000061: 48 83 BF 80 00 00  cmp         qword ptr [rdi+80h],0
                    00 00
  0000000000000069: 75 0A              jne         0000000000000075
  000000000000006B: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  0000000000000070: E9 3A 02 00 00     jmp         00000000000002AF
  0000000000000075: 48 8B CF           mov         rcx,rdi
  0000000000000078: FF 15 00 00 00 00  call        qword ptr [__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  000000000000007E: 48 8D 4F 70        lea         rcx,[rdi+70h]
  0000000000000082: 48 3B C1           cmp         rax,rcx
  0000000000000085: 75 1A              jne         00000000000000A1
  0000000000000087: 48 8B 97 88 00 00  mov         rdx,qword ptr [rdi+88h]
                    00
  000000000000008E: 4C 8B 8F 90 00 00  mov         r9,qword ptr [rdi+90h]
                    00
  0000000000000095: 4C 8B C2           mov         r8,rdx
  0000000000000098: 48 8B CF           mov         rcx,rdi
  000000000000009B: FF 15 00 00 00 00  call        qword ptr [__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z]
  00000000000000A1: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  00000000000000A8: 48 83 7F 68 00     cmp         qword ptr [rdi+68h],0
  00000000000000AD: 75 1C              jne         00000000000000CB
  00000000000000AF: FF 15 00 00 00 00  call        qword ptr [__imp_fgetc]
  00000000000000B5: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000000B8: BB FF FF FF FF     mov         ebx,0FFFFFFFFh
  00000000000000BD: 0F 84 EA 01 00 00  je          00000000000002AD
  00000000000000C3: 0F B6 D8           movzx       ebx,al
  00000000000000C6: E9 E2 01 00 00     jmp         00000000000002AD
  00000000000000CB: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000CE: 0F 11 45 D8        movups      xmmword ptr [rbp-28h],xmm0
  00000000000000D2: 48 C7 45 E8 00 00  mov         qword ptr [rbp-18h],0
                    00 00
  00000000000000DA: 48 C7 45 F0 0F 00  mov         qword ptr [rbp-10h],0Fh
                    00 00
  00000000000000E2: C6 45 D8 00        mov         byte ptr [rbp-28h],0
  00000000000000E6: FF 15 00 00 00 00  call        qword ptr [__imp_fgetc]
  00000000000000EC: 44 8B C0           mov         r8d,eax
  00000000000000EF: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000000F2: 0F 84 15 01 00 00  je          000000000000020D
  00000000000000F8: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000100: 48 8B 4D E8        mov         rcx,qword ptr [rbp-18h]
  0000000000000104: 48 8B 55 F0        mov         rdx,qword ptr [rbp-10h]
  0000000000000108: 48 3B CA           cmp         rcx,rdx
  000000000000010B: 73 20              jae         000000000000012D
  000000000000010D: 48 8D 41 01        lea         rax,[rcx+1]
  0000000000000111: 48 89 45 E8        mov         qword ptr [rbp-18h],rax
  0000000000000115: 48 8D 45 D8        lea         rax,[rbp-28h]
  0000000000000119: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000011D: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  0000000000000122: 44 88 04 08        mov         byte ptr [rax+rcx],r8b
  0000000000000126: C6 44 08 01 00     mov         byte ptr [rax+rcx+1],0
  000000000000012B: EB 15              jmp         0000000000000142
  000000000000012D: 45 0F B6 C8        movzx       r9d,r8b
  0000000000000131: 45 33 C0           xor         r8d,r8d
  0000000000000134: BA 01 00 00 00     mov         edx,1
  0000000000000139: 48 8D 4D D8        lea         rcx,[rbp-28h]
  000000000000013D: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
  0000000000000142: 48 8D 4D D8        lea         rcx,[rbp-28h]
  0000000000000146: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  000000000000014B: 48 0F 47 4D D8     cmova       rcx,qword ptr [rbp-28h]
  0000000000000150: 4C 8B 4D E8        mov         r9,qword ptr [rbp-18h]
  0000000000000154: 4C 03 C9           add         r9,rcx
  0000000000000157: 4C 8D 45 D8        lea         r8,[rbp-28h]
  000000000000015B: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  0000000000000160: 4C 0F 47 45 D8     cmova       r8,qword ptr [rbp-28h]
  0000000000000165: 48 8D 45 D0        lea         rax,[rbp-30h]
  0000000000000169: 48 89 44 24 38     mov         qword ptr [rsp+38h],rax
  000000000000016E: 48 8D 45 C1        lea         rax,[rbp-3Fh]
  0000000000000172: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  0000000000000177: 48 8D 45 C0        lea         rax,[rbp-40h]
  000000000000017B: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  0000000000000180: 48 8D 45 C8        lea         rax,[rbp-38h]
  0000000000000184: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000189: 48 8D 57 74        lea         rdx,[rdi+74h]
  000000000000018D: 48 8B 4F 68        mov         rcx,qword ptr [rdi+68h]
  0000000000000191: FF 15 00 00 00 00  call        qword ptr [__imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z]
  0000000000000197: 85 C0              test        eax,eax
  0000000000000199: 74 09              je          00000000000001A4
  000000000000019B: 83 E8 01           sub         eax,1
  000000000000019E: 0F 85 AB 00 00 00  jne         000000000000024F
  00000000000001A4: 48 8D 45 C0        lea         rax,[rbp-40h]
  00000000000001A8: 48 8B 5D E8        mov         rbx,qword ptr [rbp-18h]
  00000000000001AC: 48 39 45 D0        cmp         qword ptr [rbp-30h],rax
  00000000000001B0: 48 8D 45 D8        lea         rax,[rbp-28h]
  00000000000001B4: 0F 85 AD 00 00 00  jne         0000000000000267
  00000000000001BA: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  00000000000001BF: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  00000000000001C4: 4C 8B 4D C8        mov         r9,qword ptr [rbp-38h]
  00000000000001C8: 4C 2B C8           sub         r9,rax
  00000000000001CB: 49 3B D9           cmp         rbx,r9
  00000000000001CE: 4C 0F 42 CB        cmovb       r9,rbx
  00000000000001D2: 48 8D 4D D8        lea         rcx,[rbp-28h]
  00000000000001D6: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  00000000000001DB: 48 0F 47 4D D8     cmova       rcx,qword ptr [rbp-28h]
  00000000000001E0: 49 2B D9           sub         rbx,r9
  00000000000001E3: 4C 8D 43 01        lea         r8,[rbx+1]
  00000000000001E7: 4A 8D 14 09        lea         rdx,[rcx+r9]
  00000000000001EB: E8 00 00 00 00     call        memmove
  00000000000001F0: 48 89 5D E8        mov         qword ptr [rbp-18h],rbx
  00000000000001F4: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  00000000000001FB: FF 15 00 00 00 00  call        qword ptr [__imp_fgetc]
  0000000000000201: 44 8B C0           mov         r8d,eax
  0000000000000204: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000207: 0F 85 F3 FE FF FF  jne         0000000000000100
  000000000000020D: BB FF FF FF FF     mov         ebx,0FFFFFFFFh
  0000000000000212: 48 8B 55 F0        mov         rdx,qword ptr [rbp-10h]
  0000000000000216: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000021A: 0F 86 8D 00 00 00  jbe         00000000000002AD
  0000000000000220: 48 FF C2           inc         rdx
  0000000000000223: 48 8B 4D D8        mov         rcx,qword ptr [rbp-28h]
  0000000000000227: 48 8B C1           mov         rax,rcx
  000000000000022A: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000231: 72 75              jb          00000000000002A8
  0000000000000233: 48 83 C2 27        add         rdx,27h
  0000000000000237: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000023B: 48 2B C1           sub         rax,rcx
  000000000000023E: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000242: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000246: 76 60              jbe         00000000000002A8
  0000000000000248: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  000000000000024E: 90                 nop
  000000000000024F: 83 F8 02           cmp         eax,2
  0000000000000252: 75 B9              jne         000000000000020D
  0000000000000254: 48 8D 45 D8        lea         rax,[rbp-28h]
  0000000000000258: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  000000000000025D: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  0000000000000262: 0F BE 18           movsx       ebx,byte ptr [rax]
  0000000000000265: EB AB              jmp         0000000000000212
  0000000000000267: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  000000000000026C: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  0000000000000271: 48 8B 4D C8        mov         rcx,qword ptr [rbp-38h]
  0000000000000275: 48 2B D9           sub         rbx,rcx
  0000000000000278: 48 03 D8           add         rbx,rax
  000000000000027B: 48 85 DB           test        rbx,rbx
  000000000000027E: 7E 1F              jle         000000000000029F
  0000000000000280: 48 FF CB           dec         rbx
  0000000000000283: 0F BE 0C 0B        movsx       ecx,byte ptr [rbx+rcx]
  0000000000000287: 48 8B 97 80 00 00  mov         rdx,qword ptr [rdi+80h]
                    00
  000000000000028E: FF 15 00 00 00 00  call        qword ptr [__imp_ungetc]
  0000000000000294: 48 85 DB           test        rbx,rbx
  0000000000000297: 7E 06              jle         000000000000029F
  0000000000000299: 48 8B 4D C8        mov         rcx,qword ptr [rbp-38h]
  000000000000029D: EB E1              jmp         0000000000000280
  000000000000029F: 0F B6 5D C0        movzx       ebx,byte ptr [rbp-40h]
  00000000000002A3: E9 6A FF FF FF     jmp         0000000000000212
  00000000000002A8: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000002AD: 8B C3              mov         eax,ebx
  00000000000002AF: 48 8B 4D F8        mov         rcx,qword ptr [rbp-8]
  00000000000002B3: 48 33 CC           xor         rcx,rsp
  00000000000002B6: E8 00 00 00 00     call        __security_check_cookie
  00000000000002BB: 4C 8D 9C 24 80 00  lea         r11,[rsp+80h]
                    00 00
  00000000000002C3: 49 8B 5B 18        mov         rbx,qword ptr [r11+18h]
  00000000000002C7: 49 8B 73 20        mov         rsi,qword ptr [r11+20h]
  00000000000002CB: 49 8B 7B 28        mov         rdi,qword ptr [r11+28h]
  00000000000002CF: 49 8B E3           mov         rsp,r11
  00000000000002D2: 5D                 pop         rbp
  00000000000002D3: C3                 ret

?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA (int `protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::uflow(void)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::underflow(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B F9           mov         rdi,rcx
  000000000000000D: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000013: 48 85 C0           test        rax,rax
  0000000000000016: 74 31              je          0000000000000049
  0000000000000018: 48 8B CF           mov         rcx,rdi
  000000000000001B: FF 15 00 00 00 00  call        qword ptr [__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000021: 48 8B CF           mov         rcx,rdi
  0000000000000024: 48 8B D8           mov         rbx,rax
  0000000000000027: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  000000000000002D: 48 3B C3           cmp         rax,rbx
  0000000000000030: 73 17              jae         0000000000000049
  0000000000000032: 48 8B CF           mov         rcx,rdi
  0000000000000035: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  000000000000003B: 0F B6 00           movzx       eax,byte ptr [rax]
  000000000000003E: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000043: 48 83 C4 20        add         rsp,20h
  0000000000000047: 5F                 pop         rdi
  0000000000000048: C3                 ret
  0000000000000049: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000004C: 48 8B CF           mov         rcx,rdi
  000000000000004F: FF 50 38           call        qword ptr [rax+38h]
  0000000000000052: 8B D8              mov         ebx,eax
  0000000000000054: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000057: 75 0B              jne         0000000000000064
  0000000000000059: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000005E: 48 83 C4 20        add         rsp,20h
  0000000000000062: 5F                 pop         rdi
  0000000000000063: C3                 ret
  0000000000000064: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000067: 8B D3              mov         edx,ebx
  0000000000000069: 48 8B CF           mov         rcx,rdi
  000000000000006C: FF 50 20           call        qword ptr [rax+20h]
  000000000000006F: 8B C3              mov         eax,ebx
  0000000000000071: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000076: 48 83 C4 20        add         rsp,20h
  000000000000007A: 5F                 pop         rdi
  000000000000007B: C3                 ret

?what@exception@std@@UEBAPEBDXZ (public: virtual char const * __cdecl std::exception::what(void)const ):
  0000000000000000: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  0000000000000004: 48 8D 05 00 00 00  lea         rax,[??_C@_0BC@EOODALEL@Unknown?5exception@]
                    00
  000000000000000B: 48 85 D2           test        rdx,rdx
  000000000000000E: 48 0F 45 C2        cmovne      rax,rdx
  0000000000000012: C3                 ret

?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z (protected: virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsgetn(char *,__int64)):
  0000000000000000: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  0000000000000005: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000A: 41 56              push        r14
  000000000000000C: 48 83 EC 20        sub         rsp,20h
  0000000000000010: 49 8B F0           mov         rsi,r8
  0000000000000013: 4C 8B F2           mov         r14,rdx
  0000000000000016: 48 8B E9           mov         rbp,rcx
  0000000000000019: 4D 85 C0           test        r8,r8
  000000000000001C: 7F 13              jg          0000000000000031
  000000000000001E: 33 C0              xor         eax,eax
  0000000000000020: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  0000000000000025: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  000000000000002A: 48 83 C4 20        add         rsp,20h
  000000000000002E: 41 5E              pop         r14
  0000000000000030: C3                 ret
  0000000000000031: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  0000000000000036: 74 17              je          000000000000004F
  0000000000000038: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  000000000000003D: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 41 5E              pop         r14
  0000000000000048: 48 FF 25 00 00 00  jmp         qword ptr [__imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z]
                    00
  000000000000004F: 48 89 5C 24 30     mov         qword ptr [rsp+30h],rbx
  0000000000000054: 48 8B DE           mov         rbx,rsi
  0000000000000057: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  000000000000005C: FF 15 00 00 00 00  call        qword ptr [__imp_?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ]
  0000000000000062: 48 85 C0           test        rax,rax
  0000000000000065: 74 32              je          0000000000000099
  0000000000000067: 48 3B C6           cmp         rax,rsi
  000000000000006A: 48 8B FE           mov         rdi,rsi
  000000000000006D: 48 8B CD           mov         rcx,rbp
  0000000000000070: 48 0F 42 F8        cmovb       rdi,rax
  0000000000000074: FF 15 00 00 00 00  call        qword ptr [__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  000000000000007A: 4C 8B C7           mov         r8,rdi
  000000000000007D: 49 8B CE           mov         rcx,r14
  0000000000000080: 48 8B D0           mov         rdx,rax
  0000000000000083: E8 00 00 00 00     call        memcpy
  0000000000000088: 8B D7              mov         edx,edi
  000000000000008A: 48 8B CD           mov         rcx,rbp
  000000000000008D: 4C 03 F7           add         r14,rdi
  0000000000000090: 48 2B DF           sub         rbx,rdi
  0000000000000093: FF 15 00 00 00 00  call        qword ptr [__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z]
  0000000000000099: 48 83 BD 80 00 00  cmp         qword ptr [rbp+80h],0
                    00 00
  00000000000000A1: 48 8B FB           mov         rdi,rbx
  00000000000000A4: 74 6B              je          0000000000000111
  00000000000000A6: 48 8B CD           mov         rcx,rbp
  00000000000000A9: E8 00 00 00 00     call        ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
  00000000000000AE: 48 81 FB FF 0F 00  cmp         rbx,0FFFh
                    00
  00000000000000B5: 76 3A              jbe         00000000000000F1
  00000000000000B7: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  00000000000000C0: 4C 8B 8D 80 00 00  mov         r9,qword ptr [rbp+80h]
                    00
  00000000000000C7: BA 01 00 00 00     mov         edx,1
  00000000000000CC: 41 B8 FF 0F 00 00  mov         r8d,0FFFh
  00000000000000D2: 49 8B CE           mov         rcx,r14
  00000000000000D5: FF 15 00 00 00 00  call        qword ptr [__imp_fread]
  00000000000000DB: 48 2B D8           sub         rbx,rax
  00000000000000DE: 4C 03 F0           add         r14,rax
  00000000000000E1: 48 8B FB           mov         rdi,rbx
  00000000000000E4: 48 3D FF 0F 00 00  cmp         rax,0FFFh
  00000000000000EA: 75 46              jne         0000000000000132
  00000000000000EC: 48 3B D8           cmp         rbx,rax
  00000000000000EF: 77 CF              ja          00000000000000C0
  00000000000000F1: 48 85 FF           test        rdi,rdi
  00000000000000F4: 74 1B              je          0000000000000111
  00000000000000F6: 4C 8B 8D 80 00 00  mov         r9,qword ptr [rbp+80h]
                    00
  00000000000000FD: 4C 8B C3           mov         r8,rbx
  0000000000000100: BA 01 00 00 00     mov         edx,1
  0000000000000105: 49 8B CE           mov         rcx,r14
  0000000000000108: FF 15 00 00 00 00  call        qword ptr [__imp_fread]
  000000000000010E: 48 2B F8           sub         rdi,rax
  0000000000000111: 48 2B F7           sub         rsi,rdi
  0000000000000114: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000119: 48 8B C6           mov         rax,rsi
  000000000000011C: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  0000000000000121: 48 8B 7C 24 38     mov         rdi,qword ptr [rsp+38h]
  0000000000000126: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  000000000000012B: 48 83 C4 20        add         rsp,20h
  000000000000012F: 41 5E              pop         r14
  0000000000000131: C3                 ret
  0000000000000132: 48 2B F3           sub         rsi,rbx
  0000000000000135: EB DD              jmp         0000000000000114

?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z (protected: virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsputn(char const *,__int64)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 57                 push        rdi
  0000000000000003: 41 56              push        r14
  0000000000000005: 48 83 EC 20        sub         rsp,20h
  0000000000000009: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  000000000000000E: 49 8B D8           mov         rbx,r8
  0000000000000011: 4C 8B F2           mov         r14,rdx
  0000000000000014: 48 8B F9           mov         rdi,rcx
  0000000000000017: 74 0F              je          0000000000000028
  0000000000000019: 48 83 C4 20        add         rsp,20h
  000000000000001D: 41 5E              pop         r14
  000000000000001F: 5F                 pop         rdi
  0000000000000020: 5B                 pop         rbx
  0000000000000021: 48 FF 25 00 00 00  jmp         qword ptr [__imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z]
                    00
  0000000000000028: 48 89 6C 24 40     mov         qword ptr [rsp+40h],rbp
  000000000000002D: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  0000000000000032: 48 8B F3           mov         rsi,rbx
  0000000000000035: FF 15 00 00 00 00  call        qword ptr [__imp_?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ]
  000000000000003B: 48 8B E8           mov         rbp,rax
  000000000000003E: 48 85 DB           test        rbx,rbx
  0000000000000041: 7E 59              jle         000000000000009C
  0000000000000043: 48 85 C0           test        rax,rax
  0000000000000046: 7E 34              jle         000000000000007C
  0000000000000048: 48 3B D8           cmp         rbx,rax
  000000000000004B: 48 8B CF           mov         rcx,rdi
  000000000000004E: 48 0F 4C EB        cmovl       rbp,rbx
  0000000000000052: FF 15 00 00 00 00  call        qword ptr [__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ]
  0000000000000058: 4C 8B C5           mov         r8,rbp
  000000000000005B: 49 8B D6           mov         rdx,r14
  000000000000005E: 48 8B C8           mov         rcx,rax
  0000000000000061: E8 00 00 00 00     call        memcpy
  0000000000000066: 8B D5              mov         edx,ebp
  0000000000000068: 48 8B CF           mov         rcx,rdi
  000000000000006B: 4C 03 F5           add         r14,rbp
  000000000000006E: 48 2B DD           sub         rbx,rbp
  0000000000000071: FF 15 00 00 00 00  call        qword ptr [__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z]
  0000000000000077: 48 85 DB           test        rbx,rbx
  000000000000007A: 7E 20              jle         000000000000009C
  000000000000007C: 4C 8B 8F 80 00 00  mov         r9,qword ptr [rdi+80h]
                    00
  0000000000000083: 4D 85 C9           test        r9,r9
  0000000000000086: 74 14              je          000000000000009C
  0000000000000088: 4C 8B C3           mov         r8,rbx
  000000000000008B: BA 01 00 00 00     mov         edx,1
  0000000000000090: 49 8B CE           mov         rcx,r14
  0000000000000093: FF 15 00 00 00 00  call        qword ptr [__imp_fwrite]
  0000000000000099: 48 2B D8           sub         rbx,rax
  000000000000009C: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  00000000000000A1: 48 2B F3           sub         rsi,rbx
  00000000000000A4: 48 8B C6           mov         rax,rsi
  00000000000000A7: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000AC: 48 83 C4 20        add         rsp,20h
  00000000000000B0: 41 5E              pop         r14
  00000000000000B2: 5F                 pop         rdi
  00000000000000B3: 5B                 pop         rbx
  00000000000000B4: C3                 ret

main:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000000F: 55                 push        rbp
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 8D AC 24 30 EB  lea         rbp,[rsp-14D0h]
                    FF FF
  0000000000000020: B8 D0 15 00 00     mov         eax,15D0h
  0000000000000025: E8 00 00 00 00     call        __chkstk
  000000000000002A: 48 2B E0           sub         rsp,rax
  000000000000002D: 0F 29 B4 24 C0 15  movaps      xmmword ptr [rsp+15C0h],xmm6
                    00 00
  0000000000000035: 0F 29 BC 24 B0 15  movaps      xmmword ptr [rsp+15B0h],xmm7
                    00 00
  000000000000003D: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000044: 48 33 C4           xor         rax,rsp
  0000000000000047: 48 89 85 A0 14 00  mov         qword ptr [rbp+14A0h],rax
                    00
  000000000000004E: 48 89 54 24 50     mov         qword ptr [rsp+50h],rdx
  0000000000000053: 89 4C 24 38        mov         dword ptr [rsp+38h],ecx
  0000000000000057: 33 DB              xor         ebx,ebx
  0000000000000059: 89 5C 24 30        mov         dword ptr [rsp+30h],ebx
  000000000000005D: B9 00 01 00 00     mov         ecx,100h
  0000000000000062: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000067: 48 8B F8           mov         rdi,rax
  000000000000006A: 48 89 44 24 58     mov         qword ptr [rsp+58h],rax
  000000000000006F: 4C 8D B8 00 01 00  lea         r15,[rax+100h]
                    00
  0000000000000076: 4C 89 7C 24 68     mov         qword ptr [rsp+68h],r15
  000000000000007B: 89 5C 24 34        mov         dword ptr [rsp+34h],ebx
  000000000000007F: 8B CB              mov         ecx,ebx
  0000000000000081: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  0000000000000086: 4C 8D 44 24 34     lea         r8,[rsp+34h]
  000000000000008B: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  0000000000000090: 0F B6 04 0A        movzx       eax,byte ptr [rdx+rcx]
  0000000000000094: 48 FF C1           inc         rcx
  0000000000000097: 41 3A 44 08 FF     cmp         al,byte ptr [r8+rcx-1]
  000000000000009C: 75 0A              jne         00000000000000A8
  000000000000009E: 48 83 F9 04        cmp         rcx,4
  00000000000000A2: 75 EC              jne         0000000000000090
  00000000000000A4: 8B C3              mov         eax,ebx
  00000000000000A6: EB 05              jmp         00000000000000AD
  00000000000000A8: 1B C0              sbb         eax,eax
  00000000000000AA: 83 C8 01           or          eax,1
  00000000000000AD: 85 C0              test        eax,eax
  00000000000000AF: 75 12              jne         00000000000000C3
  00000000000000B1: 33 D2              xor         edx,edx
  00000000000000B3: 41 B8 00 01 00 00  mov         r8d,100h
  00000000000000B9: 48 8B CF           mov         rcx,rdi
  00000000000000BC: E8 00 00 00 00     call        memset
  00000000000000C1: EB 39              jmp         00000000000000FC
  00000000000000C3: 48 8B C7           mov         rax,rdi
  00000000000000C6: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000C9: B9 02 00 00 00     mov         ecx,2
  00000000000000CE: 66 90              nop
  00000000000000D0: 0F 11 00           movups      xmmword ptr [rax],xmm0
  00000000000000D3: 0F 11 40 10        movups      xmmword ptr [rax+10h],xmm0
  00000000000000D7: 0F 11 40 20        movups      xmmword ptr [rax+20h],xmm0
  00000000000000DB: 0F 11 40 30        movups      xmmword ptr [rax+30h],xmm0
  00000000000000DF: 0F 11 40 40        movups      xmmword ptr [rax+40h],xmm0
  00000000000000E3: 0F 11 40 50        movups      xmmword ptr [rax+50h],xmm0
  00000000000000E7: 0F 11 40 60        movups      xmmword ptr [rax+60h],xmm0
  00000000000000EB: 48 8D 80 80 00 00  lea         rax,[rax+80h]
                    00
  00000000000000F2: 0F 11 40 F0        movups      xmmword ptr [rax-10h],xmm0
  00000000000000F6: 48 83 E9 01        sub         rcx,1
  00000000000000FA: 75 D4              jne         00000000000000D0
  00000000000000FC: 4C 89 7C 24 60     mov         qword ptr [rsp+60h],r15
  0000000000000101: B9 00 01 00 00     mov         ecx,100h
  0000000000000106: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000010B: 4C 8B F0           mov         r14,rax
  000000000000010E: 48 89 44 24 70     mov         qword ptr [rsp+70h],rax
  0000000000000113: 48 8D 98 00 01 00  lea         rbx,[rax+100h]
                    00
  000000000000011A: 48 89 5D 80        mov         qword ptr [rbp-80h],rbx
  000000000000011E: 33 D2              xor         edx,edx
  0000000000000120: 41 B8 00 01 00 00  mov         r8d,100h
  0000000000000126: 48 8B C8           mov         rcx,rax
  0000000000000129: E8 00 00 00 00     call        memset
  000000000000012E: 48 89 5C 24 78     mov         qword ptr [rsp+78h],rbx
  0000000000000133: B9 00 01 00 00     mov         ecx,100h
  0000000000000138: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000013D: 48 8B F0           mov         rsi,rax
  0000000000000140: 48 89 45 88        mov         qword ptr [rbp-78h],rax
  0000000000000144: 48 8D 98 00 01 00  lea         rbx,[rax+100h]
                    00
  000000000000014B: 48 89 5D 98        mov         qword ptr [rbp-68h],rbx
  000000000000014F: 33 D2              xor         edx,edx
  0000000000000151: 41 B8 00 01 00 00  mov         r8d,100h
  0000000000000157: 48 8B C8           mov         rcx,rax
  000000000000015A: E8 00 00 00 00     call        memset
  000000000000015F: 48 89 5D 90        mov         qword ptr [rbp-70h],rbx
  0000000000000163: E8 00 00 00 00     call        ?_Random_device@std@@YAIXZ
  0000000000000168: C7 85 94 14 00 00  mov         dword ptr [rbp+1494h],0FFFFFFFFh
                    FF FF FF FF
  0000000000000172: 89 85 14 01 00 00  mov         dword ptr [rbp+114h],eax
  0000000000000178: BA 01 00 00 00     mov         edx,1
  000000000000017D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000180: 8B C8              mov         ecx,eax
  0000000000000182: C1 E9 1E           shr         ecx,1Eh
  0000000000000185: 33 C8              xor         ecx,eax
  0000000000000187: 69 C1 65 89 07 6C  imul        eax,ecx,6C078965h
  000000000000018D: 03 C2              add         eax,edx
  000000000000018F: 89 84 95 14 01 00  mov         dword ptr [rbp+rdx*4+114h],eax
                    00
  0000000000000196: 48 FF C2           inc         rdx
  0000000000000199: 48 81 FA 70 02 00  cmp         rdx,270h
                    00
  00000000000001A0: 72 DE              jb          0000000000000180
  00000000000001A2: C7 85 10 01 00 00  mov         dword ptr [rbp+110h],270h
                    70 02 00 00
  00000000000001AC: 48 8B DE           mov         rbx,rsi
  00000000000001AF: 4D 8B EE           mov         r13,r14
  00000000000001B2: 4C 2B EE           sub         r13,rsi
  00000000000001B5: 41 BC 40 00 00 00  mov         r12d,40h
  00000000000001BB: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  00000000000001C0: 48 8D 8D 10 01 00  lea         rcx,[rbp+110h]
                    00
  00000000000001C7: E8 00 00 00 00     call        ??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ
  00000000000001CC: 8B C8              mov         ecx,eax
  00000000000001CE: 48 69 C1 B9 82 01  imul        rax,rcx,182B9h
                    00
  00000000000001D5: 3D 00 1B 00 00     cmp         eax,1B00h
  00000000000001DA: 77 20              ja          00000000000001FC
  00000000000001DC: 0F 1F 40 00        nop         dword ptr [rax]
  00000000000001E0: 48 8D 8D 10 01 00  lea         rcx,[rbp+110h]
                    00
  00000000000001E7: E8 00 00 00 00     call        ??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ
  00000000000001EC: 8B C8              mov         ecx,eax
  00000000000001EE: 48 69 C1 B9 82 01  imul        rax,rcx,182B9h
                    00
  00000000000001F5: 3D 01 1B 00 00     cmp         eax,1B01h
  00000000000001FA: 72 E4              jb          00000000000001E0
  00000000000001FC: 48 C1 E8 20        shr         rax,20h
  0000000000000200: 05 E8 03 00 80     add         eax,800003E8h
  0000000000000205: 0F BA F8 1F        btc         eax,1Fh
  0000000000000209: 42 89 04 2B        mov         dword ptr [rbx+r13],eax
  000000000000020D: 48 8D 8D 10 01 00  lea         rcx,[rbp+110h]
                    00
  0000000000000214: E8 00 00 00 00     call        ??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ
  0000000000000219: 8B C8              mov         ecx,eax
  000000000000021B: 48 69 C1 B9 82 01  imul        rax,rcx,182B9h
                    00
  0000000000000222: 3D 00 1B 00 00     cmp         eax,1B00h
  0000000000000227: 77 23              ja          000000000000024C
  0000000000000229: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000230: 48 8D 8D 10 01 00  lea         rcx,[rbp+110h]
                    00
  0000000000000237: E8 00 00 00 00     call        ??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ
  000000000000023C: 8B C8              mov         ecx,eax
  000000000000023E: 48 69 C1 B9 82 01  imul        rax,rcx,182B9h
                    00
  0000000000000245: 3D 01 1B 00 00     cmp         eax,1B01h
  000000000000024A: 72 E4              jb          0000000000000230
  000000000000024C: 48 C1 E8 20        shr         rax,20h
  0000000000000250: 05 E8 03 00 80     add         eax,800003E8h
  0000000000000255: 0F BA F8 1F        btc         eax,1Fh
  0000000000000259: 89 03              mov         dword ptr [rbx],eax
  000000000000025B: 48 83 C3 04        add         rbx,4
  000000000000025F: 49 83 EC 01        sub         r12,1
  0000000000000263: 0F 85 57 FF FF FF  jne         00000000000001C0
  0000000000000269: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  000000000000026E: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  0000000000000273: 41 B9 40 00 00 00  mov         r9d,40h
  0000000000000279: 4C 8B C6           mov         r8,rsi
  000000000000027C: 49 8B D6           mov         rdx,r14
  000000000000027F: 48 8B CF           mov         rcx,rdi
  0000000000000282: E8 00 00 00 00     call        ?add@@YAXPEIAH00H@Z
  0000000000000287: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  000000000000028C: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  0000000000000291: 48 8B 44 24 40     mov         rax,qword ptr [rsp+40h]
  0000000000000296: 48 2B 44 24 48     sub         rax,qword ptr [rsp+48h]
  000000000000029B: 0F 57 F6           xorps       xmm6,xmm6
  000000000000029E: F2 48 0F 2A F0     cvtsi2sd    xmm6,rax
  00000000000002A3: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  00000000000002A8: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  00000000000002AD: 41 B9 40 00 00 00  mov         r9d,40h
  00000000000002B3: 4C 8B C6           mov         r8,rsi
  00000000000002B6: 49 8B D6           mov         rdx,r14
  00000000000002B9: 48 8B CF           mov         rcx,rdi
  00000000000002BC: E8 00 00 00 00     call        ?add_vectorized@@YAXPEAH00H@Z
  00000000000002C1: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  00000000000002C6: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  00000000000002CB: 48 8B 44 24 48     mov         rax,qword ptr [rsp+48h]
  00000000000002D0: 48 2B 44 24 40     sub         rax,qword ptr [rsp+40h]
  00000000000002D5: 0F 57 FF           xorps       xmm7,xmm7
  00000000000002D8: F2 48 0F 2A F8     cvtsi2sd    xmm7,rax
  00000000000002DD: 83 7C 24 38 02     cmp         dword ptr [rsp+38h],2
  00000000000002E2: 7D 1D              jge         0000000000000301
  00000000000002E4: 48 8D 15 00 00 00  lea         rdx,[??_C@_0CP@MLDAPDNG@Error?3?5Please?5provide?5the?5assem@]
                    00
  00000000000002EB: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000002F2: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000002F7: BB 01 00 00 00     mov         ebx,1
  00000000000002FC: E9 CC 04 00 00     jmp         00000000000007CD
  0000000000000301: 48 8B 54 24 50     mov         rdx,qword ptr [rsp+50h]
  0000000000000306: 48 8B 52 08        mov         rdx,qword ptr [rdx+8]
  000000000000030A: 0F 57 C0           xorps       xmm0,xmm0
  000000000000030D: 0F 11 85 F0 00 00  movups      xmmword ptr [rbp+0F0h],xmm0
                    00
  0000000000000314: 45 33 E4           xor         r12d,r12d
  0000000000000317: 4C 89 A5 00 01 00  mov         qword ptr [rbp+100h],r12
                    00
  000000000000031E: 4C 89 A5 08 01 00  mov         qword ptr [rbp+108h],r12
                    00
  0000000000000325: 49 C7 C0 FF FF FF  mov         r8,0FFFFFFFFFFFFFFFFh
                    FF
  000000000000032C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000330: 49 FF C0           inc         r8
  0000000000000333: 46 38 24 02        cmp         byte ptr [rdx+r8],r12b
  0000000000000337: 75 F7              jne         0000000000000330
  0000000000000339: 48 8D 8D F0 00 00  lea         rcx,[rbp+0F0h]
                    00
  0000000000000340: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000345: 90                 nop
  0000000000000346: 48 8D 95 F0 00 00  lea         rdx,[rbp+0F0h]
                    00
  000000000000034D: 48 83 BD 08 01 00  cmp         qword ptr [rbp+108h],0Fh
                    00 0F
  0000000000000355: 48 0F 47 95 F0 00  cmova       rdx,qword ptr [rbp+0F0h]
                    00 00
  000000000000035D: BB 01 00 00 00     mov         ebx,1
  0000000000000362: 89 5C 24 20        mov         dword ptr [rsp+20h],ebx
  0000000000000366: 41 B9 40 00 00 00  mov         r9d,40h
  000000000000036C: 44 8B C3           mov         r8d,ebx
  000000000000036F: 48 8D 4D A0        lea         rcx,[rbp-60h]
  0000000000000373: E8 00 00 00 00     call        ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
  0000000000000378: 48 8B 45 A0        mov         rax,qword ptr [rbp-60h]
  000000000000037C: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000380: 4C 8D 2D 00 00 00  lea         r13,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000387: 4C 89 6C 0D A0     mov         qword ptr [rbp+rcx-60h],r13
  000000000000038C: 48 8B 45 A0        mov         rax,qword ptr [rbp-60h]
  0000000000000390: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000394: 8D 91 50 FF FF FF  lea         edx,[rcx-0B0h]
  000000000000039A: 89 54 0D 9C        mov         dword ptr [rbp+rcx-64h],edx
  000000000000039E: 48 8B 45 A0        mov         rax,qword ptr [rbp-60h]
  00000000000003A2: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000003A6: 48 8D 45 A0        lea         rax,[rbp-60h]
  00000000000003AA: 48 03 C8           add         rcx,rax
  00000000000003AD: FF 15 00 00 00 00  call        qword ptr [__imp_??7ios_base@std@@QEBA_NXZ]
  00000000000003B3: 84 C0              test        al,al
  00000000000003B5: 74 1D              je          00000000000003D4
  00000000000003B7: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@DOPHFLGL@Failed?5to?5open?5file?6@]
                    00
  00000000000003BE: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000003C5: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000003CA: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  00000000000003CF: E9 5F 03 00 00     jmp         0000000000000733
  00000000000003D4: 0F 57 C0           xorps       xmm0,xmm0
  00000000000003D7: 0F 11 85 D0 00 00  movups      xmmword ptr [rbp+0D0h],xmm0
                    00
  00000000000003DE: 4C 89 A5 E0 00 00  mov         qword ptr [rbp+0E0h],r12
                    00
  00000000000003E5: 4C 89 A5 E8 00 00  mov         qword ptr [rbp+0E8h],r12
                    00
  00000000000003EC: B9 20 00 00 00     mov         ecx,20h
  00000000000003F1: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000003F6: 48 89 85 D0 00 00  mov         qword ptr [rbp+0D0h],rax
                    00
  00000000000003FD: 48 C7 85 E0 00 00  mov         qword ptr [rbp+0E0h],12h
                    00 12 00 00 00
  0000000000000408: 48 C7 85 E8 00 00  mov         qword ptr [rbp+0E8h],1Fh
                    00 1F 00 00 00
  0000000000000413: 0F 10 05 00 00 00  movups      xmm0,xmmword ptr [??_C@_0BD@GJFJDEPD@add?$EA?$EAYAXPEIAH00H?$EAZ@]
                    00
  000000000000041A: 0F 11 00           movups      xmmword ptr [rax],xmm0
  000000000000041D: 0F B7 15 10 00 00  movzx       edx,word ptr [??_C@_0BD@GJFJDEPD@add?$EA?$EAYAXPEIAH00H?$EAZ@+10h]
                    00
  0000000000000424: 66 89 50 10        mov         word ptr [rax+10h],dx
  0000000000000428: C6 40 12 00        mov         byte ptr [rax+12h],0
  000000000000042C: 0F 57 C0           xorps       xmm0,xmm0
  000000000000042F: 0F 11 85 B0 00 00  movups      xmmword ptr [rbp+0B0h],xmm0
                    00
  0000000000000436: 4C 89 A5 C0 00 00  mov         qword ptr [rbp+0C0h],r12
                    00
  000000000000043D: 4C 89 A5 C8 00 00  mov         qword ptr [rbp+0C8h],r12
                    00
  0000000000000444: B9 20 00 00 00     mov         ecx,20h
  0000000000000449: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000044E: 48 89 85 B0 00 00  mov         qword ptr [rbp+0B0h],rax
                    00
  0000000000000455: 48 C7 85 C0 00 00  mov         qword ptr [rbp+0C0h],1Dh
                    00 1D 00 00 00
  0000000000000460: 48 C7 85 C8 00 00  mov         qword ptr [rbp+0C8h],1Fh
                    00 1F 00 00 00
  000000000000046B: 0F 10 05 00 00 00  movups      xmm0,xmmword ptr [??_C@_0BO@BJCAFOJO@?$DPadd_vectorized?$EA?$EAYAXPEAH00H?$EAZ@]
                    00
  0000000000000472: 0F 11 00           movups      xmmword ptr [rax],xmm0
  0000000000000475: F2 0F 10 05 10 00  movsd       xmm0,mmword ptr [??_C@_0BO@BJCAFOJO@?$DPadd_vectorized?$EA?$EAYAXPEAH00H?$EAZ@+10h]
                    00 00
  000000000000047D: F2 0F 11 40 10     movsd       mmword ptr [rax+10h],xmm0
  0000000000000482: 8B 0D 18 00 00 00  mov         ecx,dword ptr [??_C@_0BO@BJCAFOJO@?$DPadd_vectorized?$EA?$EAYAXPEAH00H?$EAZ@+18h]
  0000000000000488: 89 48 18           mov         dword ptr [rax+18h],ecx
  000000000000048B: 0F B6 0D 1C 00 00  movzx       ecx,byte ptr [??_C@_0BO@BJCAFOJO@?$DPadd_vectorized?$EA?$EAYAXPEAH00H?$EAZ@+1Ch]
                    00
  0000000000000492: 88 48 1C           mov         byte ptr [rax+1Ch],cl
  0000000000000495: C6 40 1D 00        mov         byte ptr [rax+1Dh],0
  0000000000000499: 48 8D 95 D0 00 00  lea         rdx,[rbp+0D0h]
                    00
  00000000000004A0: 48 8D 4D A0        lea         rcx,[rbp-60h]
  00000000000004A4: E8 00 00 00 00     call        ?printFunctionAssembly@@YA_NAEAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  00000000000004A9: 84 C0              test        al,al
  00000000000004AB: 75 43              jne         00000000000004F0
  00000000000004AD: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BN@GJGGCPHM@Failed?5to?5find?5assembly?5for?5@]
                    00
  00000000000004B4: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000004BB: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000004C0: 48 8D 95 D0 00 00  lea         rdx,[rbp+0D0h]
                    00
  00000000000004C7: 48 83 BD E8 00 00  cmp         qword ptr [rbp+0E8h],0Fh
                    00 0F
  00000000000004CF: 48 0F 47 95 D0 00  cmova       rdx,qword ptr [rbp+0D0h]
                    00 00
  00000000000004D7: 4C 8B 85 E0 00 00  mov         r8,qword ptr [rbp+0E0h]
                    00
  00000000000004DE: 48 8B C8           mov         rcx,rax
  00000000000004E1: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000004E6: B2 0A              mov         dl,0Ah
  00000000000004E8: 48 8B C8           mov         rcx,rax
  00000000000004EB: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
  00000000000004F0: 48 8B 45 A0        mov         rax,qword ptr [rbp-60h]
  00000000000004F4: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000004F8: 48 8D 45 A0        lea         rax,[rbp-60h]
  00000000000004FC: 48 03 C8           add         rcx,rax
  00000000000004FF: 45 33 C0           xor         r8d,r8d
  0000000000000502: 33 D2              xor         edx,edx
  0000000000000504: FF 15 00 00 00 00  call        qword ptr [__imp_?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  000000000000050A: 45 33 C0           xor         r8d,r8d
  000000000000050D: 33 D2              xor         edx,edx
  000000000000050F: 48 8D 4D A0        lea         rcx,[rbp-60h]
  0000000000000513: FF 15 00 00 00 00  call        qword ptr [__imp_?seekg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@_JH@Z]
  0000000000000519: 48 8D 95 B0 00 00  lea         rdx,[rbp+0B0h]
                    00
  0000000000000520: 48 8D 4D A0        lea         rcx,[rbp-60h]
  0000000000000524: E8 00 00 00 00     call        ?printFunctionAssembly@@YA_NAEAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  0000000000000529: 84 C0              test        al,al
  000000000000052B: 75 43              jne         0000000000000570
  000000000000052D: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BN@GJGGCPHM@Failed?5to?5find?5assembly?5for?5@]
                    00
  0000000000000534: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  000000000000053B: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000540: 48 8D 95 B0 00 00  lea         rdx,[rbp+0B0h]
                    00
  0000000000000547: 48 83 BD C8 00 00  cmp         qword ptr [rbp+0C8h],0Fh
                    00 0F
  000000000000054F: 48 0F 47 95 B0 00  cmova       rdx,qword ptr [rbp+0B0h]
                    00 00
  0000000000000557: 4C 8B 85 C0 00 00  mov         r8,qword ptr [rbp+0C0h]
                    00
  000000000000055E: 48 8B C8           mov         rcx,rax
  0000000000000561: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  0000000000000566: B2 0A              mov         dl,0Ah
  0000000000000568: 48 8B C8           mov         rcx,rax
  000000000000056B: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
  0000000000000570: 48 8D 4D B0        lea         rcx,[rbp-50h]
  0000000000000574: E8 00 00 00 00     call        ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
  0000000000000579: 48 85 C0           test        rax,rax
  000000000000057C: 75 1D              jne         000000000000059B
  000000000000057E: 48 8B 45 A0        mov         rax,qword ptr [rbp-60h]
  0000000000000582: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000586: 48 8D 45 A0        lea         rax,[rbp-60h]
  000000000000058A: 48 03 C8           add         rcx,rax
  000000000000058D: 45 33 C0           xor         r8d,r8d
  0000000000000590: BA 02 00 00 00     mov         edx,2
  0000000000000595: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  000000000000059B: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BA@KKAGPCDA@Timing?5results?6@]
                    00
  00000000000005A2: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000005A9: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000005AE: 48 8D 15 00 00 00  lea         rdx,[??_C@_0DB@FBLCIHNG@?6?$CL?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?$CL?9?9?9?9?9?9@]
                    00
  00000000000005B5: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000005BC: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000005C1: 48 8D 15 00 00 00  lea         rdx,[??_C@_0DA@KAMFDGHA@?$HM?5Function?5?5?5?5?5?5?5?5?5?5?5?5?5?$HM?5Time?5?$CI@]
                    00
  00000000000005C8: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000005CF: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000005D4: 48 8D 15 00 00 00  lea         rdx,[??_C@_0DA@JFIJABMP@?$CL?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?$CL?9?9?9?9?9?9?9@]
                    00
  00000000000005DB: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000005E2: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000005E7: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BK@MMLOIOIB@?$HM?5add?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$HM?5@]
                    00
  00000000000005EE: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000005F5: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000005FA: 48 8D 15 00 00 00  lea         rdx,[?fixed@std@@YAAEAVios_base@1@AEAV21@@Z]
                    00
  0000000000000601: 48 8B C8           mov         rcx,rax
  0000000000000604: FF 15 00 00 00 00  call        qword ptr [__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z]
  000000000000060A: 0F 28 CE           movaps      xmm1,xmm6
  000000000000060D: 48 8B C8           mov         rcx,rax
  0000000000000610: FF 15 00 00 00 00  call        qword ptr [__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z]
  0000000000000616: 48 8B C8           mov         rcx,rax
  0000000000000619: 48 8D 15 00 00 00  lea         rdx,[??_C@_0N@OHGEIAKM@?5?5?5?5?5?5?5?5?5?5?$HM?6@]
                    00
  0000000000000620: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000625: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BK@HHANMNFC@?$HM?5add_vectorized?5?5?5?5?5?5?5?$HM?5@]
                    00
  000000000000062C: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000633: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000638: 48 8D 15 00 00 00  lea         rdx,[?fixed@std@@YAAEAVios_base@1@AEAV21@@Z]
                    00
  000000000000063F: 48 8B C8           mov         rcx,rax
  0000000000000642: FF 15 00 00 00 00  call        qword ptr [__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z]
  0000000000000648: 0F 28 CF           movaps      xmm1,xmm7
  000000000000064B: 48 8B C8           mov         rcx,rax
  000000000000064E: FF 15 00 00 00 00  call        qword ptr [__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z]
  0000000000000654: 48 8B C8           mov         rcx,rax
  0000000000000657: 48 8D 15 00 00 00  lea         rdx,[??_C@_0N@OHGEIAKM@?5?5?5?5?5?5?5?5?5?5?$HM?6@]
                    00
  000000000000065E: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000663: 48 8D 15 00 00 00  lea         rdx,[??_C@_0DA@JFIJABMP@?$CL?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?$CL?9?9?9?9?9?9?9@]
                    00
  000000000000066A: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000671: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000676: 41 8B DC           mov         ebx,r12d
  0000000000000679: 48 8B 95 C8 00 00  mov         rdx,qword ptr [rbp+0C8h]
                    00
  0000000000000680: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000684: 76 37              jbe         00000000000006BD
  0000000000000686: 48 FF C2           inc         rdx
  0000000000000689: 48 8B 8D B0 00 00  mov         rcx,qword ptr [rbp+0B0h]
                    00
  0000000000000690: 48 8B C1           mov         rax,rcx
  0000000000000693: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000069A: 72 1C              jb          00000000000006B8
  000000000000069C: 48 83 C2 27        add         rdx,27h
  00000000000006A0: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000006A4: 48 2B C1           sub         rax,rcx
  00000000000006A7: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000006AB: 48 83 F8 1F        cmp         rax,1Fh
  00000000000006AF: 76 07              jbe         00000000000006B8
  00000000000006B1: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  00000000000006B7: CC                 int         3
  00000000000006B8: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000006BD: 4C 89 A5 C0 00 00  mov         qword ptr [rbp+0C0h],r12
                    00
  00000000000006C4: 48 C7 85 C8 00 00  mov         qword ptr [rbp+0C8h],0Fh
                    00 0F 00 00 00
  00000000000006CF: C6 85 B0 00 00 00  mov         byte ptr [rbp+0B0h],0
                    00
  00000000000006D6: 48 8B 95 E8 00 00  mov         rdx,qword ptr [rbp+0E8h]
                    00
  00000000000006DD: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000006E1: 76 37              jbe         000000000000071A
  00000000000006E3: 48 FF C2           inc         rdx
  00000000000006E6: 48 8B 8D D0 00 00  mov         rcx,qword ptr [rbp+0D0h]
                    00
  00000000000006ED: 48 8B C1           mov         rax,rcx
  00000000000006F0: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000006F7: 72 1C              jb          0000000000000715
  00000000000006F9: 48 83 C2 27        add         rdx,27h
  00000000000006FD: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000701: 48 2B C1           sub         rax,rcx
  0000000000000704: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000708: 48 83 F8 1F        cmp         rax,1Fh
  000000000000070C: 76 07              jbe         0000000000000715
  000000000000070E: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  0000000000000714: CC                 int         3
  0000000000000715: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000071A: 4C 89 A5 E0 00 00  mov         qword ptr [rbp+0E0h],r12
                    00
  0000000000000721: 48 C7 85 E8 00 00  mov         qword ptr [rbp+0E8h],0Fh
                    00 0F 00 00 00
  000000000000072C: C6 85 D0 00 00 00  mov         byte ptr [rbp+0D0h],0
                    00
  0000000000000733: 48 8B 45 A0        mov         rax,qword ptr [rbp-60h]
  0000000000000737: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000073B: 4C 89 6C 0D A0     mov         qword ptr [rbp+rcx-60h],r13
  0000000000000740: 48 8B 45 A0        mov         rax,qword ptr [rbp-60h]
  0000000000000744: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000748: 8D 91 50 FF FF FF  lea         edx,[rcx-0B0h]
  000000000000074E: 89 54 0D 9C        mov         dword ptr [rbp+rcx-64h],edx
  0000000000000752: 48 8D 4D B0        lea         rcx,[rbp-50h]
  0000000000000756: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  000000000000075B: 48 8D 4D B8        lea         rcx,[rbp-48h]
  000000000000075F: FF 15 00 00 00 00  call        qword ptr [__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ]
  0000000000000765: 48 8D 4D 50        lea         rcx,[rbp+50h]
  0000000000000769: FF 15 00 00 00 00  call        qword ptr [__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ]
  000000000000076F: 90                 nop
  0000000000000770: 48 8B 95 08 01 00  mov         rdx,qword ptr [rbp+108h]
                    00
  0000000000000777: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000077B: 76 37              jbe         00000000000007B4
  000000000000077D: 48 FF C2           inc         rdx
  0000000000000780: 48 8B 8D F0 00 00  mov         rcx,qword ptr [rbp+0F0h]
                    00
  0000000000000787: 48 8B C1           mov         rax,rcx
  000000000000078A: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000791: 72 1C              jb          00000000000007AF
  0000000000000793: 48 83 C2 27        add         rdx,27h
  0000000000000797: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000079B: 48 2B C1           sub         rax,rcx
  000000000000079E: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000007A2: 48 83 F8 1F        cmp         rax,1Fh
  00000000000007A6: 76 07              jbe         00000000000007AF
  00000000000007A8: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  00000000000007AE: CC                 int         3
  00000000000007AF: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000007B4: 4C 89 A5 00 01 00  mov         qword ptr [rbp+100h],r12
                    00
  00000000000007BB: 48 C7 85 08 01 00  mov         qword ptr [rbp+108h],0Fh
                    00 0F 00 00 00
  00000000000007C6: C6 85 F0 00 00 00  mov         byte ptr [rbp+0F0h],0
                    00
  00000000000007CD: 48 85 F6           test        rsi,rsi
  00000000000007D0: 74 44              je          0000000000000816
  00000000000007D2: 48 8D 86 00 01 00  lea         rax,[rsi+100h]
                    00
  00000000000007D9: 48 2B C6           sub         rax,rsi
  00000000000007DC: 48 C1 F8 02        sar         rax,2
  00000000000007E0: 48 8D 14 85 00 00  lea         rdx,[rax*4]
                    00 00
  00000000000007E8: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000007EF: 72 1C              jb          000000000000080D
  00000000000007F1: 48 83 C2 27        add         rdx,27h
  00000000000007F5: 48 8B 4E F8        mov         rcx,qword ptr [rsi-8]
  00000000000007F9: 48 2B F1           sub         rsi,rcx
  00000000000007FC: 48 8D 46 F8        lea         rax,[rsi-8]
  0000000000000800: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000804: 0F 87 C9 00 00 00  ja          00000000000008D3
  000000000000080A: 48 8B F1           mov         rsi,rcx
  000000000000080D: 48 8B CE           mov         rcx,rsi
  0000000000000810: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000815: 90                 nop
  0000000000000816: 4D 85 F6           test        r14,r14
  0000000000000819: 74 44              je          000000000000085F
  000000000000081B: 49 8D 86 00 01 00  lea         rax,[r14+100h]
                    00
  0000000000000822: 49 2B C6           sub         rax,r14
  0000000000000825: 48 C1 F8 02        sar         rax,2
  0000000000000829: 48 8D 14 85 00 00  lea         rdx,[rax*4]
                    00 00
  0000000000000831: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000838: 72 1C              jb          0000000000000856
  000000000000083A: 48 83 C2 27        add         rdx,27h
  000000000000083E: 49 8B 4E F8        mov         rcx,qword ptr [r14-8]
  0000000000000842: 4C 2B F1           sub         r14,rcx
  0000000000000845: 49 8D 46 F8        lea         rax,[r14-8]
  0000000000000849: 48 83 F8 1F        cmp         rax,1Fh
  000000000000084D: 0F 87 87 00 00 00  ja          00000000000008DA
  0000000000000853: 4C 8B F1           mov         r14,rcx
  0000000000000856: 49 8B CE           mov         rcx,r14
  0000000000000859: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000085E: 90                 nop
  000000000000085F: 48 85 FF           test        rdi,rdi
  0000000000000862: 74 33              je          0000000000000897
  0000000000000864: 4C 2B FF           sub         r15,rdi
  0000000000000867: 49 83 E7 FC        and         r15,0FFFFFFFFFFFFFFFCh
  000000000000086B: 49 81 FF 00 10 00  cmp         r15,1000h
                    00
  0000000000000872: 72 18              jb          000000000000088C
  0000000000000874: 49 83 C7 27        add         r15,27h
  0000000000000878: 48 8B 4F F8        mov         rcx,qword ptr [rdi-8]
  000000000000087C: 48 2B F9           sub         rdi,rcx
  000000000000087F: 48 8D 47 F8        lea         rax,[rdi-8]
  0000000000000883: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000887: 77 58              ja          00000000000008E1
  0000000000000889: 48 8B F9           mov         rdi,rcx
  000000000000088C: 49 8B D7           mov         rdx,r15
  000000000000088F: 48 8B CF           mov         rcx,rdi
  0000000000000892: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000897: 8B C3              mov         eax,ebx
  0000000000000899: 48 8B 8D A0 14 00  mov         rcx,qword ptr [rbp+14A0h]
                    00
  00000000000008A0: 48 33 CC           xor         rcx,rsp
  00000000000008A3: E8 00 00 00 00     call        __security_check_cookie
  00000000000008A8: 4C 8D 9C 24 D0 15  lea         r11,[rsp+15D0h]
                    00 00
  00000000000008B0: 49 8B 5B 30        mov         rbx,qword ptr [r11+30h]
  00000000000008B4: 49 8B 73 40        mov         rsi,qword ptr [r11+40h]
  00000000000008B8: 49 8B 7B 48        mov         rdi,qword ptr [r11+48h]
  00000000000008BC: 41 0F 28 73 F0     movaps      xmm6,xmmword ptr [r11-10h]
  00000000000008C1: 41 0F 28 7B E0     movaps      xmm7,xmmword ptr [r11-20h]
  00000000000008C6: 49 8B E3           mov         rsp,r11
  00000000000008C9: 41 5F              pop         r15
  00000000000008CB: 41 5E              pop         r14
  00000000000008CD: 41 5D              pop         r13
  00000000000008CF: 41 5C              pop         r12
  00000000000008D1: 5D                 pop         rbp
  00000000000008D2: C3                 ret
  00000000000008D3: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  00000000000008D9: 90                 nop
  00000000000008DA: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  00000000000008E0: 90                 nop
  00000000000008E1: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter_noinfo_noreturn]
  00000000000008E7: CC                 int         3

main$dtor$0:
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ

main$dtor$1:
  0000000000000000: 48 8D 8A 70 00 00  lea         rcx,[rdx+70h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ

main$dtor$2:
  0000000000000000: 48 8D 8A 88 00 00  lea         rcx,[rdx+88h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ

main$dtor$3:
  0000000000000000: 48 8D 8A F0 01 00  lea         rcx,[rdx+1F0h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

main$dtor$4:
  0000000000000000: 48 8D 8A A0 00 00  lea         rcx,[rdx+0A0h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ

main$dtor$5:
  0000000000000000: 48 8D 8A D0 01 00  lea         rcx,[rdx+1D0h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

main$dtor$6:
  0000000000000000: 48 8D 8A B0 01 00  lea         rcx,[rdx+1B0h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

  Summary

          10 .bss
         CE8 .chks64
          9A .data$r
         190 .data$rs
          A8 .debug$S
         13D .drectve
         3FC .pdata
         2FF .rdata
         4CC .rdata$r
        32DB .text$mn
         231 .text$x
           4 .voltbl
         76B .xdata
          F8 .xdata$x
